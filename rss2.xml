<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>NX の 博客</title>
    <link>https://nickxu.me/</link>
    
    <image>
      <url>https://nickxu.me/static/favicon.jpg</url>
      <title>NX の 博客</title>
      <link>https://nickxu.me/</link>
    </image>
    
    <atom:link href="https://nickxu.me/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>这家伙真勤奋，什么都留下了</description>
    <pubDate>Tue, 28 Oct 2025 18:06:55 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>编程十年：那些人，那些事，那些瞬间</title>
      <link>https://nickxu.me/post/from-hello-world-to-tencent.html</link>
      <guid>https://nickxu.me/post/from-hello-world-to-tencent.html</guid>
      <pubDate>Tue, 28 Oct 2025 17:59:49 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;Warning：&lt;/p&gt;
&lt;p&gt;此为非常早期版本，并且还有一大段（预计 4～6k）没有写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://image.nickxu.me/20251027030432268.png&quot; alt=&quot;ae06fa4a04c19d587b81989a97bf7440&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一篇回忆录，作于重返腾讯之时&lt;/p&gt;
&lt;p&gt;致家人，致她，致朋友，致所有在我生命中留下痕迹的人&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;天空终于放晴，来的时候一直风雨交加，我正在从环滩岛返回哲斯顿码头的船上，跟随着海浪上下颠簸&lt;/p&gt;
&lt;p&gt;疲惫的身体正靠在船壳上休息，只能听见船体不断拍打海浪的声音，船上没有一个人说话，我望向眼前的大海，海岛，天空，双眼惬意地放空——是久违的心流，在这一刻，很难不开始回忆过去&lt;/p&gt;
&lt;p&gt;我开始回想起最近几天在马来西亚的旅程，从亚庇的海滩，回到山打根的原始丛林，再回到吉隆坡的繁华都市…但，思绪的跳跃难以控制，很快来到了启程前收到 Offer 的那种</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>Warning：</p><p>此为非常早期版本，并且还有一大段（预计 4～6k）没有写</p></blockquote><p><img src="https://image.nickxu.me/20251027030432268.png" alt="ae06fa4a04c19d587b81989a97bf7440"></p><blockquote><p>一篇回忆录，作于重返腾讯之时</p><p>致家人，致她，致朋友，致所有在我生命中留下痕迹的人</p></blockquote><hr><p>天空终于放晴，来的时候一直风雨交加，我正在从环滩岛返回哲斯顿码头的船上，跟随着海浪上下颠簸</p><p>疲惫的身体正靠在船壳上休息，只能听见船体不断拍打海浪的声音，船上没有一个人说话，我望向眼前的大海，海岛，天空，双眼惬意地放空——是久违的心流，在这一刻，很难不开始回忆过去</p><p>我开始回想起最近几天在马来西亚的旅程，从亚庇的海滩，回到山打根的原始丛林，再回到吉隆坡的繁华都市…但，思绪的跳跃难以控制，很快来到了启程前收到 Offer 的那种激动，五月时决定放弃留学的纠结，到去年结束实习时的那种如释重负…就像在 macOS 中浏览 Time Machine，双指在触控板上疯狂滑动</p><p>这个月底又要入职腾讯了，这次应该会待很久，回首从小到大走来的路，仔细一想，从第一个 Hello World 开始到现在，貌似正好是十年</p><p>我读过许多人的编程十年，每个人都有他的记忆，而现在，或许该轮到我来写了</p><p>趁那些珍贵的瞬间还没有完全褪去</p><p>而且正好今年到现在还没有完成一篇博客（真该死哇为什么不写）</p><p>那么，开始吧，但我不保证全是编程相关的事情，并且这篇我打算不配任何图了，很多素材都很难找（按我的风格要么全文图文并茂，要么干脆一张图都没有）</p><p>总之想到哪写到哪吧，纯意识流了属于是</p><hr><h1 id="故事开始之前｜小学">故事开始之前｜小学</h1><p>我觉得其实可以再往前追溯一下，到我的小学时代，在这里，有我对计算机最开始的启蒙</p><p>我家里算是条件不算差的了，如果没记错的话，最开始父母就各有一台笔记本电脑，家里还有一台台式</p><p>小时候对父亲的 ThinkPad 很感兴趣，经常看着他在桌边工作</p><p>当时用的还是 XP，壁纸我印象比较深刻，中心是在水边的一座木房子，拍摄者在一段木栈桥上，屋前是水面，后面是一片森林，上面是蓝天白云，不知道是自带的，还是他拍的照片</p><p>我也坐在旁边看，看着他打字，一般是在用 Foxmail 回邮件，对这一切都很好奇</p><p>我注意到键盘最上面有一个蓝色的按键，就问他这是做什么的，他说不知道，然后我就去按，他让我别乱搞，吓我说这按了就会关机哈哈哈</p><p>现在想起来，这型号应该是 ThinkPad X200，那个蓝色的按键按了应该会弹出一个帮助程序</p><p>还有一次，我问他桌面上这么多图标，为什么有的会有个小箭头，有的又没有，他当时很忙，说了句不知道（后来，我才知道这叫做快捷方式</p><p>听上去很平常不是吗？所有小孩子都是这么好奇，我想，在另一个时空里，我可能也会像大多数人一样平凡地长大</p><p>但在我这里并且如此，长久以来，我都以拥有一个开明的父亲为荣</p><p>他可能注意到我对计算机很感兴趣，二年级的时候，意想不到的事情发生了，他说他换电脑的话会把这台笔记本给我，当时的我，不知道高兴成什么样子</p><p>在我看来，为人父母不用考试是世间的一大遗憾，而对于我的父亲，在各方面，我都感觉他无可挑剔，他从来都是那么坚定而温和，性格极好，家里从没吵过架（关键他长得还特别帅），在我成长的整个过程中，他始终在我的背后支持我</p><p>我觉得，能遇上这样的父亲确实是我的荣幸</p><p>最终到三年级的时候，那台 ThinkPad 从他手上退役了，当时在小区里找了个叔叔，重新装了 Windows 7 交给我，从那以后，我也拥有了一台属于自己的笔记本电脑，连同配套的一个黑色的皮包</p><p>小时候的我，经常把我的 ThinkPad，电源线，鼠标都装好在包里，幻想能带着去到任何一个地方，但它并不完美…比方说电池很小，坚持不了很久，并且看上去也挺笨重（虽然但是，ThinkPad 的键盘手感是真的好哇</p><p>后来我又不知道从哪里听到一句话，大意是：程序员代表着这世界上最先进的生产力，他们能在世界上任何一个国家生活，对此，我也充满幻想</p><p>现在来看，最贴切当时幻想的设备，或许正是我目前手上的 MacBook</p><p>虽然有些理想主义，确实足够浪漫：如果我真的打算做数字游民的话，确实能在这颗星球上任何有网的地方坐下，完成我的工作（有一说一，我最近也体验了大半年的 remote，结论是需要高度的自律</p><p>说回小时候，感觉小孩子对数码产品上手确实快，无论学什么都是一教就会。怎么切输入法？怎么复制粘贴？怎么上网？怎么下载？怎么安装卸载？怎么换壁纸？死机怎么办？怎么按 Ctrl+Alt+Delete 然后呼出任务管理器？蓝屏又怎么办？怎么强制重启？感觉是一瞬间就都会了</p><p>之后最吸引我的肯定就是打游戏，包括经典的 4399 上的 Flash 小游戏，红警 2，包括后来的 Minecraft（我记得我是 1.8 版本入坑的），以及后来五年级还是六年级的时候，有个同学教会了我怎么下 Steam，并且拉着我一起玩 Team Fortress 2（就靠着家里的 10M 小水管慢慢下），我也不知道为什么在每个阶段都能遇到很超前的人，他后来居然告诉了我一款游戏叫做坎巴拉太空计划，然后向我疯狂安利（要知道，这可是在小学，你可能不知道这是什么游戏），后来在初中我确实开始尝试去玩，很快沉迷其中，并且选择用里面的小绿人作为头像，这个头像一直用到现在（真爱了属于是</p><p>在这个过程中很自然地熟悉了电脑日常怎么使用，上网搜索下载，软件安装卸载，Windows 各种个性化设置</p><p>我记得当时老爸的新 ThinkPad 预装的是 Windows8，鼠标滑倒屏幕右边会调出 Charms bar ，也就是超级按钮，然后我就把我的任务栏也固定到右边，把自动隐藏打开，最后的效果是滑倒右边调任务栏</p><p>虽然说自己努力解决了很多问题，但是有些问题当时确实不懂，后来长大了才明白</p><p>其中一件是，我当时想玩红警 3，下载搜出来有两个版本，一个是原版的，大小 1.6G ，另一个加了起义时刻的资料片，大小好像是 4 个 G</p><p>记得之前我爸稍微给我讲了下计算机的各个组成？至少我知道程序运行是需要加载到内存的，并且我知道我的内存只有 2 个 G</p><p>然后我就想，这个游戏有 4G，我内存不够会不会直接蓝屏了</p><p>所以没敢下那个大的版本 <s>（大学补票了正版，起义时刻还是躺在库里没玩过</s></p><p>后来当然知道了不是这么一回事，至于是为什么，自然是局部性原理</p><p>还有一件事是那时候 Minecraft 玩起来很卡，并且玩一段时间就会报错，弹出一堆英文，我也看不懂</p><p>经常去同学家电脑玩，现在想起来应该是爆内存了，同学家台式内存有 4G</p><p>有一说一小学的时候折腾的东西还不是很多，到初中才开始大量接受新知识</p><hr><h1 id="开始的开始｜初中-3-年">开始的开始｜初中 3 年</h1><p>我成长最快的时期，非常充实的三年，也是最幸福的三年 <s>（比起去腾讯我更想回去读初中</s></p><p>能讲的真的很多，等我一件件来</p><p>首先可能是装系统？我记得是初一的事情，说来也是好笑，当时太卡了想重装下系统，当年 360 还是国民级软件，我看见里面有个一键重装的功能，所以想试一下</p><p>我记得那天应该是个周五？老爸老妈还没下班回来，是我偷偷把电脑拿出来的</p><p>但是装到一半的时候，突然传来了开门声，我只好快速合上屏幕塞进抽屉里，祈祷这不经用的电池能坚持住</p><p>但是很遗憾，它没能做到，但我再次开机的时候，发现再也开不了机了，很明显是坏了</p><p>我很慌，只能用家里另一台电脑上网搜，当时 360 还自带一个论坛，我在上面提问</p><p>很快有人告诉我，系统已经完全坏了，要重装</p><p>然后我就跟着文字教程，怎么去 MSDN 上下载系统镜像，怎么用 U 盘做启动盘，怎么进 BIOS 调启动顺序，怎么进 PE，怎么装操作系统，折腾下来真的把问题解决了，没有求助任何人</p><p>我不想在这里罗列那些计算机名词，我只能说发现了新天地，PE 环境里的各种工具真的让我开了眼，特别是那个经典的 BOOTICE，那么小，却又那么强大（当时还是从 Legacy 到 UEFI 的过渡阶段）</p><p>然后我就在 MSDN 上下载各个版本的 Windows 甚至是 DOS 安装着玩，当时 Windows10 还刚刚推出（那时有一年免费升级，但是激活工具也是随便激活罢了），我只记得装上去很卡，但是界面确实真的好看</p><p>不过一个人单打独斗的日子很快就结束了，我认识了一个志同道合的朋友，这里叫他周好了，整个初中我们真的是无话不谈形影不离，直到现在还一直在联系</p><p>当时还有一个 buff 是我初中三年基本都是我当电教委员（其实高中三年也是），所以每天课余时间我站着在讲台上就很自然，和他一起折腾各种奇技淫巧，比方说如果我要在课间把上一堂课老师打开的各种 PPT 或者其他课件的窗口关掉</p><p>我就会帅气地按下 Ctrl+Shift+Esc 呼出任务管理器，然后找到 explorer.exe 这个进程，杀掉</p><p>这样桌面上所有的窗口都会跟着崩溃（这是 Windows7 早期版本的一个特性）屏幕一片黑就剩一个任务管理器，然后，再点出「运行」窗口，输入 cmd 并回车（这个黑色的命令行界面真的太帅了），最后键入 explore 并回车把桌面拉起来（当时 explore.exe 崩溃后还没有自动拉起的逻辑）</p><p>当时我们研究过怎么最快打开控制面板，结论是 Win+E 打开 explorer，然后按 Backspace 就能找到</p><p>嗯…不过上面讲了装系统，感觉先顺着把这块讲完吧</p><p>我记得初二的时候电脑有一次坏了</p><p>然后我就跟班主任说重装一下系统，他同意了</p><p>之后初二初三我们就一发不可收拾，隔一段时间就会重装一下，两只手不知道有没有，一只手肯定数不过来</p><p>我也有点忘了当时为什么要重装那么多次，我自己的我自己的 ThinkPad 经常重装，很多时候是心情不好就直接重装，就像把桌面清空，给人一种重新开始的感觉</p><p>所以经常能看见中午放学以及晚自习结束我们两个在讲台上，<s>而且折腾出过一些事故</s></p><p>我记得有一次是装完了忘记把启动分区激活了（在 MBR分区表格式下，启动分区必须被标记为「活动分区」），然后死活启动不了</p><p>然后还有一次好像是我们中午不小心进 PE 把当前的 C 盘格了，这时候已经没有时间了必须马上回宿舍</p><p>我中午完全睡不着觉，只等下午 2 点宿舍门一开就使劲往教学楼跑，2:30 上课我还有不到半小时的时间</p><p>接着是熟练地插 U 盘进 PE 装 Windows10 <s>（因为装 Windows10 我其实没少被初三的班主任批）</s> ，进入桌面后装 Office 并激活等等，最后成功搞定</p><p>还有一件事很有意思就是当年的 Windows10 在 OOBE 界面是会吟诗作赋的，非常多的诗句</p><p>我就说一句，“海内存知己，天涯若比邻”，不知道有没有勾引起你的回忆</p><p>OK，接下来说下当年研究过的奇技淫巧，我在这就说一个</p><p>就是你可以通过命令行以 <code>..</code> 为结尾来创建文件夹，这在图形界面下是做不到的</p><p>然后非常有意思的是，你在 explorer 里是没法打开这个文件夹的，也没法删除，只能通过命令行访问</p><p>如果没记错的话你可以再进一层目录，在这里呼出 explorer，这时候就能打开</p><p>我也不知道这是周从哪里学到的，我只能说是非常的帅，我们会把这里当做保险箱把个人文件都放在这里面</p><p>说到命令行，那能讲的真的是太多了</p><p>我记得是初一的一天，周第一次向我展示了怎么运行 cmd 打开一个命令行窗口</p><p>然后当时他用 <code>ping</code> 命令去 ping 我们班主任的 IP <s>，然后告诉我他在 DDoS（好像是）</s></p><p>之后我就开始通过 <code>help</code> 了解各种命令，包括都有什么参数，怎么传参数什么的</p><p><s>比较印象深刻的有为了避免老师拖堂用 <code>shutdown</code> 做定时关机</s></p><p>到后来，他不知道从哪里搞来一个 <a href="https://www.cn-dos.net/forum/viewthread.php?tid=18321">CMD命令速查手册.bat</a> ，运行之后会有一个很长的 HTML，里面是各种命令的说明</p><p>你相信吗，我后来把这个打印出来了，用小区管理处的打印机</p><p>然后我妈当时给了我一个很厚的装文件的…我不知道正式名字叫什么，就是一大本，里面有很多塑料薄膜，当时是用来装试卷错题的并且用来看的</p><p>我把试卷都拿出来，把打印的一百多页 A4 纸一页一页放进去，然后我们两个天天拿着这个看，在讲台上各种试（之后我们还会去<a href="http://bcn.bathome.net/s/tool/index.html">批处理之家</a>下各种第三方命令行工具玩）</p><p>最常用的命令好像是 <code>chkdsk</code> ，用来检查磁盘，并且运行起来非常帅（那时我才知道，小时 XP 不正常关机之后会在一个蓝色界面停留很久，实际上就是在执行 chkdsk）</p><p>很快我们会写批处理脚本了，写过简单的 if 输密码判断</p><p>后来他找来了一个专门写 bat 的编辑器，叫 iBAT</p><p>我们找了很多很有意思的脚本，比方说挂载虚拟驱动器把 26 个盘符占满（点进我的电脑全是硬盘），不断启动自身（算是病毒吧），非常多</p><p>除了完全好玩的脚本，其实也写过真正有用的，当时老师过来上课都要按下 Win+R 并且键入自己的 IP 来访问网络共享，但是这很麻烦，并且有时候会输错（最经典的是斜杠打成反斜杠）</p><p>然后我们就写了几个 bat，就是简单的 start 跟上网络位置，这样双击 <code>语文.bat</code> 就能直接打开了</p><p>当然还有另一种方式是创建快捷方式，包括在高中就普及成这样子，但我认为写批处理脚本还是更好</p><p>因为如果是快捷方式的话，如果老师电脑没开机，explorer 的窗口就会卡在那里，直接未响应，并且要点好几下才能关掉</p><p>但是 bat 也就是那个黑框在那里执行不下去而已，可以直接关掉</p><p>让我想想还有什么，哦对了，我记得有个物理老师他把他的共享加密了</p><p>因为学校的电脑肯定都是有还原系统的，重启之后直接还原 <s>（当然了重装之后就不存在了）</s>，每次访问都要输用户名和密码</p><p>所以简单的 start 就没法做到直接打开，然后我找了好久的命令都没有往凭据管理器写入的命令</p><p>后来发现挂载网络驱动器的命令可以添加参数指定用户名和密码，我们就先挂载一下，然后再卸载掉，这个密码就能存在凭据管理器了，之后再 start 就没问题</p><p>另外有一件趣事是改 IP</p><p>初中的时候老师的电脑是可以上网的，但是教室电脑不行，这其实是根据网段分流的？周把教室电脑的 IP 改成和老师的电脑同一个网段，这样就可以上网了，<s>我们当时甚至还想开网吧</s></p><p>还有一件事是我们当时折腾了 Windows To Go，但这个其实展开也没多少好说的</p><p>嗯…我还记得当时周会买一些很高大上的书 <s>（而我只买过 C 的哈哈哈，而且基本是 Hello World 水平）</s></p><p>印象深刻的有一本《逆向工程：核心原理》（不知道是不是叫这个名字），还有一本《白帽子讲 Web 安全》（后来他确实做安全去了）</p><p>那本逆向工程我还有些印象，很大一本，封面还是白底的有一个绿色的树叶，是韩国人写的翻译过来的</p><p>里面的 Windows 里的路径斜杠都是一个 W 加一个横杆（很久以后才知道这是韩元符号，他们的 Windows 里的斜杠都是这个符号）</p><p>这本书当时其实也看的不是很懂，只会傻傻的用 IDA Pro 打开一些 exe 看</p><p>但是我有一点记得很清楚，因为非常帅</p><p>就是介绍到 Windows 下 exe 的 PE 格式时，书里说有其中一段的开头是 MZ 两个字母，这是用来纪念 exe 的发明者（刚查了一下，其实是 MS‑DOS 可执行格式的设计者 Mark Zbikowski ，Windows 的 .exe 仍然保留是为了兼容性）</p><p>我感觉这真的太浪漫了，谁能想到随处可见的 exe 里面都有一个人的名字，就像蔡伦改进了造纸术，而从今后每一张纸上都有会他的名字，与此同时几乎所有人都不会注意到，非常的低调，非常的帅</p><p>基本上讲完了？我还记得初中的从周的嘴里了解过一些 Linux，他说有一种巴掌大的微型电脑叫做树莓派（埋下伏笔），有一天还在电脑上插了 U 盘，但启动的是 Ubuntu 的安装向导</p><p>我们当时校园卡是通过一台机子充钱的，支付不是联网的，有时候这机子会被敲得重启，命令行快速地滚动，他告诉我这个启动的界面是 Linux 的启动界面</p><p>初中的故事讲完了吗？实际上并没有，好了，各位，我们终于来到这里了，有些事情在前面其实并没有出现，但对我来说尤为重要</p><p>在这里，我想讲一个很长的故事，一个有些跑题的故事，一个高开低走的故事，其最终结局是一个 Bad Ending，并且一路上都是我的问题</p><p><s>（PS：这块写的挺差的，但是我真的撑不住每晚一遍遍回忆这些事情，原谅下班的我已经精疲力竭）</s></p><p>我一直在犹豫要不要写，最终还是决定写下来，一方面后面有些情节的确需要这些事才能推动，更重要的是，她大概已经都忘记了，而他从小到大又没有告诉过任何人，所以我可能是目前这世界上仍然记得这些事情的唯一人，并且我不希望看着它们有一天被彻底遗忘</p><p>那是独属于那两个涉世未深的孩子的故事，与我这个目前 22 岁天天忙着和生活高强度对线的牛马毫无关系（真难绷我现在一边写还一边有人 call 我），故事早就结束了，几乎没有再继续的可能（尽管我依然很想见她</p><p>故事的开始很简单，在初一下学期期中考试前夕的一个下午，在一个课间，他坐在教室后面，她坐在教室前面，他正好看着她，而她也正好扭过头来看着他</p><p>那一刻，他只觉得她长得真好看，想多看几眼，而她也一直看着他（我看了下我初一的时候的照片，感觉当时确实帅</p><p>很显然，他并不知道这一眼对他意味着什么，他会在此后的每一堂课看着她</p><p>他们那时候的女生都是被要求剪短发的，而她的头发很特别，发梢不是自然垂着的，也不是向内微微弯曲，而是向外向上有一些卷曲，很少见的那种，有些像一拳超人里的龙卷，当然也没那么夸张，属于是恰到好处</p><p>简单的说，她真的属于是很少见的那种，确实不是一般人…后来事实也证明她并非出身平凡（他当时确实没看走眼</p><p>我也不想多花笔墨了（毕竟的确跑题），总之就在那么一瞬间，他们俩的故事就这么开始了</p><p>而且是好到不能再好的开局，她一开始确实喜欢他</p><p>上课期间看来看去就不说了，我记得语文课讲到保尔和冬妮娅的时候，她真的是死死的盯着他看👀（她的眼睛也真的好看</p><p>然后我记得当时有门课要同学之间相互背书，她会主动找到他来背</p><p>然后有一件事非常搞笑我一定要记下来，就是他周末想写一个表白程序，毕竟他当时刚好学了点 C ，他就把 Hello World 稍微改了一下</p><p>I Love You, XXX （此处名字隐去）</p><p>然后他发给她</p><p>结果她运行不了，非常的好笑</p><p>因为他当时用的是很古老的 Turbo C/C++，编译出来是 16 位的，而 32 位操作系统可以向下兼容 16 位</p><p>但是她应该用的是 64 位（她说她在她爸的公司？），64 位运行不了 16 位程序</p><p>算是一件趣事</p><p>不过在这里我想提醒一下，这些事都源于我的一面之词，那既然是一面之词，很多地方就并非如我所想</p><p>但有一件事是毋庸置疑的，就是她实际上并不喜欢我，这一点她曾先后多次向我表示</p><p>或者说，我并不属于她会喜欢的人（而现在…大概率也不是，我自己都有很多方面不能让我满意</p><p>又或者说，她对他的好感很快就败光了，因为我真他妈的是个傻逼</p><p>一方面他确实不是很敢跟她说话，前面讲到她来找他背书，他居然直接签名结束了（这么好的机会不多交流下？</p><p>她有时可能确实想让他陪她说话，但是他绝大多数情况下只敢远远的看着她</p><p>我记得后来初三刚开始的时候，她下课的时候一直对着他看想让他过去陪她说话，但是他确实也知道，但是…他没敢去</p><p>后来他确实尝试主动接近她，想给她讲题，但是她也没再理他了</p><p>另一方面是他确实不会说话（讲真我现在都不怎么会，能少说就少说），而且他当时性格…怎么说呢，很多时候确实心高气傲</p><p>有件事确实存在，但是上下文我记得不是很清楚了，简单的说就是当时他坐在教室里，她和闺蜜走进来有事找他，边走边笑着猜他会说什么，就是她想听他说句俏皮话之类的，他当时也知道，确实也在想怎么说比较好，但是见面了她第一句语气有些…不知道怎么说，反正就是他随口接了一句很强硬的话（说话不过脑子属于是），气氛就搞的很糟糕</p><p>另外我记得她最开始很喜欢他的一个卡西欧计算器，就是高中才会用的很复杂的那种，上面有很多函数的按键，想让他送给她</p><p>不过这个计算器其实他爸的，所以他不愿意，但是很快他就后悔了，不过她也不再想要了（这个计算器高中的时候弄不见了，当时真的找了好久</p><p>当然最重要的是，当时他和她两个——确实没什么话好说的（真没用啊你？啊？怎么在女生面前一句话也说不出来？</p><p>简单地说就是兴趣完全不搭边吧，他甚至尝试给她讲过三体，你信吗？</p><p>而有一次她托人给了他一张纸条，里面记得是写了很多她玩的游戏，我只记得一个奇迹暖暖</p><p>我也知道她很喜欢看言情小说，但是我嘛…很明显，并非她所期望的书中的样子</p><p>所以更加严谨的表述是：她给过他很多次机会，但是他一次又一次地，让她失望</p><p>他上课的时候还是会一直看着她，但对她的喜欢纯纯是一厢情愿罢了</p><p>很遗憾，我总是那么没用，她想要的，我都没能给她</p><p>不过我可能的确也给她留下过一些比较正面的回忆， <s>不知道无数次找我要作业抄算吗？</s>  （有时候 QQ 找我拍照给她，有时候每周返校之后看着对我笑，然后我就会知趣的把作业给她），我写一件印象深刻的吧</p><p>记得在一次年级的晚会，其中一个舞蹈节目也有我们班的女生参与（我记得她们化妆画了很久），我们坐在下面，她在 C 位，穿着一身黑，BGM 是《我在人民广场吃炸鸡》，这块上下文很长，完全写不下</p><p>我记忆最深刻的是她那天真的很漂亮，特别是下台后她坐在我们班右边的空着的凳子，顶灯是关着的，只有舞台的光打在她的脸蛋上，勾勒出一条弧线，令人窒息</p><p><s>（后来高中的时候也有晚会，但是我真的看不下去，只能不断地想到她，最后受不了只能一个人去机房刷题</s></p><p>而这天，也正好是她生日（后来我才知道这并不是她实际的生日，我也不知道她为什么在 QQ 上留这一天，可能是她喜欢的 idol 的），我早早地在一张便利贴上写好了祝生日快乐的话，离场回教室的时候，我拜托一个女生交给她</p><p>回到教室坐下，我一张便利贴很快传到我的手中，上面的内容是——“谢谢！”（这张便利贴我现在还留着）</p><p>我转头看向她，她正微笑地看着我</p><p>教室很安静，只有班主任在上面讲话，她默默地看着我，我也默默地看着她</p><p>目不转睛，就这样一直看着</p><p>我真想让这一刻成为永远</p><p>她给我留下的回忆是真的多，这里再写一件事吧</p><p>有一天她的闺蜜的校卡掉在了走廊上，正好被我捡到</p><p>校卡套里面有一张拍立得，是她和她的闺蜜的合照，在一个楼梯间</p><p>我偷偷把照片留下，把校卡交给了她的闺蜜，而她们也很快发现了照片不见了，很容易猜到被我拿了（</p><p>然后中午放学的时候，她靠在门框上不让我走哈哈哈 <s>，我只能装傻</s></p><p>然后那张照片我的确看了一中午，但是最终下午还回去了</p><p>而就像上面说的，我其实并不讨她喜欢 <s>，但是我确实死缠烂打，</s> 关系有时挺好有时候差</p><p>我知道她确实不喜欢我…有段时间我看她她还会用书本挡住</p><p>但再到后来…总而言之就是一种很微妙的关系，我无法完全理解，也无法完整地表述，可能就是，独属于那个年纪的…</p><p>到初三的时候，特别是下学期快中考的时候，我们可能真的在珍惜我们之间的关系（纯一面之词</p><p>我们都知道即将分别，我们会继续读同一所高中，但是她会去非常远的新校区，而我，则会留在这边的高中部</p><p>我记得当时每个人都有个水壶，教室旁边有个饮水机，所有人早上过来都会去排队打水，然后我每天都是很早到教室，过来之后第一件事就是给她的水壶打水。上课的时候我也会经常看她，她有时候也会看着我，有时候老师讲到「那方面」的话题的时候她真的会对我笑。每天晚自习结束的时候，都会有几分钟全校的通报，大概是每天有很多个项目每个班的评比之类的，会要求所有人坐好认真听，而我每次都会安静地看着她，她也会安静地看着我…她真好看哇</p><p>最让我印象深刻的是在一次晚自习，我发烧生病了，要回家</p><p>我慢慢走出教室，最后回头想看一眼，所有人都低着头写作业，却发现她，正抬着头安静地看着我，那一刻，我不知道该怎么形容</p><p>我走不动路，这就是被爱的感觉吗？我真的不知道</p><p>我知道的是，在后来的无数个夜晚，在我最需要支持与陪伴的时候，我会无数次想起她</p><p>我看着她，一步步走远，她目送着我离开，直到我走到楼梯，离开她的视线…</p><p>而我见到她的最后一面，是在谢师宴上，这下是真的要离别了</p><p>我们时不时相互看着对方，我知道她在等，在等我的道别</p><p>当时她想要什么？我真的不知道，我只知道他…终究还是没有勇气迈出这一步</p><p>最后，他比她先走了，把她留在了那里</p><p>我现在最后悔的是，没有带她去走廊，好好说一些一直想说的话</p><p>故事就这样，暂时告一段落，我描绘地肯定过于美好了，我知道我留给她的印象其实并不好</p><p>但不管怎么说，她给我的感觉，后来确实没有其他人能给到</p><p>就像是见过大海的人，再看别处的大江大河，也觉得平淡无奇</p><p>也就是所谓的，观于海者难为水</p><p>但是我记得她，我记得她的所有，尽管到现在 7 年没有见过面，我感觉还能一直讲下去</p><p>我会永远记得，那个在课间和闺蜜拉着手在走廊边走边跳的那个女孩</p><p>她的发梢卷曲着我的整个青春</p><p>未待完续</p><hr><h1 id="孤独与信念｜高中-3-年">孤独与信念｜高中 3 年</h1><p><s>好啦，现在时间到了高中，时间片用完了，这边调度器切换个上下文，继续主线程</s></p><p>我其实对高中没有太多回忆，就像是下了战场的士兵不愿回忆过去，尽力将这一块记忆抹去</p><p>我知道确实是有怀念高中生活的人，但是我从不怀念，从战场下来只可能怀念战友，不可能怀念战场</p><p><s>而且…没有她的生活，一开始确实很难适应（这块还是留在后边再说吧</s></p><p>另一个问题是，我在高中没有遇到像周一样志同道合的朋友，这下是双重孤独了</p><p>但对计算机的热爱并没有停止，在高中我第一次上手了 Linux，第一次买了服务器和域名搭建网站，第一次升级硬件，当然了，也是第一次开始写博客</p><p>另外也混进了校队参加了算法竞赛，拿了个省奖</p><p>按时间顺序，可能是最先折腾了树莓派？就像初中时听从小学同学的安利上手了 KSP，高中也想到了周所说的树莓派，开始一点点了解</p><p>首先是看书？我记得下了很多计算机的书，导到 Kindle 里看，最主要的就是关于树莓派和 Linux 的，另外有前端的比方说 HTML CSS JavaScript，还有 Python 的，也有一些杂七杂八的有些忘记了，下课就看</p><p>我最终让我妈买了一块树莓派，型号是 zerow，很小很小就像一张小卡片</p><p>然后就是不断地折腾，在树莓派实验室上看了很多教程，不连显示屏，不连外设怎么启动，怎么下系统镜像，怎么哈希校验，怎么烧录，怎么开机自动连 WiFi，怎么扫网段扫到这个设备，怎么用 putty 进行 SSH 登陆，怎么传文件，Linux 怎么用，包管理程序怎么用，怎么 VNC，怎么 RDP 远程桌面（说到这个仿佛已经在 Win+R 然后熟练地敲下 mstsc 了</p><p>我当时不知道烧录了多少遍，还讲给同学听，但是好像并不是很能听懂（此时周在做什么？他好像在学怎么给 Minecraft 写 MOD</p><p>当初对 Linux 的上手不算很容易，但我至少对 Windows 命令行并不陌生，转战 Linux 并不会一脸懵的感觉</p><p>最令我新奇的是包管理系统，从命令行安装软件从未体验过，另外一点就是改配置文件（最常见就是换源）要用命令行的文本编辑器，比方说 vim 或者 nano <s>（原谅我现在都不会用 vim，不常用真一下就忘了，我现在一般直接 VSCode 远程一把梭</s></p><p>另外就是体验各种百花齐放的发行版，在我的印象里周一直是 Manjaro 的坚定拥护者，但是我真的习惯了 Debian 系，所以我不是 Debian 就是 Ubuntu，不过桌面环境确实体验了不少，比方说 KDE</p><p>然后还加了个树莓派的群，讨论了很多问题，学到了很多，也教了很多人（可惜那个群后来慢慢地也安静了</p><p>之后是跟一本讲树莓派实战的书和网上的很多教程做了一些项目</p><p>印象深刻的有<a href="https://nickxu.me/2019/07/10/shu-mei-pai-da-jian-si-you-yun-fu-wu-qi-nextcloud/">搭建 NextCloud 做私有云盘</a>，还折腾了怎么内网穿透出去</p><p>另外一个是再插一张 USB WiFi 网卡，配合板载的网卡做 <a href="https://nickxu.me/2019/07/06/shu-mei-pai-wifi-xin-hao-zhong-ji/">WiFi 信号中继</a></p><p>然后就是<a href="https://nickxu.me/2020/01/26/shu-mei-pai-minecraft-chao-chang-kai-fu-zhe-teng-ji-lu-javaji-yan-with-hong-shi/">搭建 Minecraft 服务器了</a> <s>（这篇可以一窥当时的我，基岩版真的折腾了超久，至于为什么要折腾基岩版，问就是下面的伏笔</s></p><p>还有<a href="https://nickxu.me/2020/02/20/shu-mei-pai-ru-he-yi-zheng-que-de-zi-shi-zhi-zuo-shu-mei-pai-de-tf-qia-shu-ju-jing-xiang/">怎么制作 TF 卡的数据镜像</a></p><p>还有个项目我记得，就是接一个摄像头然后试试在 Web 端显示画面</p><p>其实当时折腾树莓派很高效地帮我选择了之后的路，GPIO 那些不怎么感兴趣我就知道我不喜欢搞硬件了（所以 Arduino 也没怎么碰过</p><p>我当时是真的爱玩树莓派，前前后后买了 4、5 个不同型号的</p><p>熟悉了 Linux 之后高二下学期我开始租云服务器了，还有买域名等等</p><p>讲真，你看一个人水平高低，直接 whois 一下他的域名就知道了，虽然强者不一定注册早，但是注册早的一定很强（虽然但是我目前用的这个是大学才注册的</p><p>我只能说 Daidr 一次就能面进字节是有原因的，人家初中就有自己的域名了</p><p>当时网站其实也没放多少东西，基本就是一些写的静态网页，还有后面学的一点 PHP 写的简单登陆功能</p><p><s>（其实最重要的功能是 HK 服务器有外网，我可以 很方便地挂着 curl 一些东西以及 ffmpeg 下一些 m3u8</s></p><p>另外一件事就是竞赛了，我感觉这也是纯纯的运气</p><p>我们学校初中的时候就有校队了，但是当时只在尖子班招人，等我知道的时候已经晚了，只能先买一本《啊哈算法》先看着</p><p>所以高中的时候就很想进，高一的时候先笔试筛一轮，我知道每道题都是什么算法，但是最终没有选上</p><p><s>毕竟我数学确实不太好，初中三年做了三年数学课代表越来越差，高中学聪明了什么官都不当了，但是还是越来越差</s></p><p>但是我还是想进，就亲自去办公室找了老师（记得是刘陪我一起去的？不知道他现在过得怎么样），老师说现在人招满了真没办法</p><p>就在这时，两个女生走进来，说她们已经进了哪一门的校队（有点忘记了），不想参加信息竞赛了</p><p>然后就放我进了，就是这么巧（讲真运气真的非常重要，面试也是</p><p>之后很巧地历次淘汰我都艰难地没被刷掉</p><p>跟以前小打小闹的真不一样，在这里我第一次系统地学习了 C++（说实话是 C + STL），另外是各种极为精妙惊为天人的数据结构和算法（我都不知道这些东西是怎么被发明出来的，但是真的太强大了，属于是大为震撼</p><p>我的成绩其实也不算很好，当然也不在最差的那几个， <s>其实在机房很多时候也都在打游戏（怎么卡极域已经轻车熟路）</s> ，印象最深的就是跟刘和李一起玩红警 3，打各种自定义防守地图，还有 Minecraft（ybakioi 哈哈哈），有一次全教室还一起联机 CS 1.6（每天能碰到电脑真是我们 OIer 对比其他高中生的一种特权），我记得刘每次到机房第一件事就是看他关注的网络小说有没有更新</p><p>之后就是去参加 Noip 了，但是很遗憾那一年 Noip 暂停举行了，主办方换了个马甲叫 CSP 继续开</p><p>初赛去到了我们高中的另一个校区（没错就是她在的那个）， <s>虽然但是因为说了太多不该说的话早就被拉黑了</s></p><p>我和刘都过了，但很遗憾，李没有过（不记得第二年的他有没有参加了，但是人家文化课成绩比我好多了，后来去的也是 985，希望他现在过的一切都好）</p><p>说起来刘后来去的也是 965，我算是最菜的了，不过他说他佩服我一直做我喜欢做的事情</p><p>然后是正赛，打了两天，我和刘最终都只拿了个省三，但队里大部分都是省二，省三和省一的都少</p><p>我当时很可惜的是就差一个测试点就够省二了，因为那个数据卡 unsigned long long，我的确用的也是 unsigned long long，但是我 for 循序喜欢从 1 而不是 0 开始递增，所以还是爆了</p><p>讲真省三真的是很烂很烂的成绩，但现在看来，省三和省二有什么区别呢哈哈哈（刘更是恰好卡在省三的线上，刚好拿奖</p><p>比完赛我们队上了校报，也不知道她有没有看见我，大概率没有</p><p>让我看看高中还有没有值得写的，还有一个，就是第一次体验到固态硬盘的速度</p><p>高中那时候固态已经没有初中的时候那么贵了，我爸又换了台笔记本，预装的就是固态，手上的新 ThinkPad 就退役到了我的手上</p><p>买了块 SATA 固态把旧的机械硬盘换下来，我还记得第一次在固态上装 Windows，那个速度真的快，而开机呢？卧槽，十秒，这是什么神仙速度</p><p>只能说大为震撼，感觉垃圾 Windows 用着也没有那么垃圾了</p><p>另外就是买内存条升级内存，已经有了根 4G 的，我加了根 8G 的干到 12G 了，比我爸的新电脑 8G 还要大，记得当时还是 DDR3-1333</p><p>好像高中没什么另外值得说的了？让我再想想</p><p>暂时来看貌似没有值得专门讲的了，毕竟那种高压环境很难有空闲时间留下一些成果</p><p>但是你猜怎么着？我高中确实独自做过一个耗费大量精力的项目，这个故事目前只有两个人知道，一个是我，另一个我今年年初面的一家初创公司的面试官，他当时问我的问题大概是，到目前为止我解决过的最有成就感的问题</p><p>这也就是为什么我前面要花那么多篇幅描写她对他的影响，不然这边没法讲</p><p>但，我觉得可能需要更多上下文，让我们回到他的高一</p><p><s>PS：下面的叙述有强烈的主观色彩，包括自我感动，但结合当时的上下文，我无法对他作出评价</s></p><p>同时为了连贯性，我调整了一些事件发生的顺序和时间，但总体来看无伤大雅</p><p>如果是上半场还算有些美好的话，下半场就是纯纯的悲剧了</p><p>最开始是他确实很想她，坐在教室里看不见她的感觉确实没体验过</p><p>他确实尝试联系过她，想约她出来见面，不过她很明显想与他保持距离，找各种理由推脱，她也没再理会他</p><p><s>（不过我记得有次假期作业她还是会找他要答案，他从在信奥集训的学校飞奔回家，只为给她拍一张照片）</s></p><p>后来高二的时候他忍不住从毕业通讯录加了她的微信，知道了她选的是史政生，而他刚刚好选的是物化地</p><p><s>你可以说她正好是他的另一半，当然也可以说他们的世界完全没有交集（确实，我感觉我和很多人都不活在一个世界）</s></p><p>后来自然是，很多情商低的男生都会做的事情，说了一大堆不该说的话，然后被拉黑了，此后没有任何联络</p><p>不过他也想通了，他们已经分道扬镳了，已经高中了，这么重要的时间，就别揪着以前的事情不放了</p><p>他开始相信时间能抚平一切，确实开始慢慢习惯（就现在的我来看确实，我现在只能说是「还记得」这些事情，但想起来并不能说能给我多少「感觉」 ，那个少年早就死了，我只是在忠实地给前朝修史罢了</p><p>虽然说还是会时不时想起她，但是也不会对他造成太大的影响，或许故事就该这样结束了</p><p>直到高三，好吧，直到高三</p><p>这边需要补充下，当时的中学布局是这样的，他初中和高中上的是同一所学校的同一个校区（准确点说是老校区），高中和初中离得很近，而高三其实被放在在初中里的单独的一块区域，也就是高中里只有高一和高二，初中的校门进去先看见的是高三，然后里面旁边还有个校门，进去才是初中</p><p>不知道我交代的清不清楚，也就是高三和初中是紧挨着的，所以高三在有些时候会去到初中那边的校区</p><p>一个例子是模考，懂得都懂高中前两年就把课都上完了，后面就是考试，但是大型模考很明显是要隔着坐的，而高三这边很明显教室不够，怎么办，那就需要临时占用初中的教室</p><p>就这样，时隔两年的他又回到了那个校园，但是，没有她</p><p>回到这既熟悉又陌生的地方，他怀念着这里的一切，一切都回来了，唯一的不同就是没有她</p><p>尽管他又开始了思念，不过他还能强装镇定，没有人发现他的变化</p><p>不过后来有一天，最让他崩溃的事情到了，那就是高三的成人礼</p><p>因为高三那边的体育馆很小，他回到了初中的那个体育馆，那个她在台上表演的地方</p><p>不过他再也看不见她对他笑了</p><p>他捧着花，还是一样的强装镇定</p><p>回到家，他找到那张便利贴，好吧，他现在什么都不想要了，现在他只想见到她</p><p>他找到初中的通讯录，还有一个联系方式没有用到——她母亲的电话（他不敢直接给她打电话）</p><p>“阿姨您好，请问是 xxx 的妈妈吗？”（此处名字隐去）</p><p>“是”</p><p>“哦，我是她的同学，请问她在吗？我找她有事”</p><p>“哦，她在楼上，你姓什么，我等下让她来找你”</p><p>“我姓徐”</p><p>“哦好的谢谢”</p><p>之后是简单的结束语</p><p>几分钟后，一个陌生来电，我想她打这个电话之前，也想好了他是谁</p><p>那个声音是如此的甜美</p><p>“喂？你好？”</p><p>“嗨～我是徐皓，你还记得我吗？”</p><p>“嗯，我记得”</p><p>“高考之后，我们可以见个面吗？”</p><p>“哦可以呀，不过我高考之后就要去旅游…”</p><p>“哦～好的”</p><p>“还有什么想说的吗？没有的话就先挂了”</p><p>“噢没有了”</p><p>然后就是拜拜，他甚至不敢挂她的电话，只能等着她挂</p><p>如果对比放下手机那一刻的他，和接到腾讯 Offer Call 那一刻的我</p><p>我感觉还是当时的他更开心一些</p><p>好了，未来已经确定，在剩下的时间准备高考，然后去见她</p><p>但他，并不想两手空空地去见她</p><p>其实他很早就在准备给她的礼物了，但是一直没有想好要送什么</p><p>他定下了一些需求</p><ol><li>必须是他亲手做的</li><li>必须能长久保存</li><li>必须足够精彩，至少能让他满意</li></ol><p>直到有一天，他想到了，灵感来源于《三体 III》中的结尾，男主云天明送给了女主程心一个小宇宙</p><p>他可以在树莓派上起一个 Minecraft 服务器，里面可以是一首红石音乐，只要给树莓派插电就能自启，就可以在局域网访问到这个存档</p><p>可以的，这是可以的，虽然有些复杂，但是他喜欢</p><p>但是不可能要用电脑，因为这太麻烦了，还要接局域网，最好一部手机就能搞定</p><p>可以的，只需要是基岩版，可以用板载网卡起一个 WiFi 热点，连上可以有一个 Web 服务器下载 Android 版本的 Minecraft: Bedrock Edition 客户端（这种破解版很容易找到），安装好就可以连上服务器了</p><p>非常好，而外表呢？总需要一个外壳</p><p>可以用一本很厚的笔记本，在内部掏一个合适大小的立体空间，虽然 B 系列的树莓派放不下，但是应该能找到合适的型号</p><p>从外表来看就是一个很厚的皮包笔记本，非常的不起眼，可以简单地放在书架上，很符合他那种低调的性格，笔记本同时可以兼具外壳和说明书，只需要在开始留两页就可以了</p><p>所以，简单地说可能是这样子的，整体来看是一本笔记本，打开后能看见一块带有透明外壳的绿色电路板，上面是各种精细的电子元件与芯片（树莓派真的非常的漂亮）。根据说明通过一根 USB 线供电，上电后绿色的信号灯开始闪烁，这时用一台 Android 设备连接上说明中的 WiFi 进入同一网络，再在浏览器中访问一个 IP，有一个 Web 端的指引下载并安装一个安卓版本 Minecraft 客户端，启动 Minecraft，就能在局域网中找到服务器，里面自然是一首带有铁轨的红石音乐，坐上矿车按下按钮就可以启动，并且可能过去多年仍能正常运行</p><p>现在看来，我只能说不好评价，但是感觉确实很符合我的风格</p><p>不管怎么说，他开始实现他的构想，从这里开始，他解决了很多问题</p><p>简单地说，首先是怎么在一个 ARM 设备上运行基岩版的客户端，基岩版是 C++ 写的没有跨平台和指令集，他找了很多第三方实现，就在上面说的那篇搭建 Minecraft 服务器的博客，这边再挂一下链接 <a href="https://nickxu.me/2020/01/26/shu-mei-pai-minecraft-chao-chang-kai-fu-zhe-teng-ji-lu-javaji-yan-with-hong-shi/">『树莓派』Minecraft超长开服折腾记录（Java+基岩with红石）</a></p><p>最终结论是能做到，但是树莓派的性能不是很够，首先 zero 系羸弱的性能就别想了，而 4 代 B 型虽然说可以，但是上面硕大的 USB 接口和 RJ45 根本没法看，他曾经尝试把这两个接口拆下来，但是他没有热风枪，也没有硬件这方面的功夫，只能放弃</p><p>他其实也考虑过其他开发板，但是考虑到价格和外观…而且树莓派的绿色是真的好看哇</p><p>最后他选择了 3A+这个型号，性能只能说勉强够用，他花了很多精力进行性能调优，包括降低 Minecraft 版本，调试启动参数（比方说区块加载大小）等等</p><p>他开始施工，选择的歌是赵雷的《成都》（如果你有更多上下文你就知道为什么他会选择这一首），跟着 B 站的教程开始学习红石音乐如何制作，有一套严格的音符映射关系，他把乐谱打印出来，在每一个音符上做标记，需要拨动音符盒到哪个档位</p><p>最终，他做到了，书的第一页上写着：Dream Back 2015，甚至局域网里的 IP 也是 192.168.20.15，那个开始的开始的年份</p><p>至于书上和那个 Nginx 起的 Web 引导页具体写了什么，那只有他知道了，我只记得当时用到了 mdui <s>（我真的不懂，这个 UI 框架怎么做到二代比一代更难看的</s></p><p>时间一天天过去，高考越来越近了，他期待着能见到她，而他不知道的是，那个 Bad Ending 也越来越近</p><p>在高考时，他遇到了最后一件触动他心弦的事，他仿佛身处在初三的那个教室</p><p>准确地说，我记得好几科都是在一个教室考的，而这个考场就在当初他初三教室的楼上，一个在一楼，一个在三楼，位置一模一样</p><p>他尽力不路过那间一楼的教室，但是心里很难不回忆到过去</p><p>最终，高考结束了，而紧随其后的，就是那个 Bad Ending——我不想再回想那件事</p><p>没事的，我不责怪你，虽然你把又一次把一切都搞砸了</p><p>她终究会远去，不是吗</p><p>一场做了六年的梦罢了，并且早在三年前就该醒了</p><p>该哭就哭吧，早来总比晚来好，不是吗？至少你见过大海模样，不会随便被哪条河冲走</p><p>无论发生什么事情，生活总是要继续的</p><p>又过了段时间，高考成绩出来了，总分没上 600，数学 90 多差点没及格，他一句话也不想说</p><p>怎么说呢？还是有些差吧，虽然之前八省联考的全省排名也差不多，但也没这么差，至少数学虽然平时也不高，但是真没到这种地步</p><p>但是他知道，复读是绝对不可能的，他不想再回到那个地方，并且新学期开始高中校区要和初中校区对调了，他不敢想象留在那里怎么学的下去</p><p>去其他地方呢？还是算了吧，他只想尽快离开高三，而且他爸当年也是高考越考越差的</p><p>成绩只是衡量人的其中一个维度罢了，更重要的是，他可能拥有一些大多数同龄人不具备的特质，而正是这一点，让他在三年之后的同一天，坐着赫曼米勒的椅子，在大厂办公室里吹着空调，从 25 楼远眺窗外的高楼大厦，与年薪百万的人一同上下班</p><p>（虽然但是，这成绩也算差的恰到好处，如果再差一点，到广工，那我还能蒸，但是如果再差一点，那我就蒸不动了， HR 估计不会看我一眼）</p><p>至于选专业，他当然只有一个目标，那就是计算机</p><blockquote><p>我曾经看见过一句话，感触颇深：</p><p>帮我亲戚家小孩选志愿，关于专业一问三不知，让我帮选说干什么都可以。辛苦读十几年书，最后花3天选专业！这太奇怪了！</p></blockquote><p>不过上天还是给他开了个玩笑，他最终被调剂到一个根本没有兴趣的专业</p><hr><h1 id="重生与成熟｜大学-4-年">重生与成熟｜大学 4 年</h1><p>好啦，我们最终来到的大学，在这里，</p><p>我感觉我就像是重新出生了一次，那个他已经死去，我将他与她的故事亲手埋葬，他死后成了我，没有任何人认识我，我也不认识任何人，全新的环境，全新的人际关系</p><p>填志愿（这里就不 diss 我的学院了，我去年发的一篇还被学院领导约谈了</p><p>记得当时中午我在工位上开了勿扰躺着睡觉，一醒来发现所有人都在 at 我，还有辅导员的两个未接来电，真的哈人</p><p>这块经历其实看我之前写的博客应该挺详细的，毕竟大学</p><ul><li>社团</li><li></li></ul><pre><code>图书馆我也几乎没去过，招聘会也没去过，如果每天做和大多数人一样的事情，那你最终也会成为大多数，要么你在这件事上是卷王，要么就不追随主流</code></pre><p>我当时是真的摆烂了，寒假开始就天天跟一个台湾妹子双排 overwatch（我也很感谢她，比较在我最需要的时候陪伴了我</p><p>但春招来了，怎么也得投吧，正好那段时间她去越南旅游了还是什么的</p><p>嘿！我为什么要用 qq 邮箱，这太 low了，我就想用我自定义域名的邮箱 <a href="mailto:nx@nickxu.me">nx@nickxu.me</a></p><p>你可能想我会写我为了进腾讯如何如何…但实际上真的很顺</p><p>在国内读研纯纯给导师做牛马，同样是做牛马</p><p>如果你问我为什么当初想出国，那我只能说想在国外上班，体验不一样的生活</p><p>我无法忍受周末 oncall</p><p>虽然工作日有些事情没做完，但是周末让我做事就有一个很严重的问题，就是每天睁开眼都有事情要处理，没有休息的感觉（而且钱还不多，好吧）</p><p>初一外教课， who is frank? this is frank</p><p>我不想重复说什么《上海交通大学生存手册》中本科教育早已崩溃之云，我想说的是，当学校不为我的未来负责的时候，我必须为我的未来负责</p><p>在此，我想对那些发现学生出去实习就要抓回来的辅导员（虽然我的辅导员挺好，但这种情况确实有）说，你为你的位置和你的领导负责，我们学生为了我们的未来负责，你我都是如此负责的人，何必把事情做得这么难看呢？</p><p>收集了三个版本的自己</p><p>留学</p><p>数字游民 远程办公，可以很好地养活我一个人</p><p>腾讯</p><h1 id="总结？">总结？</h1><p>我想写的，不是我这一路走来有多努力，而是那些让我成为「我」的瞬间</p><p>最终，船靠岸了，历经一路颠簸，我上了岸（也可能并非上岸），但不管怎么说，新的生活开始了</p>]]></content:encoded>
      
      
      
      
      <comments>https://nickxu.me/post/from-hello-world-to-tencent.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>腾讯六月：未曾拥有过的美好时光😘</title>
      <link>https://nickxu.me/post/six-months-in-Tencent.html</link>
      <guid>https://nickxu.me/post/six-months-in-Tencent.html</guid>
      <pubDate>Sat, 07 Dec 2024 08:24:50 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://image.nickxu.me/20241207174432122.jpeg&quot; alt=&quot;IMG_6448&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;✨ 本文谨以纪念我此刻 21 岁的青春（图：深圳南山公园祝寿亭夜景）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今年（2024），鄙人有幸在腾讯 CSIG 作为 Golang 后端开发实习了六个月&lt;/p&gt;
&lt;p&gt;我只能说，我在深圳腾讯的这六个月，是我目前人生中最美好的时光&lt;/p&gt;
&lt;p&gt;过去从没有过，将来也可有能不会再有&lt;/p&gt;
&lt;p&gt;我在此记录下这六个月中的点点滴滴，作为将来宝贵的回忆&lt;/p&gt;
&lt;details class=&quot;toggle&quot; &gt;&lt;summary class=&quot;toggle-button&quot; style=&quot;&quot;&gt;延伸材料：在办公室与小登分享腾讯生活&lt;/summary&gt;&lt;div class=&quot;toggle-content&quot;&gt;&lt;p&gt;&lt;s&gt;非常抱歉一开始太兴奋了，有些嘴臭（真的很抱歉！），也有些口误&lt;/s&gt; 建议二倍速&lt;/p&gt;
&lt;div class=&quot;audio&quot;&gt;&lt;audio contr</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://image.nickxu.me/20241207174432122.jpeg" alt="IMG_6448"></p><blockquote><p>✨ 本文谨以纪念我此刻 21 岁的青春（图：深圳南山公园祝寿亭夜景）</p></blockquote><p>今年（2024），鄙人有幸在腾讯 CSIG 作为 Golang 后端开发实习了六个月</p><p>我只能说，我在深圳腾讯的这六个月，是我目前人生中最美好的时光</p><p>过去从没有过，将来也可有能不会再有</p><p>我在此记录下这六个月中的点点滴滴，作为将来宝贵的回忆</p><details class="toggle" ><summary class="toggle-button" style="">延伸材料：在办公室与小登分享腾讯生活</summary><div class="toggle-content"><p><s>非常抱歉一开始太兴奋了，有些嘴臭（真的很抱歉！），也有些口误</s> 建议二倍速</p><div class="audio"><audio controls preload><source src='https://file.nickxu.me/2024-12-04.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div></div></details><hr><h1 id="OC-时刻">OC 时刻</h1><p>OC（或称 Offer Call），指公司以口头的形式通知你（一般是打电话）获得了工作 Offer ，并询问是否接受</p><p>承接前文，这里直接快进到我 OC 的那一天，也就是 2024 年 4 月 3 日</p><hr><h2 id="噫！好！我中了！"><s>噫！好！我中了！</s></h2><img src="https://image.nickxu.me/20241207182227704.png" alt="image-2024120762227648 PM" style="zoom:50%;" /><blockquote><p><s>上午在社团群里抱怨，下午就 OC 了</s></p></blockquote><p>我记得，当时我正在宿舍里和一个台湾女生双排打 Overwatch（我们那时候关系真的很好，天天都一起玩</p><p>中途暂时休息一下，大概快下午三点，这时有电话打过来，我一接</p><p>卧槽，我 OC 了？</p><p>电话里确认我的各种薪资福利，包括基本薪资，异地住房补贴，一次性通勤补贴，还有免费的 7 天中转住宿</p><p>那种激动，是真的无以言表，至少以我的语文能力是没法表达出来的</p><p>没有体验过的人，真的是想象不出来，在压抑了那么长时间过后，久旱逢甘霖的感觉</p><p>挂断电话，我瘫在椅子上，<mark class="hl-label green">新的生活终于要开始了吗</mark> </p><p>接着我把这个消息告诉了她，她也很开心，她说如果她能去腾讯工作的话，可能开心得晚上在床上睡不着觉吧</p><p>最后她说，那好哇，正好可以玩一天庆祝一下</p><p>真打一整天吗？</p><p>她说当然</p><p>我们就真的结结实实地打了一天整的排位，我是真的开心，我那天就是这个世界上最幸福的人</p><hr><h2 id="正式邮件">正式邮件</h2><p><img src="https://image.nickxu.me/20241207184508229.png" alt="image-2024120764508155 PM"></p><blockquote><p>这是我的荣幸</p></blockquote><p>过了几天，正式的邮件发了下来，同时还有各种《戴上红围脖》需要填写的材料和签署的合同</p><p>还要上传工卡照片，我突然一想，我可以穿着社服拍照，把杭电助手印在工卡上</p><p>我感谢社团这三年来对我的培养，我也以我是杭电助手的一员而自豪</p><p>（我和杭电助手的故事可以看我之前的<a href="https://nickxu.me/post/seven-months-of-struggle-preface">『七个月的挣扎之路』前言与自我介绍</a>）</p><p><img src="https://image.nickxu.me/20241207192855457.png" alt="image-2024120772855395 PM"></p><blockquote><p><s>真的是牛社出牛子</s> ，你甚至能在影视飓风里看见穿杭助社服的成员（左一，这件是卫衣款）</p></blockquote><p>另外的就是银行卡，还有提前学习各种规章制度</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://image.nickxu.me/20241207202852495.png","alt":"51d7769877316eff70d22532b588b1da"},{"url":"https://image.nickxu.me/20241207200559539.png","alt":"c0d3a870345e2aa9514fd39d96d8d3ea"},{"url":"https://image.nickxu.me/20241207200537590.png","alt":"3b2f480e8455ac12697f30a5b5d2355e"},{"url":"https://image.nickxu.me/20241207200546850.png","alt":"c8418f28fcab677901b2ccc64cb98dcc"},{"url":"https://image.nickxu.me/20241207200702596.png","alt":"e984d049edd74de6b1d8d58a8fdf5097"},{"url":"https://image.nickxu.me/20241207202705995.png","alt":"e125e9fa2fc68e4574b6956540bb04dc_720"},{"url":"https://image.nickxu.me/20241207195911721.jpeg","alt":"e65140554d0f49d1bd0245b9c290623f"},{"url":"https://image.nickxu.me/20241207201145438.png","alt":"4e9ccefaf7bf97a661a17ff3b351c4e0"},{"url":"https://image.nickxu.me/20241207195935881.png","alt":"3308ecdea3bfc74d92316f6b8bc88bd8_720"},{"url":"https://image.nickxu.me/20241207200510732.png","alt":"image-2024120780510671 PM"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><blockquote><p>回看留下的照片，还能体会到当时的激动</p></blockquote><p>同时还有最重要的，报道的时间和地点（我是迫不及待地选择了下周入职</p><p><img src="https://image.nickxu.me/20241207194344857.png" alt="image-2024120774344777 PM"></p><blockquote><p>查了才知道，腾讯在深圳居然有那么多办公地点（</p></blockquote><p><img src="https://image.nickxu.me/20241207195154159.png" alt="image-2024120775154081 PM"></p><blockquote><p>7 号正式 Offer，花了几天走程序，计划 14 号直接过去，歇两天租房子，17 号入职</p></blockquote><hr><h2 id="准备启程">准备启程</h2><p>准备出发了，其实需要带的东西不多</p><p>Base 深圳我感觉挺好的，虽然离学校远，但是离家近哇，还可以拜访一些以前的同学（</p><p>我家在东莞，就在深圳隔壁，回家或者家里人给我送东西也很方便</p><p>所以衣服被子和其他生活用品让老妈开车送过来就好了，我只需要带一些随身物品</p><p>呀，我过去还是要打游戏的，我得把我的 ITX 也带过去</p><p>寄就算了，我怕寄坏了，我手提过去好了</p><p>离开之前，我和身边不同圈子的人都吃了饭，相互道别，可能接下来一段时间再见面就没那么容易了</p><p>哇，我真的要离开这个地方了吗？特别是这间办公室</p><p>无数的瞬间在这里发生过，无数的问题在这里被讨论</p><p>秋招或者春招的时候，我们都会来这里面试，记得最多的一天，3 个人同时在这里面？（两个坐里面，一个坐外面</p><p>已经记不清多少面试在这里进行过，基本面试都会有人在旁听学习</p><p><img src="https://image.nickxu.me/20241208134447251.jpeg" alt="IMG_4681"></p><blockquote><p>正在面字节跳动的 yeebing</p></blockquote><p>在我的印象里，包括前后端的话，可能有两只手数不过来的大厂 Offer 在这里诞生？</p><p>很幸运，这次终于轮到我了</p><hr><h1 id="初来乍到">初来乍到</h1><h2 id="新生活">新生活</h2><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://image.nickxu.me/20241208140404979.jpeg","alt":"D139F3BE-BAE1-4DCB-BCF1-4352CF5D9DE9_1_105_c"},{"url":"https://image.nickxu.me/20241208142050028.jpeg","alt":"8DB7F7DA-9EF7-457C-87BB-28757E8FFEE8_1_105_c"},{"url":"https://image.nickxu.me/20241208142057586.jpeg","alt":"DA7FA19F-E0FD-45A2-8E08-5A926815D694_1_105_c"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><blockquote><p>坐了一天的高铁到了深圳，上地铁，再赶到酒店，已近晚上 9 点</p></blockquote><p>晚饭还没吃，很饿，很累（特别是我一路提着我的 ITX）</p><p>点了个真功夫（杭州没真功夫有点想念了），吃了洗澡睡觉</p><p>第二天醒来，望着窗外的行人和建筑，我坐在椅子上发呆</p><p><img src="https://image.nickxu.me/20241208142440996.jpeg" alt="E69F2D0B-067F-441F-B49A-797FE42CEB8C_1_105_c"></p><blockquote><p>我真的好幸运</p><p>不同于眼前这些要为了生计四处奔波的人，我一到来就有稳定的工作和体面的薪水，独自一人毫无负担，想回家两三小时就到，眼中没有迷茫，迎接我的将是崭新的生活</p></blockquote><hr><h2 id="租房">租房</h2><p>下一步就是租房子了，当然也不是很着急，酒店可以一直住到周末</p><p>此前翻过一些经验帖，我在各个平台约人看房，前后看了 4、5 间</p><p>至于租房经验的话还是去看别人吧（毕竟我也没太多经验</p><p>我看过小区里的、城中村里的、公寓的，甚至有去了之后发现跟高中宿舍楼差不多的</p><p>有的是转租，有的是中介（坐着中介的电瓶车在大街小巷逛来逛去真的好有意思</p><p>最后租了一间还算满意的单间，2700 一个月，电一元一度，水七元每吨</p><p><img src="https://image.nickxu.me/20241208151235034.jpeg" alt="F210BD71-4CA1-4825-B224-5CAE5111FBAB_1_105_c"></p><p><img src="https://image.nickxu.me/20241208151201238.jpeg" alt="4EA0541F-06FE-4260-9C50-85321E81F572_1_105_c"></p><blockquote><p>虽然小但是我需要的都有（可能椅子要换），这个书桌看着就很舒服，我可能不需要一张大床，但是我的桌子一定不能小</p></blockquote><p>听说之前已经有人住过一年了，也不是刚装修的，离公司也不算太远</p><p>后来也证明这个选择是对的，我在这住的真的挺舒服，而且楼下吃的特别多，旁边就是一个商场，我还是喜欢有烟火气的生活，除了旁边工地有时会有点吵</p><hr><h2 id="入职｜First-Day">入职｜First Day</h2><p>转眼到了报道的那一天，也就是 4 月 17 日</p><p>早上 9 点多，我走进大楼，前台让我去自助的机子打印访客凭证，然后过闸机上二楼 T 站报道</p><p><img src="https://image.nickxu.me/20241208213244876.jpeg" alt="IMG_6406"></p><blockquote><p>补一张后来等电梯的照片</p><p>一切都是那么的新奇，从未进过这么大的写字楼，也从未坐过能进那么多人的电梯</p></blockquote><p>到了 T 站办入职手续，交给我工卡，卡套，挂绳，一个腾讯帆布袋，还有一只企鹅公仔（好像还有其他的？</p><details class="toggle" ><summary class="toggle-button" style="">我真的把杭电助手印在工卡上了 👀</summary><div class="toggle-content"><p><img src="https://image.nickxu.me/20241208213725226.jpeg" alt="IMG_6363"></p></div></details><p>之后就是等我导师来接我，但是这时候导师还没到 <s>，应该是还没到上班时间</s></p><p>所以让我先根据邮件里的方式联系了秘书，她把我带到了 25 楼，这里就是我接下来六个月工作的地方</p><p><img src="https://image.nickxu.me/20241208212120519.jpeg" alt="119E1557-AB79-43BE-9E6B-33B2F4239A71_1_105_c"></p><blockquote><p><s>办公区照理说不能拍照，所以暂时拿这张图看看</s></p><p>就是一片很宽敞的格子间，我感觉很符合我对大厂的想象</p></blockquote><p>不过腾讯的工位很大，而且很幸运我是靠窗的，窗外的景色很好看，我经常坐久了起身欣赏一下窗外的美景</p><p><img src="https://image.nickxu.me/20241207165235030.jpeg" alt="IMG_6656"></p><blockquote><p>落地窗外的景色</p></blockquote><p><img src="https://image.nickxu.me/20241208204602504.jpeg" alt="D7F94786-50F3-4309-B409-A474D8A498D1_1_105_c"></p><blockquote><p><s>晚上有时候，可以看见有人在下面打球</s></p></blockquote><p>等了十来分钟，mentor 到了，他热情地和我打招呼，带我介绍组里的各个成员</p><p>我认出了组长就是当初一面我的那位，他说我比他面试印象中的胖一些（啊有吗，我感觉我不胖也不瘦呀，常年 180cm70kg</p><p>他还说看来他（可能是上面的人？）还是选择了我，很期待我干的怎么样（我不是确定是不是这时候说的，但的确说过</p><p>后来吃饭的时候我问 mentor，当从多少人把我招进来，他说差不多 100 人（？我当时很惊讶，首先不排除听错，而且面试一应该不可能面这么多，顶多是从简历里筛）</p><p>他指导我把工位旁边的大纸箱打开，把电脑装好，我才发现居然是台式（我问他为什么不是 MacBook，他说能选的 MacBook 配置太低了，我想也是，yeebing 当时在字节发的还是 Intel 的 Mac）</p><p>我突然发现了一件事，居然没有显示器 ！<s>他也不知道为什么没有</s> ，重新在系统申请了显示器，但是需要几天时间才能送到，于是他找人借了一块屏幕（可能是副屏？），但是很旧，只能凑合着用 <s>（不过等后面屏幕到了这块屏幕也留在我这当副屏了，直到我离职</s></p><p>之后花了一整天帮我初始化各种东西，并且让我先看部门的 wiki</p><p><img src="https://image.nickxu.me/20241208203010222.jpeg" alt="53B0A49A-4D65-4FF9-B738-CD75E6DA5FF9_1_105_c"></p><blockquote><p>晚上八点半的办公楼</p></blockquote><p><img src="https://image.nickxu.me/20241208203435874.jpeg" alt="6613A51F-C3E7-4899-901B-FC3CE814F6F4_1_105_c"></p><blockquote><p>楼下在修地铁，远处可以看见腾大（旧总部），目前的总部在腾讯滨海大厦，等企鹅岛建好应该又会迁过去</p></blockquote><hr><h1 id="渐入佳境">渐入佳境</h1><p>正式入职之后，我开始逐渐熟悉和适应新的生活</p><img src="https://image.nickxu.me/20241208154649849.png" alt="image-2024120834649810 PM" style="zoom:25%;" /><blockquote><p><s>开始有点压力了</s></p></blockquote><h2 id="部门和业务">部门和业务</h2><p>所在的部门是腾讯云的<a href="https://cloud.tencent.com/document/product/679">云联络中心</a>，做的是电话相关的业务</p><p>简单地说，比如说你肯定见到过很多广告牌，或者是售后热线，上面会留电话号码</p><p>但这个电话肯定不可能是只有一个人去接，这肯定是不够的</p><p>所以肯定是背后又很多座席接听这些来电，这时就需要有一个系统用于分配与调度这些通话</p><p>这是一方面，另一方面，呼出也是一样的，可能某些企业需要对一些用户做回访调查，也需要进行系统性的外呼</p><p><img src="https://image.nickxu.me/20241208215122015.png" alt="img"></p><blockquote><p>又或者，目前的客服业务很早就可以有各种自动化功能，比如说这种流程图，维护背后的状态机也是我们的工作（不过我主要还是做外呼调度器相关的工作</p></blockquote><p>所以说，我们做的是 toB 的业务，服务对象可能是企业，也可能是一些机关事业单位之类的</p><p>不仅国内，我们也有国际业务，我之前听说有什么东南亚的一家银行也用的我们的系统</p><p><s>（我工位旁边就是产品，经常会听见和客户交流我们的产品</s></p><p>当然，这也引出了一个问题——骚扰电话或者诈骗电话</p><p>虽然说不排除说有，但是我们已经在很尽力避免了，包括企业要做各种认证，我吃饭的时候也听组长说他宁愿不赚那些钱，毕竟也不想家里老人接到诈骗电话</p><p>而至于我们组，其实很小，加上我这里 4，5 个后端？还有在其他地方一起办公的，比方说西安云智</p><p>来之前就听 iyear 说腾讯里年龄断层挺大的，我感觉的确，leader 和 mentor 都干了 10 年有余，离我最近的也比我大好几岁，听说疫情三年都没招过人</p><p><s>后面一起出去吃饭的时候，还有个姐姐说，她居然和零零后一起工作</s></p><p>不过感觉一起工作也的感受也挺好的？特别是导师很照顾我</p><hr><h2 id="氛围与福利">氛围与福利</h2><p>我只能说，腾讯的福利是真的好</p><p>而且氛围很温馨，我遇见的都是很 nice 的人，我的导师从来没有 push 过我，我也没有很多压力</p><p>这也是为什么我认为这美好的时光以后可能不会再有</p><p>作为学生，我再也不用天天早八，远离学校也少了不少事情</p><p>作为实习生，我没有绩效，所以也没有工作压力，我只需要为我的 mentor 负责，做他安排给我的事情就好</p><p>公司包早晚餐（午餐花自己钱），平时也没有太多刚性指出，也没有房贷车贷，还没到上有老下有小的情况</p><p>独自一人，潇洒自在，不必处处掣肘于人</p><p>回归正题，我感觉公司会给你一种 ”你只需好好工作，其他的事情不需要你操心” 的感觉</p><p>包括楼下就是公司饭堂（我的评价是中上），免费班车，免费的零食咖啡，每周活动，节假日各种福利 …</p><p>包括医疗，住房，我记得正式员工还有更多人生长远方向的福利</p><p>公司内各种活动也很多 <s>，包括我 mentor 还去打了内部的王者荣耀比赛</s></p><p>整体的氛围是非常欣欣向荣的，同事互称同学，而且都很有礼貌</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://image.nickxu.me/20241208233100678.jpeg","alt":"75349756-11AF-45ED-BF9A-1F41046205E5_1_105_c"},{"url":"https://image.nickxu.me/20241208233446110.jpeg","alt":"B3452794-8213-4025-B544-FAC7AD99D98A_1_105_c"},{"url":"https://image.nickxu.me/20241208233519701.jpeg","alt":"IMG_6339"},{"url":"https://image.nickxu.me/20241208233544164.jpeg","alt":"154B69F7-E172-46BC-8E84-859F73BCF205_1_105_c"},{"url":"https://image.nickxu.me/20241208233626342.jpeg","alt":"IMG_6414"},{"url":"https://image.nickxu.me/20241208233601235.jpeg","alt":"5844F489-AF51-4E74-A7E1-12405867A6C9_1_105_c"},{"url":"https://image.nickxu.me/20241208233643363.jpeg","alt":"779B7935-450A-4009-B403-43590CDD3647_1_105_c"},{"url":"https://image.nickxu.me/20241208233651930.jpeg","alt":"21138E40-0061-4331-B1BB-0734E950A7AB_1_105_c"},{"url":"https://image.nickxu.me/20241208233701872.jpeg","alt":"2F8F688B-133E-4291-9982-23522B440598_1_105_c"},{"url":"https://image.nickxu.me/20241208235024963.jpeg","alt":"C70CEE44-BFE4-460E-9E8D-A11B94D24F2D_1_105_c"},{"url":"https://image.nickxu.me/20241208235012215.jpeg","alt":"A4F535FC-6C9D-4884-855C-1347F38C2030_1_105_c"},{"url":"https://image.nickxu.me/20241208235114098.jpeg","alt":"5A8F20CE-A4AF-4F0E-B3E2-78ADBD3173B9_1_105_c"},{"url":"https://image.nickxu.me/20241208235148771.jpeg","alt":"4DB557D7-1AEE-465C-89A2-646BED193F85_1_105_c"},{"url":"https://image.nickxu.me/20241208235432181.jpeg","alt":"E73DEA53-7A1E-4D9E-A442-AAEB7375C1F0_1_105_c"},{"url":"https://image.nickxu.me/20241208235522934.jpeg","alt":"2D106779-46E4-4818-A97B-1FF1CE05C9D5_1_105_c"},{"url":"https://image.nickxu.me/20241208235607859.jpeg","alt":"9CFF043E-1878-4917-B75A-23EB8E63D552_1_105_c"},{"url":"https://image.nickxu.me/20241209000327429.jpeg","alt":"E8B6B717-90B0-426D-91F7-EBBBA9A3FDB0_1_105_c"},{"url":"https://image.nickxu.me/20241208235934820.jpeg","alt":"1C4F01CF-1BBE-486C-856F-491119978385_1_105_c"},{"url":"https://image.nickxu.me/20241209000043344.jpeg","alt":"ED3BE8C2-1736-4957-96E3-1C3861F46451_1_105_c"},{"url":"https://image.nickxu.me/20241208235132529.jpeg","alt":"DA2E2C2A-67A5-422C-AE8B-A1E560355130_1_105_c"},{"url":"https://image.nickxu.me/20241208235214124.jpeg","alt":"7BA3E5DE-55BB-4C1F-8492-2324C7A04283_1_105_c"},{"url":"https://image.nickxu.me/20241209000437248.jpeg","alt":"352A41FA-D7BD-475C-BE40-815EF164EA58_1_105_c"},{"url":"https://image.nickxu.me/20241209000454096.jpeg","alt":"ECFD12DB-DDE3-4072-BDE8-9FCA5FB7C16E_1_105_c"},{"url":"https://image.nickxu.me/20241209000239681.jpeg","alt":"E0F883CA-D27F-420B-91AB-7629DA909C66_1_105_c"},{"url":"https://image.nickxu.me/20241208233237667.jpeg","alt":"8EC18AD7-C625-4EF7-87AD-A689FEBB735E_1_105_c"},{"url":"https://image.nickxu.me/20241208235048254.jpeg","alt":"97D7CBC3-4F3D-481E-82FA-6856EE211BF8_1_105_c"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><blockquote><p>这真不算差吧</p></blockquote><p><img src="https://image.nickxu.me/20241208233123817.jpeg" alt="BE22D86C-A669-45EB-87A9-12026ECC7C6B_1_105_c"></p><blockquote><p>健身房，但是我没有去过（想起来 daidr 在字节他们组每天都带着一起健身</p></blockquote><p><img src="https://image.nickxu.me/20241209000147272.jpeg" alt="74642F55-BF62-4EF4-9B38-7503720FD613_1_105_c"></p><blockquote><p>茶水间，紧挨着旁边的工位</p></blockquote><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://image.nickxu.me/20241208141641286.jpeg","alt":"5A33BE96-DB89-4550-BD35-BE185BAD328D_1_105_c"},{"url":"https://image.nickxu.me/20241208141627269.jpeg","alt":"15A0ADB5-2AED-41D8-B7BA-7ACCD45C024E_1_105_c"},{"url":"https://image.nickxu.me/20241208141620077.jpeg","alt":"1393CB9A-1D18-42AB-9BB6-7EC88B2BAA90_1_105_c"},{"url":"https://image.nickxu.me/20241208212602833.jpeg","alt":"EB46D4CA-B518-44D4-A89E-E1A09801C1D9_1_105_c"},{"url":"https://image.nickxu.me/20241209014244490.png","alt":"image-2024120914244441 AM"},{"url":"https://image.nickxu.me/20241209014426516.png","alt":"a0d021cf8999e48b0b98fcae680aef13"},{"url":"https://image.nickxu.me/20241208235905185.jpeg","alt":"3B7D3D6F-B563-4640-8A40-24CA5F3921AD_1_105_c"},{"url":"https://image.nickxu.me/20241209000002315.jpeg","alt":"F14CC358-A997-4459-9614-6087673DEE40_1_105_c"},{"url":"https://image.nickxu.me/20241209000532574.jpeg","alt":"FCBCAAAB-CE93-44D3-A096-DB1787C68F87_1_105_c"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><blockquote><p>腾讯班车，还有其他的七七八八</p></blockquote><details class="toggle" ><summary class="toggle-button" style="">~~对了，虽然办公室不能拍，但是我可以给你们看一下藤子的厕所~~</summary><div class="toggle-content"><p>甚至洗手间里的日报都是日常更换的</p><video width="100%" height="auto" style="object-fit:contain;"  controls>  <source src="https://file.nickxu.me/output.mp4" type="video/mp4">  您的浏览器不支持视频标签。</video></div></details><hr><h2 id="日常生活">日常生活</h2><p><img src="https://image.nickxu.me/20241208204051656.jpeg" alt="5FD67C6F-5E13-4C5B-BAD0-475950CDD64E_1_105_c"></p><blockquote><p>21 岁的你，在外面刮风下雨的下午，坐在带鱼屏前，翻开 MacBook Pro 开始 Coding，你旁边是一碗凉白开，背后是空调的阵阵凉风，窗外是哗哗雨声，歌单正好外放到了 Letting Go，明天周日也不用去上班，你的青春才刚刚开始，你最不缺的就是时间</p></blockquote><p>日常生活算是比较规律的，首先没有周末加班，工作日早上 10 点前到就好，天气好的话我可能选择跑步 3km上班，这差不多要 20 多分钟，或者骑车十来分钟</p><p>骑车的话 9 点多起床（极限时间 9 点半），跑步就 8 点多起床，如果有空就吃食堂，没空就楼下麦当劳</p><img src="https://image.nickxu.me/20241209002030712.jpeg" alt="DE27BC7F-6796-48C8-AEF1-E6B4B6745D22_1_105_c" style="zoom:67%;" /><blockquote><p>跑步上班</p></blockquote><p><img src="https://image.nickxu.me/20241208212623372.jpeg" alt="E4F3F65B-8C38-40F4-8C8E-D2ADFF4BCEAB_1_105_c"></p><blockquote><p>如果时间来不及，出发前点个麦当劳，到公司楼下直接拎上去茶水间吃</p></blockquote><p>之后上午干两个多小时，12 点多一起去吃饭，可能吃饭堂也可能吃对面 KFC，回来睡午觉</p><p>1 点多会关灯，有人会打开折叠床睡觉，而我一般直接把椅子调一下半躺着睡，眼罩和 AirPods Pro 一带，很快睡着了</p><p>2 点多起来接着干，这段时间算是效率最高的，一直做到 5、6 点一起去吃饭</p><p>吃完饭回来休息一下，可能再接着写一会，我可能会打开我的 MacBook 做一些英语题目</p><p>晚上 7、8 点下班，但正式员工会多做一会，我可能骑车也可能跑步回去，当然散步也是挺好的，不过散步的话就要 40min 了</p><p>回到家，小爱同学已经打开了空调（跑完步回来真的很爽），洗个热水澡，在床上看会视频，等下上号 Overwatch 一起五排</p><p>总之，那段时间真的感觉非常滋润</p><p>从一个每个月只有一两千生活费的大学生，到每月收入接近五位数的打工人</p><p>买东西基本不会像以前那样纠结这纠结那了，有钱的感觉真好哇</p><hr><h1 id="学有所成">学有所成</h1><p>这一节我想稍微总结实习半年来技术上的收获</p><p>这段写的有些简略，后面有机会再扩充细说</p><hr><h2 id="代码量">代码量</h2><p>我只能说，我此前从没上手真正的大型项目</p><p>和过去的小打小闹不一样，在这里，上百行的函数，上千行的文件司空见惯</p><p><s>（虽然说单个函数不应该超过 80 行，当一般遇到这种情况，我们直接在最上面加个 <code>//nolint: funclen</code></s></p><p>但多亏了 Golang 大道至简的语法，多看多问，再翻翻文档，我还是能比较轻松地理解业务逻辑（大不了就求助 AI 吧</p><p>但依赖注入在初期的确给我带来了一些困扰，我此前并没有很习惯使用依赖注入</p><p>依赖注入使得调用关系变得不那么明确，特别是运行时的依赖注入，比如说 <code>uber-go/fx</code></p><p>关于依赖注入，有人主张不应该把 Java 的东西带到 Go 里，有人主张好用就应该用，而我本人并不是很倾向于使用</p><hr><h2 id="单元测试">单元测试</h2><p>我觉得我感觉学到最重要经验的就是要写单元测试，感觉这也是我们社团里缺乏的东西</p><p>为此我还录了个视频给初学者讲述相关的内容，<a href="https://www.bilibili.com/video/BV1bnt4eHEKb/?share_source=copy_web&amp;vd_source=5ca30838bf3c8b357bddca1ff2565902">【以防你还没养成习惯写单测】</a></p><p><s>但是我感觉我讲的好烂</s></p><p>这里包含的东西有点多，可能有机会会专门写一篇梳理一下？</p><p><img src="https://image.nickxu.me/20241208224342494.png" alt="e5fb359a1eff50d725f2d08ac6186781"></p><blockquote><p>简单地说，最基本的可能是这样子？</p></blockquote><hr><h2 id="更规范的-Git">更规范的 Git</h2><p>这个部分也是很宝贵的经验</p><p>其实在最开始的那个谈话里我也详细地描述了一下，可以去听一听</p><p>先简单写一下</p><p>首先，使用 rebase，具体做法可参考这篇 <a href="https://cloud.tencent.com/developer/article/2423202">Git还能这样用？一文看懂Git最佳实践！</a></p><p>这篇在内部的 KM 好像还多几张图，而且图是 GIF，不像这里是静态的，不过文字大差不差</p><p>第二，每个 commit 都会关联一个单子，能很完整地描绘出当时的上下文</p><p>我们的 commit 都形如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fix(callout-schduler): 修复状态管理边界问题 --bug=123456</span><br><span class="line">或是</span><br><span class="line">feat(session-server): 优化在线客服xxx接口的延迟 --story=123456</span><br></pre></td></tr></table></figure><p>首先有两种主要类型，fix 和 feat，这个很常见</p><p>但是我们会在最后加一个后缀，这个后缀关联着一个需求单，并且在工蜂里查看 Git 日志，这个后缀是可以点击跳转的，跳到 TAPD</p><p>这时就可以查看当时完整的上下文，包括为什么要有这个 commit，当时有那些方案可供选择或者说当时是这么讨论的</p><p>毕竟单单一句 ”修复状态管理边界问题“ 通常并不能完整地表述出当时的上下文</p><p>而如果有这个后缀的话，就非常方便，包括我都可以搞懂之前这里为什么要有这个 commit，我可以翻到很久之前对于这个问题的讨论</p><p>而且 ci 里还会使用 commit lint 检查 commit message 有没有遵循这种格式，强制保证了这一规定的执行</p><hr><h2 id="精益求精">精益求精</h2><p>对于自己的工作，一定要上心</p><p>一开始，事事我都做的很快，希望以最短的时间完成任务</p><p>但很多时候，即使我认为已经做的很完美了，mentor 总是能指出这里或者那里能够改进</p><p>他说了一句很受用的话，大意是：我交给你的都是不是很着急的事情，你不用着急，想想如何做到最好，再交给我</p><p>所以每次我 commit 之前，都要反复问自己，这里能不能有更好写法</p><p>特别提醒，请 <mark class="hl-label green">严格检查</mark>  Copilot 或是其他 AI 提示的代码，导师指出问题的时候，不止一次发现是是 Copilot 写的，虽然大多数时候能很符合心意，但在某些细节会有疏漏</p><hr><h2 id="如何提问">如何提问</h2><p>作为实习生，我是用来为正式员工分担工作量的，导师也有自己的工作要做，不应该频繁地打扰他</p><p>所以当我们遇到问题的时候，应该严格遵守提问的艺术</p><p>遇到问题是很正常的，但是不要一遇到问题就拉着 mentor 问，先尝试自己解决，业务问题先尝试翻文档</p><p>并且三思而后行，把问题描述清楚，很多时候在聊天框把问题完成描述一下就能得到答案了</p><p>同时，吃饭或是其他空闲时间也可以用来交流问题，面对面交流有时能得到详细的解答</p><hr><h2 id="跨部门沟通">跨部门沟通</h2><p>我后面接手的一个任务是把我们部门的系统接入到另一个内部的系统，实话实说，这东西甚至可以看作是最难受的部分</p><p>过时文档警告！不合理设计警告（有些逻辑是真的离谱）！跨部门沟通警告！</p><p>这东西牵扯到不少公司内部的系统，我得不断和其他部门的同学问这问那</p><p>特别是在我们部门和对面部门拉的对接群里，所有人都看着我问问问</p><p><s>虽然有时感觉有些尴尬，但是不懂的话问就完了</s></p><hr><h1 id="大厂祛魅">大厂祛魅</h1><h2 id="日复一日">日复一日</h2><p>但当你习惯了每天这样的生活，你可能会感到一丝枯燥</p><p>每天上下班占用了一天的大部分时间，很多我想做的事情都没有机会做</p><p>下班之后只想看 YouTube 打游戏，导师推荐我读的 Code Complete 也没有坚持下来读完</p><details class="toggle" ><summary class="toggle-button" style="">一个有意思的小玩具</summary><div class="toggle-content"><p>打开你的终端，试一下 SSH 一下这个域名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh ssh-news.top</span><br></pre></td></tr></table></figure><p>有时我想继续开发，但是很多时候都没有足够的时间和精力</p><p>2025 年 8 月 16 日更：这个域名已经被我释放了，这里贴一个 GIF 展示一下效果</p><p><img src="https://image.nickxu.me/20250816161132679.gif" alt=""></p></div></details><p>而且写博客这个习惯在上班过后也逐渐荒废了</p><p>虽然说这样的生活大多数时候我都很满意</p><p>但在一些瞬间</p><p>我感觉</p><details class="toggle" ><summary class="toggle-button" style="">可能正如 iyear 说的，只有 OC 和 Lastday 才是唯一开心的时刻</summary><div class="toggle-content"><img src="https://image.nickxu.me/20241208153122974.png" alt="354ba4b9d3b58821362783f8abf39413" style="zoom: 33%;" /></div></details><p>虽然我每天跟年薪百万的人一起上下班，不过每天就这样上下班，我以后是不是也是过这种日复一日的生活，被束缚在这里</p><p>我的 mentor 也劝我大学的时候应该多出去旅游，等到工作的时候就没那么多时间出去玩了</p><hr><h2 id="活在当下">活在当下</h2><p><img src="https://image.nickxu.me/20241208205721928.png" alt="image-2024120885721859 PM"></p><blockquote><p>其实任何时候，都要感恩今天的生活来之不易，少一份抱怨，多一份珍惜</p></blockquote><p>但与大多数同龄人比起来，我可能已经达到了大部分人遥不可及的高度</p><p>所以，珍惜当下吧，好好感受周围的一切</p><p>有时候我想让这种生活永远也不结束</p><p>又想让它现在就结束</p><hr><h1 id="做回自己">做回自己</h1><p>转眼快乐的夏天已经过去，入秋了</p><p>我感觉，可能我该体验到到都体验到了吧，从夏天早上暴雨出门上班发现积水到膝盖，到加班跟导师一起抓包抓到快 12 点</p><p>同时年底要申国外的研究生了，但是我雅思或者托福还没考出来</p><p>时间一天天过去，我感觉，我需要专门集中精力处理这些事情了</p><p>国庆节后，我向导师提出了离职</p><hr><h2 id="生活的意义">生活的意义</h2><p><img src="https://image.nickxu.me/20241208205119298.png" alt="image-2024120885119237 PM"></p><p><img src="https://image.nickxu.me/20241208205128717.png" alt="image-2024120885128652 PM"></p><blockquote><p><s>开始学习黑暗料理</s></p></blockquote><p>我想重新找回生活的意义，找回曾经的那种激情</p><p>包括许久没有更新的博客，是时候做回自己了</p><hr><h2 id="离职｜Last-Day">离职｜Last Day</h2><p>要离职了，我开始仔细回味这六个月的生活</p><p>我成长了吗？无疑，成长是巨大的，无论从哪些方面来说</p><p>我后悔吗？完全不后悔，这真是一次奇妙的旅程，可以说是未曾拥有过的美好时光，过去没有过，将来也可能不会再有</p><p>我有留下什么遗憾吗？可能…某些事情我可以做的更好？</p><p>我开始反复阅读 KM 上的技术文章，把我曾经收藏过的都再学习一遍</p><p>最后的日子里，我开始珍惜身边的一切</p><p><img src="https://image.nickxu.me/20241209011457949.jpeg" alt="5D3B9F20-9D6F-415B-8C82-DC6656291416_1_105_c"></p><p><img src="https://image.nickxu.me/20241209011517925.jpeg" alt="54E38DED-53AE-4EA8-BCEF-3A6A1BA32FDC_1_105_c"></p><blockquote><p>最后那星期，有一天我头很晕，mentor 带我去医务室，我才发现手游部门居然就在下面 <s>，穿过他们的工位，我看着那些枪的皮肤是一个比一个花（</s></p></blockquote><p>最终，那一天到来了</p><p><img src="https://image.nickxu.me/20241209011330638.jpeg" alt="14B01BC3-C06E-4188-B456-607380E12FA1_1_105_c"></p><p><img src="https://image.nickxu.me/20241207203230497.png" alt="image-2024120783230420 PM"></p><blockquote><p>2024 年 10 月 17 日下午 2 点 48 分，我的导师（闸机刷卡的那位）亲自将我送下楼</p><p>整整六个月，一天不多，一天不少</p><p>有机会能在这里工作，真是我的荣幸</p></blockquote><p>离职了，我第二次来到了 T 站，也是最后一次</p><p>在当初开始地方，结束这次的旅程</p><p>办完手续，我坐电梯回到 25 楼，回到 mentor 的工位面前，就像无数次下班那样</p><p>“Hi！我先走啦！”</p><p>他起身送我下楼</p><p>楼下，我与导师相互道别…我真的很感谢他</p><p>他最后说，在深圳遇到什么问题，可以随时打他电话</p><p>我长舒一口气，<mark class="hl-label green">新的生活终于要开始了</mark> </p><p>无论发生什么事情，生活总是要继续的</p><p>由衷感谢所有陪伴我走到今天的人</p>]]></content:encoded>
      
      
      
      
      <comments>https://nickxu.me/post/six-months-in-Tencent.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>做原汁原味的自己</title>
      <link>https://nickxu.me/post/be-your-authentic-self.html</link>
      <guid>https://nickxu.me/post/be-your-authentic-self.html</guid>
      <pubDate>Tue, 15 Oct 2024 17:28:43 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;是的，我还活着，哈哈哈&lt;/p&gt;
&lt;p&gt;实话实话，明天腾讯 lastday 了&lt;/p&gt;
&lt;p&gt;之前欠了不少博客没写，实习这 6 个月也精力了不少事情&lt;/p&gt;
&lt;p&gt;但目前我要花一段时间搞定我的英语，因为我打算出国留学，但是英语还没考到我想要的分数&lt;/p&gt;
&lt;p&gt;所以，等我过段时间吧～我打算做回原汁原味的自己了&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p>是的，我还活着，哈哈哈</p><p>实话实话，明天腾讯 lastday 了</p><p>之前欠了不少博客没写，实习这 6 个月也精力了不少事情</p><p>但目前我要花一段时间搞定我的英语，因为我打算出国留学，但是英语还没考到我想要的分数</p><p>所以，等我过段时间吧～我打算做回原汁原味的自己了</p>]]></content:encoded>
      
      
      
      
      <comments>https://nickxu.me/post/be-your-authentic-self.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>『七个月的挣扎之路』支线合集</title>
      <link>https://nickxu.me/post/seven-months-of-struggle-main-part-3.html</link>
      <guid>https://nickxu.me/post/seven-months-of-struggle-main-part-3.html</guid>
      <pubDate>Mon, 15 Jul 2024 13:59:55 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Coming Soon&lt;/p&gt;
&lt;p&gt;&lt;s&gt;本来是想分开写的，但是想想还是写一起吧&lt;/s&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2025-08-16：&lt;/p&gt;
&lt;p&gt;终究没有写完&lt;/p&gt;
&lt;p&gt;就让这些故事，埋藏在我的心底吧❤️&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Coming Soon</p><p><s>本来是想分开写的，但是想想还是写一起吧</s></p><hr><p>2025-08-16：</p><p>终究没有写完</p><p>就让这些故事，埋藏在我的心底吧❤️</p>]]></content:encoded>
      
      
      
      
      <comments>https://nickxu.me/post/seven-months-of-struggle-main-part-3.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>『七个月的挣扎之路』主线：简历、面试与找工作（下）</title>
      <link>https://nickxu.me/post/seven-months-of-struggle-main-part-2.html</link>
      <guid>https://nickxu.me/post/seven-months-of-struggle-main-part-2.html</guid>
      <pubDate>Mon, 15 Jul 2024 13:56:53 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;Coming Soon&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2025-08-16：&lt;/p&gt;
&lt;p&gt;终究没有写完&lt;/p&gt;
&lt;p&gt;就让这些故事，埋藏在我的心底吧&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p>Coming Soon</p><hr><p>2025-08-16：</p><p>终究没有写完</p><p>就让这些故事，埋藏在我的心底吧</p>]]></content:encoded>
      
      
      
      
      <comments>https://nickxu.me/post/seven-months-of-struggle-main-part-2.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>『七个月的挣扎之路』主线：简历、面试与找工作（上）</title>
      <link>https://nickxu.me/post/seven-months-of-struggle-main-part-1.html</link>
      <guid>https://nickxu.me/post/seven-months-of-struggle-main-part-1.html</guid>
      <pubDate>Mon, 15 Jul 2024 08:59:54 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;长话短说，我其实已经推倒重写好几版了&lt;/p&gt;
&lt;p&gt;由于时间跨度有些大，没有当时的感觉真的写不出有当时的味道的文字&lt;/p&gt;
&lt;p&gt;而我现在必须挑重点把这些事情记录下来，质量不能作保证，毕竟真的不能再拖了&lt;/p&gt;
&lt;p&gt;诸君将就着看吧👀&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;八月｜简历与处女面&quot;&gt;八月｜简历与处女面&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://image.nickxu.me/202406190000201.jpeg&quot; alt=&quot;IMG_4960&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;时间回到 2023 年 8 月 22 日，晚上 8 点 13 分&lt;/p&gt;
&lt;p&gt;浙江省杭州市钱塘区，1号线文泽路地铁站&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个时间点距离开学还有一段时间，我之所以要提前返校（我记得是生活区一开门我就返校了）&lt;/p&gt;
&lt;p&gt;不仅是因为要参与提前的亚运会志愿者培训（9 月底亚运会开始），而且还要提前准备简历与准备面试&lt;/p&gt;
&lt;p&gt;毕竟金九银十，早点多准备一下准没错&lt;/p&gt;
&lt;p&gt;&lt;s&gt;其实是因为暑假其实没有准备多少&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>长话短说，我其实已经推倒重写好几版了</p><p>由于时间跨度有些大，没有当时的感觉真的写不出有当时的味道的文字</p><p>而我现在必须挑重点把这些事情记录下来，质量不能作保证，毕竟真的不能再拖了</p><p>诸君将就着看吧👀</p><hr><h1 id="八月｜简历与处女面">八月｜简历与处女面</h1><p><img src="https://image.nickxu.me/202406190000201.jpeg" alt="IMG_4960"></p><blockquote><p>时间回到 2023 年 8 月 22 日，晚上 8 点 13 分</p><p>浙江省杭州市钱塘区，1号线文泽路地铁站</p></blockquote><p>这个时间点距离开学还有一段时间，我之所以要提前返校（我记得是生活区一开门我就返校了）</p><p>不仅是因为要参与提前的亚运会志愿者培训（9 月底亚运会开始），而且还要提前准备简历与准备面试</p><p>毕竟金九银十，早点多准备一下准没错</p><p><s>其实是因为暑假其实没有准备多少</s></p><p>暑假事情其实不少，首先 OSPP 我得继续把项目做完，社团里有个项目有需求去完成</p><p>然后因为又有一批新生录取了，我得在新生群和新生交流为招新准备</p><p><s>还有 OSS 账单被打爆之类的乱七八糟的事</s></p><p>你要说我暑假做了些什么，那我把 LeetCode Hot 100 刷了一些，另外还背了一些八股，但是～不多？</p><h2 id="简历">简历</h2><p>第一件事肯定就是搓简历了，给你们看看我当时搓的第一版简历</p><img src="https://image.nickxu.me/202308242242128.png" style="zoom: 50%;" /><blockquote><p><s>（我现在感觉一言难尽</s></p></blockquote><p>简历我当时参考了一些身边的人写的，具体使用的是<a href="https://www.mujicv.com/">木及简历</a></p><p>然后开投，最后肯定是要投大厂的，但是在投大厂之前，我需要先投一些小厂练手</p><p>首先是 OSPP 群里，中科院软件研究所也发了招 go 的消息（问了一下 2～3k 一个月，我就去投了</p><details class="toggle" ><summary class="toggle-button" style="">我再不去上班真没脸见人了</summary><div class="toggle-content"><p><img src="https://image.nickxu.me/202407150002211.png" alt="QQ_1720972816517"><img src="https://image.nickxu.me/202407150003073.png" alt="QQ_1720973000211"><img src="https://image.nickxu.me/202407150004462.png" alt="QQ_1720973050176"><img src="https://image.nickxu.me/202407150005819.png" alt="QQ_1720973103985"></p><p>有人大一暑假就在外企实习，有人到大三下才找到实习</p><p>人与人的差距，比人与狗的差距还大</p></div></details><p>然后杭助群里有人转发学校旁边一家小厂的招聘（我之前还不知道 any 在那</p><p>另外在 BOSS 直聘上投了几家小厂，有两家收了我的简历，后来有一家约面</p><p>BOSS 上其实还有这种感觉是群发的消息</p><img src="https://image.nickxu.me/202407142356515.png" alt="62a7eb16397b772424ef44d62b85f9fd" style="zoom:50%;" /><p>就是没有什么下文罢了</p><details class="toggle" ><summary class="toggle-button" style="">其实当时还想投一下腾讯的</summary><div class="toggle-content"><p><img src="https://image.nickxu.me/202407142356012.png" alt="QQ_1720972376370"><img src="https://image.nickxu.me/202407142357813.png" alt="QQ_1720972445013"><img src="https://image.nickxu.me/202407142358611.png" alt="db1bb7b34663c4d01181082d0a9eaf14"></p><blockquote><p>其实当时还想投一下腾讯的（毕竟想去的还是字节），但是嫌太麻烦就没投哈哈哈</p><p>结果最后还是去了腾讯（</p></blockquote></div></details><h2 id="处女面">处女面</h2><p>杭助里的那家小厂是 8 月 24 日投的，约的 27 号晚上面试</p><p>因为是处女面，所以多多少少是有些紧张的</p><p><img src="https://image.nickxu.me/202407150008616.png" alt="QQ_1720973296978"></p><p>我坐在 303 里面等着视频面试，然后，然后，居然告诉我要让 any 给我线下面试👀</p><p><img src="https://image.nickxu.me/202407150011132.png" alt="QQ_1720973477970"><img src="https://image.nickxu.me/202407150012650.png" alt="QQ_1720973530235"><img src="https://image.nickxu.me/202407150014954.png" alt="QQ_1720973674869"><img src="https://image.nickxu.me/202407150016314.png" alt="QQ_1720973770782"></p><p>我去，想当时我进杭助的时候就是 any 面的我，现在处女面又是 any</p><p><s>（其实 any 在群里聊天不是很多，后端部长其实更多是一种吉祥物的位置）</s></p><p>然后，我看见 any 来了，他把他的一头长发剪了（还是后来？）</p><p>他掏出他那屏幕很脏的 MacBook Air 在我面前坐下，我们开始之前在那闲聊</p><p>后来我问，我们就这样面吗？他说，还是要开腾讯会议，老板要进来旁听</p><p><s>然后，我们就开着腾讯会议面对面开面了</s></p><p>我记得我们聊了很久，体感有两小时往上，但实际上是一个半小时</p><p><img src="https://image.nickxu.me/202407150022387.png" alt="QQ_1720974171965"><img src="https://image.nickxu.me/202407150023487.png" alt="QQ_1720974205086"><img src="https://image.nickxu.me/202407150024678.png" alt="QQ_1720974258669"><img src="https://image.nickxu.me/202407150025749.png" alt="QQ_1720974313093"><img src="https://image.nickxu.me/202407150026525.png" alt="QQ_1720974363322"><img src="https://image.nickxu.me/202407150027139.png" alt="QQ_1720974434711"><img src="https://image.nickxu.me/202407150028055.png" alt="QQ_1720974476437"><img src="https://image.nickxu.me/202407150029248.png" alt="QQ_1720974539265"><img src="https://image.nickxu.me/202407150029223.png" alt="QQ_1720974583014"><img src="https://image.nickxu.me/202407150030806.png" alt="QQ_1720974625590"><img src="https://image.nickxu.me/202407150031261.png" alt="QQ_1720974712218"><img src="https://image.nickxu.me/202407150033421.png" alt="QQ_1720974803910"><img src="https://image.nickxu.me/202407150034059.png" alt="QQ_1720974854324"></p><p>我面完觉得是真的烂</p><p>然后我问 any 觉得我怎么样，他说我和一般的人是反着的，一般的人是基础不行，但是对业务逻辑的设计可能好一些，但是我基础比一般人要好，但是场景不行</p><p>而后面就没有下文了，一方面我说我其实是想练手，另一方面是我的确不行</p><p>然后我又面了一家小厂，居然是电话面试，纯八股，面经大概是这样的</p><ul><li>一堆常见八股（网络、 MySQL 、 Redis 、存储系统、容器），挖项目-&gt;缓存雪崩缓存穿透，面试题经典二维接雨水</li><li>MySQL 问了 4 个隔离级别，还有索引失效的场景，主键是什么-&gt;主键和唯一键-&gt;主键和 null</li><li>内建函数有几个-&gt;new make-&gt;元素切片-&gt;一个 make([]int32,0,1024)占用空间多大</li><li>网络问了七层模型，某层有哪些协议，经典的 <a href="http://www.baidu.com">www.baidu.com</a> 过程</li></ul><p><img src="https://image.nickxu.me/202407150049285.png" alt="QQ_1720975778404"></p><p>但是后面其实也没什么下文</p><hr><h1 id="九月｜字节二面挂">九月｜字节二面挂</h1><p>九月，因为快开亚运会了，准备与训练比较多</p><p>而且还要忙着杭助招新，事情不少</p><p>最重要的事情就是面了两面字节（其实一面是 8 月 31，但我也放在这一节吧）</p><p>字节我是找 yeebing 给我内推的，我其实可以找 OSPP 的导师，但我还是填了 yeebing 的内推码</p><p>感觉效率挺高的，投了第二天就约面了</p><p><img src="https://image.nickxu.me/202407150057899.png" alt="image-20240715125715861 AM"></p><p><img src="https://image.nickxu.me/202407150058696.png" alt="image-20240715125820638 AM"></p><blockquote><p>压力山大了属于是</p></blockquote><h2 id="字节一面">字节一面</h2><p>每次面试之前都是压力山大，在办公室里从早上坐到晚上，一直看八股和 LeetCode</p><p>午饭还会吃一下，晚饭就直接不吃了</p><p>面经在这 <a href="https://nickxu.me/post/bytedance-interview-failed-2023-09?highlight=%E5%AD%97%E8%8A%82%E4%BA%8C%E9%9D%A2">字节二面挂，还是人太菜了</a></p><p>我记得一面的时候感觉压力是真的大，我面完趴着桌子上哭了</p><p>首先他一上来就揪着 GMP 一直问，问了大概十几分钟？</p><p>然后后面项目就问了一下下，面的没到 30 分钟，就让我反问，我当时都以为结束了，想让我滚（</p><p>然后居然让我写一个 Version 比较题目 <s>（yeebing 其实也是这道题，我其实就直接默写了）</s></p><p>我感觉是真的离谱，我感觉我准备了这么久，一面就要挂了，还要留烂面评</p><p><img src="https://image.nickxu.me/202407150114119.png" alt="QQ_1720977272424"></p><blockquote><p>对此，我的导师说（</p></blockquote><p>然后，在我回宿舍的路上，居然告诉我过了</p><p><img src="https://image.nickxu.me/202407150116445.png" alt="QQ_1720977381445"></p><h2 id="字节二面">字节二面</h2><p>我记得二面的时候因为时间上有冲突，我还把复变函数的补考给翘了，等明年（也就是今年）再重修 <s>（然后这学期又挂了，等开学还得补考）</s></p><p>然后，在我二面的前一天，我在刷牛客的时候</p><img src="https://image.nickxu.me/202407150124284.png" style="zoom:50%;" /><blockquote><p>我只能说，草，早知道不投飞书了（</p></blockquote><p>二面体感要好一些，但也仅仅是体感而已</p><p>我后来复盘了一下，感觉我是真的基础不行，我四次挥手都说不明白</p><p>而且我最后的算法也真的不行</p><p>算法是手写 LRU，但是字节那个编辑器真的太烂了</p><p><img src="https://image.nickxu.me/202407150130044.png" alt="image-2024071512959976 AM"></p><p>如图所示，就是会议里弹出一个编辑器出来，初始就一个 helloworld，而且手感真的很差</p><p>关键是，让我自己定义结构体和方法也就算了，但是基本上没有什么提示，包括你结构体里面的字段</p><p>也就是我有一个 LRU 结构体，我下面调用的时候，用 <kbd>.</kbd> 是没法提示出内部成员</p><p>对于这个编辑器我只能说是纯纯的一坨</p><p>但是因为我的确没怎么看 LRU（也就写过几次），印象不是很深，最后也就把逻辑讲清楚了，但是 15min 没写出来</p><p><img src="https://image.nickxu.me/202407150136742.png" alt="5a3a3daff73c09ada063343ab2a9c97e"></p><blockquote><p>后来，我发现了个网站叫 <a href="https://codetop.cc/home">Codetop</a> ，里面会统计各个大厂部门最近的面试题，我进去一看，卧槽这飞书一进去就是 LRU</p><p>要是那时候我知道有这个东西，我可能就不会挂</p></blockquote><p>最后还是挂了</p><p><img src="https://image.nickxu.me/202407150121860.png" alt="QQ_1720977699920"></p><p>唉，只有后面再看看了，眼下需要去服务亚运了</p><hr><h1 id="十月｜沉淀">十月｜沉淀</h1><p>我导师当时其实是想给我内推进去的，当时问我国庆假期有没有空，给我好好辅导一下</p><p>但是我要去做亚运会志愿者，所以没有空（这个其实还牵扯到我的岗位变动，一连串连锁反应，这个在后面那篇再细说）</p><p>而等亚运会结束，我还要处理从开学以来连续旷课带来的大量作业，这也占据了我大量的时间</p><img src="https://image.nickxu.me/202407150201410.jpeg" alt="F77B91BE-00C4-44D7-9388-F2978976754B_1_105_c" style="zoom:33%;" /><blockquote><p>学校给我们亚运会志愿者全都请假了</p></blockquote><p>而我这时候再去面字节肯定不行，所以我打算先沉淀一段时间再说</p><p>那段时间我只能说是天天刷牛客，记得把 B 站都卸了，每天起来第一件事就是看今天又有什么新面经</p><p>这个时候我其实已经开始焦虑了</p><p>而在算法方面，我感觉不能再这样继续下去了</p><p><s>我觉得我这个人就是需要有人管，自制力真不够</s></p><p>所以花了点钱参加了 Carl 哥的代码随想录的 <a href="https://programmercarl.com/xunlian/xunlianying.html">算法训练营</a></p><p>我感觉是的确能逼迫我每天打卡刷题的，这都能在我之前写的博客找到，而且氛围感觉的确挺不错</p><p><img src="https://image.nickxu.me/202407150217983.png" alt="image-2024071521717906 AM"></p><blockquote><p>数了一下，62 个 C++，37 个 Java，5 个 Golang 🤣</p></blockquote><img src="https://image.nickxu.me/202407151622419.png" alt="89b17cf45e9f4f65c4beacea95f70779_720" style="zoom:33%;" /><p>最后我的确坚持下来了，选了返 80 元（</p><hr><h1 id="十一月｜再面字节">十一月｜再面字节</h1><p>十一月，活有点多</p><h2 id="APISIX-面试">APISIX 面试</h2><p>首先是上来就有个面试邀约</p><p><img src="https://image.nickxu.me/202407150232277.png" alt="6bf07f69ef8dcbe631e3a41035243aae"></p><p><img src="https://image.nickxu.me/202407150232273.png" alt="ba62012e2bd4dca4b63e7203bf27e2e1"></p><p>别看写的那么高大上，其实我感觉是因为 OSPP 结束了群发的，我身边的人不少都收到了</p><p>然后我就去面了，结果上来一道算法还是没写出来，还是看我博客最近刷的题 <s>，我只能说真丢人</s></p><p>感觉？又增加了些经验？</p><h2 id="GopherChina">GopherChina</h2><p>之后就是和社团几个人一起去上海看 GopherChina 了，因为社团有几个是沪爷，所以有自驾两辆车开过去的</p><p><img src="https://image.nickxu.me/202407150241253.png" alt="QQ_1720982509942"></p><blockquote><p>说起来之前的 <a href="https://mp.weixin.qq.com/s/HvrgZcXJLiQ-AlEOY_2qsQ">KCD</a> 没去成，呜呜呜，之前还有去 KubeCon 的</p><p>这次 GopherChina 算是有幸凑上集体活动了</p></blockquote><p>而我是坐高铁一小时过去汇合</p><p><img src="https://image.nickxu.me/202407150302013.jpeg" alt="810940AD-AC29-42B6-9B00-C947DB1EF861_1_105_c"></p><p>我们计划在上海玩一晚上，第二天参加一天的活动，然后再开车回去（因为有人正好要回上海，所以有位置给我坐回去）</p><p>第一天晚上我们到了外滩散步</p><p><img src="https://image.nickxu.me/202407150318927.jpeg" alt="7312C817-F466-4B6F-9E6D-9A90C6F8C948_1_105_c"></p><blockquote><p>虽然已经去过很多次了，但是这里真的很好看</p></blockquote><p>然后晚上我们分成两队各自解决住宿，我们在青旅包了一间房，感觉住的还不错？</p><p>（另一队甚至半夜12 点去海底捞了）</p><p><img src="https://image.nickxu.me/202407150322008.jpeg" alt="81A66859-C7E7-4105-8646-3786D8BCF03A_1_105_c"></p><blockquote><p>50 块一床位一晚，我只能说的确很值</p></blockquote><p><img src="https://image.nickxu.me/202407150323502.jpeg" alt="30F85B88-E5DB-40E5-B9E9-41E68D2452B0_1_105_c"></p><blockquote><p>因为房间里不能吃外卖，所以环境还是挺好的</p><p>外面有个大桌子，都是年轻人，还有小姐姐问我们要不要一起狼人杀，我觉得太累了没去（</p></blockquote><p>第二天的就随便放点照片吧</p><div class="gallery">    <div class="fj-gallery  data" data-rowHeight="220" data-limit="10">    <span class="gallery-data">[{"url":"https://image.nickxu.me/202407151120953.jpeg","alt":"25467F65-9B31-4E36-8BA8-9773A10D0B17_1_105_c"},{"url":"https://image.nickxu.me/202407151120263.jpeg","alt":"FFE821B6-5484-417A-9F94-832ED84BBFA7_1_105_c"},{"url":"https://image.nickxu.me/202407151121973.jpeg","alt":"1A1CA9F0-5094-4083-8A69-8BCC3EC44AA2_1_105_c"},{"url":"https://image.nickxu.me/202407151121961.jpeg","alt":"CE214F02-697D-44A0-9A48-66381E15195B_1_105_c"},{"url":"https://image.nickxu.me/202407151123842.jpeg","alt":"903F87DF-0667-4082-AB38-A91F736AF46A_1_105_c"},{"url":"https://image.nickxu.me/202407151123628.jpeg","alt":"A7FD363F-5011-4369-A45D-A453F37FB0B5_1_105_c"},{"url":"https://image.nickxu.me/202407151124816.jpeg","alt":"373D131C-9CB7-455F-8B76-3E2BE29BA529_1_105_c"},{"url":"https://image.nickxu.me/202407151124178.jpeg","alt":"94AA4689-B121-474B-94A8-847FCE0B7FD2_1_105_c"},{"url":"https://image.nickxu.me/202407151124123.jpeg","alt":"4FDE2B1A-AEAC-4DEF-96D9-A423C6CFBF7D_1_105_c"}]</span>    </div>    <button class="gallery-load-more"><span>加载更多</span><i class="fa-solid fa-arrow-down"></i></button>    </div><p>我感觉还是挺愉快的， <s>虽然听不懂太多，</s> 毕竟好久都没有线下聚一聚了</p><p>来点更多链接：<a href="https://mp.weixin.qq.com/s/qhvRFAFb2J6bTvEdzt96jA">活动精彩回顾｜GopherChina 2023 上海站</a></p><p>对了，我们还遇到了 go-zero 的开发者万俊峰，但是没有一起合影有一点遗憾（</p><h2 id="一对一简历辅导">一对一简历辅导</h2><p>其实，这次去上海最大的收获是我的导师给我指导改了改简历，还给我嘱托了一些面试的技巧</p><p>不是说我的导师在上海，而是他之前说周末有没有空给我指导简历，而我周末正好去上海了（</p><p><img src="https://image.nickxu.me/202407151154505.png" alt="image-20240715115418458 AM"></p><p>然后，我就在外滩找了个僻静的位置坐了下来，拿出我的 MacBook 开始语音</p><p>外滩很美，11 月的凉风吹的很爽，我感觉很舒服</p><img src="https://image.nickxu.me/202407150310269.png" alt="image-2024071531043214 AM" style="zoom:50%;" /><blockquote><p>关于我的 OSPP 导师，我只能说能遇见他是我莫大的荣幸</p><p>前京东后端开发，现就职于字节跳动，毕业于互联网末班车时期，可能是吃到了最后一口红利？</p><p>我觉得这才是大厂需要的人才，而我就是个垃圾呜呜呜</p></blockquote><p>回去后我就开始改我的简历，最后改成了现在的样子</p><p><img src="https://image.nickxu.me/202407151211578.png" alt="image-20240715121152538 PM"></p><p><img src="https://image.nickxu.me/202407151213455.png" alt="image-20240715121300416 PM"></p><blockquote><p>这里面的给 Kitex 的 commit 其实是后面的事情，但是其实也大差不差了</p></blockquote><h2 id="再面字节">再面字节</h2><p>简历写完之后我导师就开始给我内推了，他说他那边现在很缺人</p><p>经过这三个月挣扎， 这学期其实已经快到学期末了</p><p>我想，这次我的好运应该能到来了吧，他说这个简历进中厂应该是没有什么问题，但是大厂还是要看我的能力</p><img src="https://image.nickxu.me/202407151149464.jpeg" alt="E4F53711-C5A3-409A-8933-4655AEAB6144_1_201_a" style="zoom:50%;" /><blockquote><p>面前还专门给我叮嘱呜呜呜</p></blockquote><p>然后我去面，感觉？不算很差？</p><p>然后，不知道是我的烂面评还是其他的什么原因，我一面就挂了</p><p><img src="https://image.nickxu.me/202407151609211.png" alt="image-2024071540934149 PM"></p><blockquote><p>卧槽，我感觉我真没脸见人了</p></blockquote><p>他说其实本来都不会让我进面，是他的力荐才让我有面试的机会</p><p>但现在，我感觉，我已经玩完了</p><hr><h1 id="十二月｜焦虑与摆烂">十二月｜焦虑与摆烂</h1><p>这个时候我是真的感觉我是个废物</p><p>可能就是我不配吧</p><p>我很焦虑，我不知道我的未来在哪里</p><p>我受够了这样的生活，每天上课都是我不想学的东西——如果我的专业是计算机，我的基础会不会好很多？</p><p>如果我学过计网，如果我学过数据库，如果我学过操作系统</p><p>我会不会也能对答如流</p><p>但是没有如果，我现在把一切都搞砸了</p><p>我只能说，我累了，我需要休息</p><p>我感觉我像个舔狗一样全心准备每一次面试，每一次投递，只为能有一个实习</p><p>一次次被内推，一次次面试，一次次没有结果（有些经历我并没有写出来）</p><p>哦，我只能说我累了</p><p>我摆烂了，好吧</p><p>我开始花大量的时间在游戏上</p><p>我记得那段时间，我花了很多时间玩 OverWatch 和死亡搁浅</p><p>死亡搁浅真的太上头了，感觉有些像第一次玩 2077 的感觉，从早玩到晚的那种</p><p>就这样，又过去了一个月</p><hr><h1 id="一月｜带病回家">一月｜带病回家</h1><p>一个学期过去了，一事无成，就要这样回去了</p><p>这几个月也没有什么产出，简历上的事情都是年初的事情</p><p>唯一能让我感到一丝慰藉的是 OSPP 的一万二的奖金到手了，还有给字节的 Kitex 框架贡献了个新功能（这些留到后面那篇再说吧）</p><p>挣扎了这么就都没有一个 Offer，而我的同学， Daidr 处女面字节就直接进了，一个个都上班去了</p><p>我感觉我是真的没脸见人，这种无力感是前所未有的</p><p>就这种情况下，我生病了，发烧，整天在床上躺着</p><img src="https://image.nickxu.me/202407151643933.png" alt="d0c83277a8af710eef8c7f12202d8add" style="zoom: 33%;" /><blockquote><p>感觉跟第一次新冠一样难受，我只能说是心理和生理的双重难受</p></blockquote><p>但是做了抗原，不是新冠，也不是甲流，我也不知道是什么流感还是什么</p><p>去校医院开了药，稍微好了点后， 我回家了，没有力气带行李，一个人拖着病体回到了家</p><p>我只能说，那种无力感，不切身体会是无法感知的</p><p>我的心真的好累💔</p>]]></content:encoded>
      
      
      
      
      <comments>https://nickxu.me/post/seven-months-of-struggle-main-part-1.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>『七个月的挣扎之路』前言与自我介绍</title>
      <link>https://nickxu.me/post/seven-months-of-struggle-preface.html</link>
      <guid>https://nickxu.me/post/seven-months-of-struggle-preface.html</guid>
      <pubDate>Wed, 05 Jun 2024 18:56:07 GMT</pubDate>
      
        
        
      <description>&lt;details class=&quot;toggle&quot; &gt;&lt;summary class=&quot;toggle-button&quot; style=&quot;&quot;&gt;点击查看图片👀&lt;/summary&gt;&lt;div class=&quot;toggle-content&quot;&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://image.nickxu.me/202406060209246.jpeg&quot; alt=&quot;IMG_6363&quot;&gt; PS：真的真的很抱歉拖了这么久才发出来，最近实习事情也不少，我尽量恢复到之前的更新频率吧～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;/details&gt;
&lt;p&gt;七个月的挣扎之路终于结束了，这是我从未承受过的痛苦&lt;/p&gt;
&lt;p&gt;具体来说，是从去年 2023 年 8 月 22 日返校开始，再到 2024 年 4 月 3 日 腾讯实习 Offer Call 结束，过去了七个月有余&lt;/p&gt;
&lt;p&gt;这期间发生了很多负面的事情，博客更新也遇到了很大的阻碍，计划的总结文也因为心情一篇没写出来，全是烂尾（&lt;/p&gt;
&lt;p&gt;我只能说这是我所经历的最长也是最难受的低谷期，但幸好——我熬过来了，这一切都已成为过</description>
        
      
      
      
      <content:encoded><![CDATA[<details class="toggle" ><summary class="toggle-button" style="">点击查看图片👀</summary><div class="toggle-content"><blockquote><p><img src="https://image.nickxu.me/202406060209246.jpeg" alt="IMG_6363"> PS：真的真的很抱歉拖了这么久才发出来，最近实习事情也不少，我尽量恢复到之前的更新频率吧～</p></blockquote></div></details><p>七个月的挣扎之路终于结束了，这是我从未承受过的痛苦</p><p>具体来说，是从去年 2023 年 8 月 22 日返校开始，再到 2024 年 4 月 3 日 腾讯实习 Offer Call 结束，过去了七个月有余</p><p>这期间发生了很多负面的事情，博客更新也遇到了很大的阻碍，计划的总结文也因为心情一篇没写出来，全是烂尾（</p><p>我只能说这是我所经历的最长也是最难受的低谷期，但幸好——我熬过来了，这一切都已成为过去</p><p>博客是生活的快照，我想把这段不寻常的经历记下来，给这段生活存档</p><p>但是，这半年多的事情的确太多了，并且各种因素相互穿插与影响，并非是一篇博客所能讲清楚的</p><p>同时，我觉得在开始之前有必要做一些介绍与铺垫，不然就无法理解我当时的处境</p><p>所以我计划将其拆分为 7 篇进行叙述，一篇前言，两篇关于找实习的主线，还有四篇支线：</p><ul><li><p>前言与自我介绍</p><p>您正在阅读的本篇，包含整体介绍与个人先前经历</p></li><li><p>主线叙事</p><ul><li><p>简历、面试与找工作（上）</p><p>去年返校开始，制作，修改与投递简历，多次面试的经历</p></li><li><p>简历、面试与找工作（下）</p><p>今年返校后的鹅厂面试经历，与对后来人的一些个人建议</p></li></ul></li><li><p>支线叙事</p><ul><li><p>杭州亚运会</p><p>从大一开始进行选拔，并作为志愿者参加杭州第 19 届亚运会的经历</p></li><li><p>第一台 ITX</p><p>从去年返校开始组装 ITX，以及不断折腾至今的故事</p></li><li><p>出国与润</p><p>个人对出国的动力与思考，以及到目前的准备情况</p></li><li><p>开源故事</p><p>关于开源之夏 2023 奖金接收，以及之后一系列的开源趣事</p></li></ul></li></ul><p>嗯…下面就开始吧 <s>，我这次希望偏向于纯唠嗑的风格，想到哪写到哪，所以如果行文思路有点乱还请见谅</s></p><hr><h1 id="关于我">关于我</h1><p>本人目前大三在读，双非非科班，具体来说是杭州电子科技大学，自动化专业</p><p>唉，这个院校条件的确不够好，不过因为我从小对计算机感兴趣，所以计算机素养并不差</p><p>初中开始自学 C，折腾装系统，高中接触树莓派与 Linux，并且加入校队学习 C++ 参加 Noip，拿过省奖</p><p>同时租过云服务器买过域名，各方面多多少少都有所了解</p><p>而且高中我就开始写博客了，这个习惯一直持续到现在</p><p>然后，高考让我来到了杭电——我不能肯定地说这是一个 Bad Choice 或是 Good Choice</p><p>因为虽然我天天抱怨我的学校，但是我无法让时间倒流尝试其他选项，或者说——</p><mark class="hl-label green">我不能美化自己没有选择的道路</mark> <hr><h1 id="我的大学">我的大学</h1><p>不管怎么说，我从广东阴差阳错地来到了浙江</p><h2 id="理想与现实的差距">理想与现实的差距</h2><p>上大学前，我想我舍友肯定都是大佬，我能跟着他们学到很多东西</p><p>过来了才发现，我舍友基本都是臭打游戏的，编程是什么都一概不知，计算机常识都差的离谱，连装系统和梯子都不懂</p><p>上大学前，我想我会是计算机专业的学生，我会接触到计算机的各种基础课程</p><p>但录取通知上我被调剂到了自动化专业，上学后整天上课讲着一堆我根本没有兴趣的东西</p><p>好，这就要牵扯到我的傻逼学院了，我忍我的学院已经很久了，我只能说不吐不快，这次我一定要讲出来</p><p>（请注意，这一部分全在讲我的学院，略过可以跳转至下一子标题）</p><p>首先，我们学院是与俄罗斯的一个大学联合办学的学院，也就是传说中的中外合作办学</p><p><s>名字我就不说了，还是给点面子，也免得学院再来找我</s></p><p>哦，我知道你肯定有些问题想问，我们专业课都是毛子过来用英语上课的，而基础课是中方老师用英文教材上的，初衷是全英文授课，但是显而易见的一个结果就是，如果你想听懂专业课，你需要花很大的功夫（</p><p>学院招生大类下属两个专业，计算机和自动化，也就是说，如果你志愿是计算机，可能会被调剂到自动化</p><p>唉我想到了高中填的什么综合素质评价系统，说是什么让高校全面地了解学生，而不是唯成绩论</p><p>然后呢？啥用没有，尽管我尽力展现我对计算机方向的兴趣，但是还是给我调剂到自动化去了，从此我再也不填这种东西了</p><p>至于我为什么要报这个学校，因为我的排名卡在一个很尴尬的地方，我其实是能摸到一些 211 的尾巴的（比如说什么华南农业大学），但是计算机专业排名真的太高了够不上，如果去的话只能去一些乱七八糟的专业</p><p>我应该是坚持专业优先，所以没填</p><p><img src="https://image.nickxu.me/202404092211756.png" alt="image-20240409101145734 PM"></p><blockquote><p>我当时的志愿填报，我原以为调剂到自动化也是我能接受的结果，但真正来了才发现是真傻逼</p><p>PS：而且我进来才发现原来计算机和自动化不是平均录取的！我记得没错的话我那届是广东省录取 4 个人，其中 3 个自动化 1 个计算机</p><p>而计算机的大部分名额都给了浙江本省人，这不是妥妥的歧视？而且刚开学的时候，我们学院的什么领导还跟我们说什么计算机和自动化专业差别不大的，我只能说是纯傻逼</p></blockquote><p>入学之后然后更恶心的来了</p><ul><li>第一，这是中外合作办学，所以你不能转专业，不仅是不能转到其他学院，学院内也不能转</li><li>第二，你基本没法选课（除了体育课），因为这是合作办学，课程每学期上什么都是固定的， 你一进来就是坐牢坐 4 年</li><li>第三，培养计划里是把俄方的 5 年学制的课程压到 4 年上，所以课贼多，大四还有专业课，大四上还有 6 门还是 8 门</li></ul><p>我他妈直呼上当</p><p>请注意我并不是抱怨教学质量如何差，相反课上的内容其实很多，之前上数据结构的时候（这是为数不多的计算机相关课程）居然讲到了红黑树与 234 树如何相互转化，可见内容是很翔实的，一年 2w8 的学费没白花，不过这也更体现了学习的难度</p><p>而且我也见过有很认真负责而富有激情的外教，他们的确是很好的老师，但最大的问题是——</p><p>其实如果是计算机的课，我倒是还有些兴趣上，但是可惜这是自动化专业</p><p>问题就是，我并不想上什么自动控制原理，什么结构材料，什么理论力学，什么仿真系统的动力学，什么离散控制系统</p><p>我只能说，如果你上课给我讲什么 Kubernetes ，那我肯定搬着小板凳都认真听，但是你给我讲这些？每天上课全是一堆公式？对不起，我一点兴趣没有</p><p>而且啊，这自动化就基本没什么跟计算机沾边的课，大一就一门 C 语言有点沾边，但这东西还要你教？大二有一门数据结构，但是这些东西我 Noip 都学过了啊还是没有新东西；这学期有个计算机视觉沾点边吧但我也没什么兴趣，还有个讲操作系统的正课，这东西我的确有点想上，但是已经要去腾讯实习了，唉，抱歉，上个屁</p><p>很显然，这不是我期望的地方；我只能说，这课的确不算差，但是真的不适合我</p><p>而且我身边的人大多也听不懂，至少有一半以上属于摆烂和混日子的状态</p><p>这是我想要的大学吗？完全不是，我感觉纯坐牢，所以真的要坐牢坐四年吗？</p><p>大一刚来的第一个学期，我是真的有点想回去复读，但是我感觉我复读只会越考越差（我爸当年就是复读更烂了（（</p><p>唉，所以只能坐四年牢了，直接坐到混到毕业证</p><p>在这种环境下，我知道必须自谋出路</p><h2 id="大学之大，在哪里">大学之大，在哪里</h2><p>上大学之前，我爸告诉我，大学之大，不在于大楼，而在于大师</p><p>而如果我的孩子要上大学，我会告诉他，大学之大，在于大佬</p><p>大一上学期，还在迷茫的我，有一天看见了「杭电助手」的招新宣讲的消息（我已经记不清是从哪个渠道了）</p><p>这是一个综合了技术、媒体与设计方面的社团，主要业务是提供快捷的课表查看、成绩推送订阅以及各种方便校内师生的功能</p><p>还维护着一个公众号，时不时还会发些推文，还有和学校人脸闸机联动的疫情防控健康码系统（纯自主研发）</p><p>举办的地点是在学生活动中心的剧院</p><p>我之所以去，第一是因为据说可以混一个讲座章（听说要求要听够多少讲座才能毕业）</p><p>第二是我对里面的后端部感觉有点兴趣，听描述感觉能找到很多大佬的地方（事实也的确如此）</p><p>然后，我就和我舍友们一起去了，我记得很清楚，我坐在最后一排靠边边的地方</p><p>我的舍友全程在刷抖音和玩手机，而我一直在听，因为我一直在等轮到后端部的环节</p><p>然后，然后，就是 any 上台了，后端部长，一头长发的男生，个子很高，我不知道的是，我的未来就在这里开始改变了 <s>，两年后我也在他的位置</s></p><p>他讲解了一些前后端的概念，后来介绍了一下部门的情况与业务，别的我没记住，但是我记得他讲了下面两点</p><ul><li>在后端你可以用到并实践学过的各种数据结构与算法（然而我现在上班了平时也用不到什么算法哈哈哈）</li><li>后端的平均薪资会比前端高一些</li></ul><p>然后就是很顺利的参与群面（坐在我正对面的正好也是 any），做小项目推到 GitHub（当时还是用 PHP 糊的），第一次去到 303 面基与 Code Review，再到正式加入与迎新派对</p><p>进来了之后就开始学 Golang，因为社团里的的项目都是用 Go 写的，这时我才发现，这里面真是大佬云集</p><p>有和我同级但是高中就开始学 Go，在 GitHub 建项目写 Telegram 机器人的 iyear（而我当时连 git 都没听说过），初中就开始混 GitHub 的前端大佬 daidr（我们前后端基本都在一个群聊天），会搞硬件和物联网的 atom，搞安全的 eson（曾在例会上当场演示 hack 某 xxx 平台），等等等</p><p>我感觉我唯一能说道的就是高中参加过 Noip 拿过奖了</p><p>来到这个集体我真的感觉真的看见了未来的方向，每天水群都看着佬们在讨论什么，今天又看见了什么新名词，然后我就去查，去弄懂，每天都能学到新东西</p><p>一开始是真的大部分都看不懂，到后来慢慢能看懂的越来越多，同时获取很多优质的信息渠道，会讨论最新的 Go 版本又有哪些新功能，有哪些值得参加的活动与比赛，V2EX 上的有意思的帖子，各个开源社区的氛围怎么样，又有什么大事件，怎么做 GitHub 和 JB 的学生认证，白嫖 Copilot 和 JB 全家桶，再到第一时间注册与体验 ChatGPT 与后来的 GPT4，折腾各种好玩的猫娘提示词…</p><p>当然啦，还有参与社团项目，其实平时要干的活也不是很多，我也没做过很多活，但是我记得第一次把 commit 合并到组织 repo 时的激动——当时是要改一个微信公众号的回复的链接，还是做那个校历的功能（正则关键词然后弹一段校历的 text，再后来改成 image 了），我只记得当时是真的兴奋，我的确能为他人做一些事情</p><p>哦对了，关于 Golang，我真的很感激社团的前辈选择了 Golang，我刚上手时就惊叹于它的简洁与美感。的确是 21 世纪的 C 语言，没有 C++ 深奥的语法（当初 Noip 的时候就看不懂重载运算符为什么需要写成那个样子），还保持了 C 的简单，同时解决了很多 C 的弊病，我真的很爱 Golang。可能更重要的是，对比 Java，Golang 在字节跳动与腾讯这种大公司更加流行，这也是我现在能在大厂实习的原因之一了吧</p><p>关于 Golang 最大的缺点感觉是有些过于简洁了，像是有洁癖一样，语法糖有点少，刚上手时另一点让我不满的是没有 C++ 里的 STL 这样方便的库，各种数据结构都需要手搓或者使用第三方的库</p><h2 id="为了我的简历">为了我的简历</h2><p>为了我的简历，对，一切为了简历</p><p>大一的时候其实参与了很多活动与比赛，包括数模，ACM 也尝试过互联网+、服务外包等等，但是要么是感觉没什么意思，要么是进不去（ACM 真的太卷了呜呜），要么是感觉学不到什么东西（我只能说互联网+这种就是纯纯的 PPT 大赛，幸好后面没在这种比赛上浪费时间）</p><p>你可能说我以前是打 Noip 的，ACM 怎么就进不去呢？哇我只能说我数学真的不好，我高考数学和物理是一个分数，都是 94（一个满分 150 一个满分 100），如果我数学很好的话，我当年也不会只拿一个省三了</p><p>我开始思考，我为什么要参加这些比赛与活动</p><blockquote><p>为了我的简历</p></blockquote><p>我开始思考，四年后我毕业，我能在面试官前拿出一份怎样的简历，我需要怎样向面试官证明我能胜任这个岗位</p><ul><li><p>努力卷绩点拼奖学金有用吗？</p><p>当你和腾讯的面试官面对面的时候，你跟他他掰扯你绩点多么多么高，拿过多少多少奖学金，他能靠这个给你 offer 吗</p><p>对，然后呢？这能说明你能帮我做出这个前端功能 / 你有经验能排查出这个慢 SQL 是为什么吗？</p><p>你只能说这句话，然后能接什么话呢？</p><p>你说钱？折腾 OSPP 直接 12k 到手不香吗，去大厂实习更是一个月大几 k，卷绩点投入产出比根本不够哇</p></li><li><p>你参加过 ACM 有用吗？</p><p>哦，如果奖项高的话的确是有些用的，但是你的水平应该做不到，而且你高中的时候已经玩过算法竞赛了，你可以把这些时间用来折腾项目与学习其他方面的计算机知识，这或许帮助会更大</p></li><li><p>你参加过互联网+，这有用吗？</p><p>你从中学到了什么呢？与其糊一个 Demo 出来，在学校做一个能实际落地的项目不更能体现你的能力吗？</p></li></ul><p>所以，我之后每投入精力去做一件事，我都会问我自己：</p><p>这件事能给我的简历增加一行吗？或者有什么其他理由让我付出时间？</p><h2 id="一年半的成长">一年半的成长</h2><p><img src="https://image.nickxu.me/202406040056794.png" alt="image-20240604125600448 AM"></p><blockquote><p>这 1.7 MB ，就是我成长的证明</p></blockquote><p>我写博客到目前统共 293 篇近 32w 字（平均一篇 1k 多也算是合理的数字），其中：</p><ul><li>高中：13 篇</li><li>大一上：28 篇</li><li>大一下：160 篇</li><li>大二上：51 篇</li><li>大二下：21 篇</li><li>大三上：16 篇</li><li>大三下（到目前）：4 篇</li></ul><p>你可以看出，<s>我现在已经江郎才尽了</s> 我成长最快的时候就是大一下、大二上、大二下三个学期</p><p>当时我花了一整个学期搞清楚我当前是个什么状况，我发现已经浪费了不少时间了，于是寒假开始我就努力学习与更新博客</p><h3 id="大一下">大一下</h3><ul><li><a href="https://nickxu.me/2022/03/13/%E3%80%8E%E6%9D%82%E6%96%87%E3%80%8F%E5%9C%A8%E8%BF%B7%E8%8C%AB%E4%B8%AD%E5%89%8D%E8%BF%9B/">2022-03-13『杂文』在迷茫中前进</a></li><li><a href="https://nickxu.me/2022/04/17/%E3%80%8E%E6%80%BB%E7%BB%93%E3%80%8F%E5%A4%A7%E4%B8%80%E4%B8%8B%E6%9C%9F%E4%B8%AD%E6%80%BB%E7%BB%93/">2022-04-17『总结』大一下期中总结 </a></li><li><a href="https://nickxu.me/2022/04/23/%E3%80%8E%E5%AE%9E%E8%AE%B0%E3%80%8F%E2%80%9C%E9%9F%B5%E5%91%B3%E6%9D%AD%E5%B7%9E%E2%80%9D%E6%B5%8B%E8%AF%95%E8%B5%9B%E7%90%83%E7%AB%A5%E5%BF%97%E6%84%BF%E7%BB%8F%E5%8E%86/">2022-04-23『实记』“韵味杭州”测试赛球童志愿经历 </a></li><li><a href="https://nickxu.me/2022/05/08/%E3%80%8E%E8%B5%9B%E5%90%8E%E6%84%9F%E6%83%B3%E3%80%8F2022%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%AD%A6%E9%99%A2-Debug-%E6%9D%AF%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%A4%A7%E8%B5%9B/">2022-05-08『赛后感想』2022 计算机学院 Debug 杯程序设计大赛</a></li><li><a href="https://nickxu.me/2022/05/30/%E3%80%8E%E6%80%BB%E7%BB%93%E3%80%8F2022%E5%B9%B45%E6%9C%8830%E6%97%A5%E9%98%B6%E6%AE%B5%E6%80%A7%E6%80%BB%E7%BB%93/">2022-05-30『总结』2022年5月30日阶段性总结 </a></li><li><a href="https://nickxu.me/2022/06/14/%E3%80%8E%E9%9A%8F%E7%AC%94%E3%80%8F618%E6%A1%8C%E9%9D%A2%E6%94%B9%E9%80%A0%E8%AE%A1%E5%88%92/">2022-06-14『随笔』618桌面改造计划 </a></li></ul><p>大一下，我开始努力学 SQL（大一上的时候就简单熟悉了 Gin 框架），然后第三季字节跳动青训营来了，我在社团里被带着参加构建了一个完整的后端单体项目（具体来说是给出接口定义，让你实现一个极简的抖音后端，他再给你一个定制的 App 客户端，能指定后端地址，让你演示能实现各个正常功能）</p><p>这一段时间我基本是强迫自己在日更博客，不管发生什么事情每天必须更一篇，必须有所收获</p><p>但是这时候我还不是很会 GORM，纯纯的学着其他人的接口逻辑 + Copilot 依葫芦画瓢，也积累了不少经验</p><p>最后的小组答辩结果的是第 10/79 名，详情可以看 <a href="https://nickxu.me/2022/06/12/%E3%80%8E%E5%AD%97%E8%8A%82%E9%9D%92%E8%AE%AD%E8%90%A5%E3%80%8F%E7%BB%93%E8%90%A5%E6%84%9F%E6%83%B3/">『字节青训营-3rd』结营感想（待后续）</a> 和 <a href="https://www.nickxu.top/2022/09/10/%E3%80%8E%E9%9A%8F%E7%AC%94%E3%80%8F%E5%86%99%E5%9C%A8%E6%96%B0%E5%AD%A6%E5%B9%B4%E4%BC%8A%E5%A7%8B/#%E9%9D%92%E8%AE%AD%E8%90%A5%E9%A1%BA%E5%88%A9%E7%BB%93%E8%90%A5">『随笔』写在新学年伊始#青训营顺利结营</a></p><p>每节课的课程笔记在这里 <a href="https://nickxu.me/categories/%E9%9D%92%E8%AE%AD%E8%90%A5/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8-3rd-%E5%90%8E%E7%AB%AF/">#字节跳动-3rd-后端</a></p><p><s>我一开始还跟着做笔记，但是后面发现根本跟不上，干脆给 PPT 截图得了</s></p><p>之后的暑假去参加了第四届青训营，但是没有后端方向，所以就去了大数据方向，我们组选的方向是做分布式存储</p><p>但是因为全家出去旅游+学车，我也不是很懂（大一的人怎么一上来就懂什么 gRPC 呢），而且团队里也不是杭助的人，是在群里组的，实际上两个半活人（我算半个，打下手的，最突出的贡献是写了个 Redis 的分布式锁）</p><p>最后没拿到奖，但是还是有所收获的</p><h3 id="大二上">大二上</h3><ul><li><a href="https://nickxu.me/2022/09/10/%E3%80%8E%E9%9A%8F%E7%AC%94%E3%80%8F%E5%86%99%E5%9C%A8%E6%96%B0%E5%AD%A6%E5%B9%B4%E4%BC%8A%E5%A7%8B/">2022-09-10『随笔』写在新学年伊始</a></li><li><a href="https://nickxu.me/2022/09/18/%E3%80%8E%E9%9A%8F%E7%AC%94%E3%80%8F2022-%E6%9D%AD%E5%8A%A9%E6%8B%9B%E6%96%B0%E9%9D%A2%E8%AF%95%E6%84%9F%E6%83%B3/">2022-09-18『随笔』面试官竟是我自己 —— 2022 杭助秋招面试工作感想</a></li><li><a href="https://nickxu.me/2022/09/29/%E3%80%8E%E6%80%BB%E7%BB%93%E3%80%8F2022%20%E5%9B%BD%E5%BA%86%E5%89%8D%E9%98%B6%E6%AE%B5%E6%80%A7%E6%80%BB%E7%BB%93/">2022-09-29『总结』2022 国庆前阶段性总结</a></li><li><a href="https://nickxu.me/2022/10/06/%E3%80%8ELinux%E3%80%8F%E5%B0%86-Ubuntu-22-04-%E4%BD%9C%E4%B8%BA%E4%B8%BB%E5%8A%9B%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%84%9F%E6%83%B3/">2022-10-06『Linux』一个多月来将 Ubuntu 22.04 作为主力系统的感想</a></li><li><a href="https://nickxu.me/2022/10/31/%E5%86%99%E5%9C%A810%E6%9C%88%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E5%A4%A9/">2022-10-31 写在10月的最后一天</a></li><li><a href="https://nickxu.me/2023/01/13/%E7%AC%AC%E4%BA%94%E5%B1%8A%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%92%E8%AE%AD%E8%90%A5%E9%A1%B9%E7%9B%AE%E4%BC%9A%E8%AE%AE%E7%BA%AA%E8%A6%81/">2023-01-13 第五届字节跳动青训营项目会议纪要</a></li><li><a href="https://nickxu.me/2023/03/13/%E7%AC%AC%E4%BA%94%E5%B1%8A%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%92%E8%AE%AD%E8%90%A5%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/">2023-03-13 第五届字节跳动青训营项目总结</a></li></ul><p>这个时候我开始几乎全程使用 Linux 了，除了打游戏的时候切一下 Windows ，因为之前做分布式存储的时候依赖 Unix 的接口，不能在 Windows 环境下开发，我那个时候用的是 WSL2，但这东西是真的难用，我受够了 Windows 开始坚持使用 Linux 桌面进行日常学习与开发</p><p>这段时间开始复习算法，当时还是想考研的，但是现在已经没有那个想法了</p><p>还有学习 GORM，还有 CICD、OAuth 、JWT 等后端比较常见的知识</p><p>这个阶段只能说在慢慢积累</p><p>之后接了一个活，就是给我们的一个学院搓一套教学系统，有点类似于学习通，但是有些定制性的功能，不过主要体现在前端上需要做一些额外功能</p><p>这段经历还是很重要的，因为是实际落地运行一个项目，这就是牵扯到很多屁事</p><p>有很多事情，跟你虚空去糊一个项目是完全不一样的</p><p>首先是跑在老师申请的校内的平台上的虚拟机，限制贼多，首先是每次 SSH 都需要走 eazy connect，找老师收手机验证码，我只能说这东西是真的难用，后来我搭了一个 Web 访问的 Shell，这样方便多了</p><p>另外，就是这个机子是没有网的，要做自动化部署开放什么域名的访问还得去找网络中心</p><p>然后后面最离谱的是有一天 CORS 居然报错了，一问居然是网络中心把 OPTION 方法给 ban 了，这下不能用 CORS 了</p><p>怎么办呢？同源策略嘛，只能再加个 Nginx 作为统一入口，然后根据 URL 分流前后端</p><p>另外因为是实际落地的项目，可观测性就很重要，服务监控、日志收集、链路追踪都必须做好 <s>，记得第一次在日志里看见线上 Panic 我还有点慌</s></p><p>之后，寒假参加了第五届字节跳动青训营（见上面链接），我作为组长是直奔项目而去的，然后发现居然是和上次一样的项目</p><p>上次是做的单体，这次就想用 go-zero 折腾个微服务，但是组里的小东西真的态度很差，根本不给劲，基本就是我和 yeebing 两个人糊的</p><p>然后最后答辩成绩出来发现是差不多 200 支队伍的第一名</p><p>我只能说，双非非科班的大二能在一堆 985 211 里（有些还是研究生）拿到第一，算是一种幸运吧</p><p>现在回过头来看那个项目，我只能说做的是纯纯的一坨</p><p><s>（一次次觉得以前写的东西都是一坨，每觉得一次就进步一次）</s></p><p>哦对了，这个学期还入了个二手的 MacBook，2020 款的初版 Pro，用的 M1（不是 M1 Pro 芯片），16 + 1T 花了我近 9k</p><p>其一是因为 Linux 桌面的确不算很好用（当时还没有现在 Linux QQ，全是 wine），而群友都在鼓励换 Mac，我就换了</p><p>事实证明这是我买过最值的电子产品，一直用到现在都很舒服，赞颂 macOS 神教</p><p>接下来大二下就开始了，我记得当时为了逼自己不能把时间花在打游戏上，就只带了 Mac 过去，之前的幻 13 送给我弟了</p><h3 id="大二下">大二下</h3><ul><li><a href="https://nickxu.me/2023/03/01/%E5%86%99%E5%9C%A8%E5%A4%A7%E4%BA%8C%E5%BC%80%E5%AD%A6%E4%B9%8B%E5%88%9D/">2023-03-01 写在大二下开学之初</a></li><li><a href="https://nickxu.me/posts/274.html">2023-05-04 2023五一总结：近况与将来</a></li><li><a href="https://nickxu.me/2023/06/my-story-with-OSPP-from-hearing-to-being-selected.html">2023-06-30『OSPP2023』我与 OSPP 的故事 —— 从听闻到中选</a></li><li><a href="https://nickxu.me/post/aliyun-oss-brushed-1000rmb-fees.html">2023-08-19 阿里云OSS被刷，我交了1000RMB学费</a></li></ul><p>大二下我属于是处于很忙当时不知道在忙什么的状态</p><p>首先头等大事是参加 OSPP（请见上面的链接），哇那篇博客感觉是到现在让我最满意的几篇之一</p><p>那段时间真是每天第一件事就是看今天又上了什么社区，上了什么项目</p><p>找准了之后又开始构思各种实现方案</p><p>除此之外就是平时上课了？我也忘了当时在忙什么了（博客没记想不起来了哈哈哈</p><p>哦对了还有亚运会志愿者的培训，因为下半年就要开亚运会了，经常被拉去奥体中心训练</p><p>然后，要到期末的时候，yeebing 居然开始面字节了，他当时还想拉着我一起去面</p><p>但是我感觉我是真的啥都不会哇，然后他说没关系的，你这个青训营第一拿出来肯定能进</p><p>但是我感觉我基础真的是还得复习，LeetCode 都没怎么刷过，算法基本都要忘光了，操作系统，计网，我也都不会</p><p>还有 MySQL Redis 那一堆八股也没背</p><p>所以我说让我准备一下，等下学期一开学我就去面吧</p><p>然后他居然就面进字节了，暑假开始上班，400 一天，纯纯的羡慕（话说他现在还在字节呢，快一年了）</p><p>然后，然后时间就到了去年 2023 年 8 月 22 日返校的那一天</p><p>而当时满腔热血的我不知道的是，长达 7 个月的至暗时刻即将到来</p><hr><h1 id="实习的动力">实习的动力</h1><p>我感觉我的前言和铺垫讲的已经挺够了，不过感觉还有一点需要补充</p><p>就是为什么我这 7 个月一直都在找实习，而一直都没有放弃</p><p>其中一个原因是看着周围一个个人都去大厂实习了，我不去是真说不过去哇 <s>（都没脸呆在群里了都）</s></p><p>字节 400 一天的薪水也实在是让我心动</p><p>但是最重要的是我需要尽快将之前的成就转化成更大的成就，不然就没什么用了</p><p>为什么会没什么用了呢？在我看来，至少在目前这个阶段，我的生活就是一维的 dp</p><p>转移方程就是从临近的几个状态推导出下个状态</p><p>其实和左耳朵耗子（在此默哀一下）说的差不多：也就是所谓的「成功是成功之母」</p><p>用我举例，那就是</p><ul><li>我在初中折腾计算机的经历与兴趣让我能在高中进入校队，打 Noip</li><li>我在高中的成绩和折腾经验，让我上了大学进了杭电助手</li><li>而来到杭电助手这个平台，又让我接触到更多东西，包括字节青训营取得的成绩，与各种经验与经历</li></ul><p>到这个阶段，我应该能把之前所积累的优势转化为另一个成功，这也是最关键的一步：拿到大厂实习</p><p>这意味着来到一个更大的平台，接触更多的知识与经验，而且这是真正有含金量的事情</p><p>我只能说如果我没拿到大厂实习，我都不知道我以后怎么找工作，无论是在国内还是国外</p><p>而且这个链条有个关键点：</p><p>这个 dp 的状态转移是不能停的，是跟着时间匀速往前走的，如果有一步掉了那就步步掉</p><p>等于是前几个临近状态取个总和？然后推到出新状态</p><p>而如果你临近的这几个状态都没什么新产出，都是零</p><p>这意味着你后面就都是零了，前面的产出作用也会越来越小</p><p>举个例子，就是我可以在大学的时候跟别人吹嘘高中的时候打过 Noip 拿过奖</p><p>但是等你毕业了，你还跟别人说你高中比赛拿过奖？谁会理你？</p><p>字节青训营也是一样的，你拿了第一，然后呢？这意味着什么呢？过段时间就没什么意义了</p><p>（唉青训营现在也不办了，最开始的发起人月影也都离职了，这种东西没了主心骨就很难继续）</p><p>所以我必须借助这个青训营的第一拿到实习</p><p>这样才能让这个循环继续下去</p><p>而这也给了我很大的压力，我在后面越找不到实习，就越焦虑</p><p>而越焦虑，越急，事情通常就越难办到</p><p>这就是为什么我说，这七个月是我从未承受过的痛苦</p>]]></content:encoded>
      
      
      
      
      <comments>https://nickxu.me/post/seven-months-of-struggle-preface.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Recovery From Panic</title>
      <link>https://nickxu.me/post/recovery-from-panic.html</link>
      <guid>https://nickxu.me/post/recovery-from-panic.html</guid>
      <pubDate>Sun, 19 May 2024 04:00:13 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://image.nickxu.me/202405221201934.png&quot; alt=&quot;c14be6b9eaadbe7ae1e40572e8cca6e3&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;真丢人，每次都搞成这样子呜呜&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不行啊，平时和女生讲话太少了，真经验不够&lt;/p&gt;
&lt;p&gt;我平时圈子就是一群搞技术的大老爷们，真没什么机会和女生说话&lt;/p&gt;
&lt;p&gt;我大学到目前三年全扑到主线任务上了，这也是我现在能在腾讯实习的原因&lt;/p&gt;
&lt;p&gt;但是支线是一点都没动啊（&lt;/p&gt;
&lt;p&gt;我之前其实是有做出些努力的，比如去年杭州亚运会我去做志愿者，朋友圈多了很多女生&lt;/p&gt;
&lt;p&gt;但是我感觉我真聊不起来哇 &lt;s&gt;（感觉真没什么好聊的）&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;我感觉我现在人际关系多多少少有点问题，我妈也经常说我，她去游泳也能交到朋友，去健身也能交到朋友，而我来来去去也就是搞技术的&lt;/p&gt;
&lt;p&gt;是时候做出些改变了（&lt;/p&gt;
&lt;p&gt;PS：因为现在开始上班了而且学习的事情也有点多，所以已经有很长一段时间没更新了，我只能说尽量把</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://image.nickxu.me/202405221201934.png" alt="c14be6b9eaadbe7ae1e40572e8cca6e3"></p><blockquote><p>真丢人，每次都搞成这样子呜呜</p></blockquote><p>不行啊，平时和女生讲话太少了，真经验不够</p><p>我平时圈子就是一群搞技术的大老爷们，真没什么机会和女生说话</p><p>我大学到目前三年全扑到主线任务上了，这也是我现在能在腾讯实习的原因</p><p>但是支线是一点都没动啊（</p><p>我之前其实是有做出些努力的，比如去年杭州亚运会我去做志愿者，朋友圈多了很多女生</p><p>但是我感觉我真聊不起来哇 <s>（感觉真没什么好聊的）</s></p><p>我感觉我现在人际关系多多少少有点问题，我妈也经常说我，她去游泳也能交到朋友，去健身也能交到朋友，而我来来去去也就是搞技术的</p><p>是时候做出些改变了（</p><p>PS：因为现在开始上班了而且学习的事情也有点多，所以已经有很长一段时间没更新了，我只能说尽量把我去年几个月的总结文早点发布出来吧</p><p><s>回看我之前的博客，发现我之前写的是真的好啊，特别是 <a href="https://nickxu.me/2023/06/my-story-with-OSPP-from-hearing-to-being-selected">OSPP 那篇</a>，这真是我能写出来的？</s></p>]]></content:encoded>
      
      
      
      
      <comments>https://nickxu.me/post/recovery-from-panic.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>简明 Docker + GitHub Actions 自动化部署教程</title>
      <link>https://nickxu.me/post/docker-cicd-setup-guide.html</link>
      <guid>https://nickxu.me/post/docker-cicd-setup-guide.html</guid>
      <pubDate>Fri, 22 Mar 2024 14:50:45 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;s&gt;我之前其实写过一些 &lt;a href=&quot;https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/CICD/&quot;&gt;cicd 的教程&lt;/a&gt;，但是写的太烂了，这篇算重构&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;直入正题，我会用我的一个 &lt;a href=&quot;https://github.com/NX-Official/gin-rush-template&quot;&gt;gin-rush-template&lt;/a&gt; 来做为 demo 演示&lt;/p&gt;
&lt;p&gt;你可以模仿下面的过程为自己的项目实现自动化部署&lt;/p&gt;
&lt;p&gt;我的 demo 的其实写的很烂的，但是你只需要知道它有三个特点，无需关注其他细节：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;会从 &lt;code&gt;config/config.yaml&lt;/code&gt; 读取配置文件&lt;/li&gt;
&lt;li&gt;需要连接 MySQL 依赖&lt;/li&gt;
&lt;li&gt;能提供一个 &lt;code&gt;/ping&lt;/code&gt; 接口&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们先做到让它在本地跑起来，首先 clone 下来，然后跟随下面的操作&lt;/p&gt;
&lt;figure class=&quot;highlig</description>
        
      
      
      
      <content:encoded><![CDATA[<p><s>我之前其实写过一些 <a href="https://www.nickxu.top/categories/%E8%BF%90%E7%BB%B4/CICD/">cicd 的教程</a>，但是写的太烂了，这篇算重构</s></p><p>直入正题，我会用我的一个 <a href="https://github.com/NX-Official/gin-rush-template">gin-rush-template</a> 来做为 demo 演示</p><p>你可以模仿下面的过程为自己的项目实现自动化部署</p><p>我的 demo 的其实写的很烂的，但是你只需要知道它有三个特点，无需关注其他细节：</p><ol><li>会从 <code>config/config.yaml</code> 读取配置文件</li><li>需要连接 MySQL 依赖</li><li>能提供一个 <code>/ping</code> 接口</li></ol><p>我们先做到让它在本地跑起来，首先 clone 下来，然后跟随下面的操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 复制一份配置文件</span><br><span class="line">cp config/config.example.yaml config/config.yaml</span><br><span class="line"></span><br><span class="line"># 运行 MySQL 依赖</span><br><span class="line">docker-compose -f docker-compose-env.yml up -d</span><br><span class="line"></span><br><span class="line"># 运行 Go 程序</span><br><span class="line">go run main.go</span><br></pre></td></tr></table></figure><p>如果没有报错，并且 curl 能正常提供服务，那么就没有问题了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl http://127.0.0.1:8080/ping</span><br><span class="line">&#123;&quot;message&quot;:&quot;pong&quot;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://image.nickxu.me/202403221930595.png" alt="image-2024032273050526 PM"></p><blockquote><p>或者你可以在浏览器中手动访问 <a href="http://127.0.0.1:8080/ping">http://127.0.0.1:8080/ping</a></p></blockquote><hr><h1 id="体验手动部署">体验手动部署</h1><h2 id="安装-Docker">安装 Docker</h2><p>接下来将体验手动编译并部署 Docker Image 到服务器，我以本地 OrbStack 提供的 Debian12 arm64 虚拟机为例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">nx@debian:~$ screenfetch</span><br><span class="line">         _,met$$$$$gg.           nx@debian</span><br><span class="line">      ,g$$$$$$$$$$$$$$$P.        OS: Debian</span><br><span class="line">    ,g$$P&quot;&quot;       &quot;&quot;&quot;Y$$.&quot;.      Kernel: aarch64 Linux 6.5.13-orbstack-00122-g57b8027e2387</span><br><span class="line">   ,$$P&#x27;              `$$$.      Uptime: 3h 56m</span><br><span class="line">  &#x27;,$$P       ,ggs.     `$$b:    Packages: 275</span><br><span class="line">  `d$$&#x27;     ,$P&quot;&#x27;   .    $$$     Shell: bash 5.2.15</span><br><span class="line">   $$P      d$&#x27;     ,    $$P     Disk: 442G / 1.4T (32%)</span><br><span class="line">   $$:      $$.   -    ,d$$&#x27;     CPU: Apple - @ 8x 2GHz</span><br><span class="line">   $$\;      Y$b._   _,d$P&#x27;      RAM: 979MiB / 5250MiB</span><br><span class="line">   Y$$.    `.`&quot;Y$$$$P&quot;&#x27;</span><br><span class="line">   `$$b      &quot;-.__</span><br><span class="line">    `Y$$</span><br><span class="line">     `Y$$.</span><br><span class="line">       `$$b.</span><br><span class="line">         `Y$$b.</span><br><span class="line">            `&quot;Y$b._</span><br><span class="line">                `&quot;&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><blockquote><p>请注意，本教程全程使用 arm64 架构（或称 aarch64 架构），而一般情况下云服务商提供的服务器为 amd64 架构（或称 x64 或 x86_64 架构）</p><p>服务器一般仅能运行当前的架构的 Docker Image，如果你的本地架构与目标架构不相同，则需要使用 <a href="https://cloud.tencent.com/developer/article/1543689?fileGuid=0l3NVKX0BgflYN3R">bulidx</a> 进行交叉编译，这并不在本文的讨论过程中</p><p>或者你可以跳过实践「手动部署」部分，而记得在后文编写 GitHub Actions 时记得选择与目标匹配的架构编译</p></blockquote><p>首先是在服务器安装 Docker 和 Docker Compose，这一点可以前往<a href="https://docs.docker.com/engine/install/debian/#install-using-the-repository/">官方文档</a>查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nx@debian:~$ docker -v</span><br><span class="line">Docker version 20.10.24+dfsg1, build 297e128</span><br><span class="line">nx@debian:~$ docker-compose -v</span><br><span class="line">Docker Compose version v2.25.0</span><br></pre></td></tr></table></figure><p>当然，你在本地也应当安装 Docker 和 Docker Compose，一般情况下 <a href="https://www.docker.com/get-started/">Docker Desktop</a> 或者 <a href="https://orbstack.dev/">OrbStack</a> 会是很好的选择</p><p>如果你从未听说过 Docker 与 Docker Compose，可以前往 Bilibili 或者 YouTube 学习</p><h2 id="编译-Docker-Image">编译 Docker Image</h2><p>接下来从项目根目录的 Dockerfile 编译 Docker Image</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> golang:latest as go-build-stage</span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> GOPROXY https://goproxy.cn,direct</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /go/src/app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> . .</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> scratch</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /app</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> --from=go-build-stage /go/src/app/main .</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> [<span class="string">&quot;./main&quot;</span>]</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t gin-rush-template:v1 .</span><br></pre></td></tr></table></figure><p>编译完成后检查得到的 Image</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br><span class="line">REPOSITORY                           TAG       IMAGE ID       CREATED              SIZE</span><br><span class="line">gin-rush-template                    v1        c21723202467   About a minute ago   21.1MB</span><br></pre></td></tr></table></figure><h2 id="推送至-Docker-Hub">推送至 Docker Hub</h2><p>现在我们要将这个 Image 传递到服务器上，这里可以上传到某些镜像仓库中，或者导出为文件再在服务器上从文件导入</p><p>这里我们直接上传到 <a href="https://hub.docker.com/">Docker Hub</a>（或者你可以使用一些云厂商的服务，这就需要查看对应的文档）</p><p>假设你已经注册了 Docker Hub 的账号，请在终端使用 <code>docker login</code> 进行登陆</p><p>在推送镜像之前，需要确保镜像被正确标记，以便符合 Docker Hub 的格式要求</p><p>一般的格式为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;你的用户名&gt;/&lt;应用名&gt;:&lt;版本标签&gt;</span><br></pre></td></tr></table></figure><p>而我们目前的镜像并没有用户名，所以需要使用 <code>docker tag</code> 重新命名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag gin-rush-template:v1 yourusername/gin-rush-template:v1</span><br></pre></td></tr></table></figure><p>请将 <code>yourusername</code> 替换为你的 Docker Hub 用户名，比如我需要执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag gin-rush-template:v1 nxofficial/gin-rush-template:v1</span><br></pre></td></tr></table></figure><p>现在，我们得到了一个名为 <code>nxofficial/gin-rush-template</code> 的镜像，它与之前的镜像指向一个相同的 ID，说明它们其实是一样的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br><span class="line">REPOSITORY                           TAG       IMAGE ID       CREATED          SIZE</span><br><span class="line">gin-rush-template                    v1        c21723202467   14 minutes ago   21.1MB</span><br><span class="line">nxofficial/gin-rush-template        v1        c21723202467   14 minutes ago   21.1MB</span><br></pre></td></tr></table></figure><p>下面，可以使用 <code>docker push</code> 推送镜像（如果被拒绝请先使用 <code>docker login</code> 进行登陆）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker push nxofficial/gin-rush-template:v1</span><br><span class="line">The push refers to repository [docker.io/nxofficial/gin-rush-template]</span><br><span class="line">c84414e107f0: Pushed</span><br><span class="line">3b8bd6ab22a4: Pushed</span><br><span class="line">v1: digest: sha256:4d1b5f800ba3ec7022fc9dec77ec1e8fd9d2dc103825373ab2dec2c3b6015fb5 size: 734</span><br></pre></td></tr></table></figure><p>现在在 Docker Hub 上已经能找到我们推送的镜像</p><p><img src="https://image.nickxu.me/202403222000869.png" alt="image-2024032280040822 PM"></p><blockquote><p>你可以看见，这个镜像是 arm64 架构</p></blockquote><h2 id="拉取并运行镜像">拉取并运行镜像</h2><p>下面的任务就是在服务器上拉取并运行镜像</p><p>首先找到 <code>deploy</code> 目录，其中的文件需要上传至服务器</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tree .</span><br><span class="line">.</span><br><span class="line">├── config.yaml</span><br><span class="line">└── docker-compose.yaml</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> directory, <span class="number">2</span> files</span><br></pre></td></tr></table></figure><p>其中 <code>congfig.yaml</code> 是要映射进 Docker 容器的配置文件</p><p>注意如何在 Docker 网络中访问某个容器提供的服务：直接使用服务名作为域名即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Mysql:</span></span><br><span class="line">  <span class="attr">Host:</span> <span class="string">&quot;mysql&quot;</span> <span class="comment"># 而不是 127.0.0.1</span></span><br><span class="line">  <span class="attr">Port:</span> <span class="string">&quot;3306&quot;</span></span><br></pre></td></tr></table></figure><p>而 <code>docker-compose.yaml</code>  用于编排服务</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;2.1&#x27;</span> <span class="comment"># 之所以不用3是因为3砍了好用的健康检查而逼你用没人用的 Docker Swarm</span></span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  gin-rush-template-net:</span><br><span class="line">    driver: bridge</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  app:</span><br><span class="line">    image: nxofficial/gin-rush-template:v1 <span class="comment"># 这里后面被改成了 latest，但是先使用 v1 体验一下</span></span><br><span class="line">    container_name: gin-rush-template-app</span><br><span class="line">    volumes:</span><br><span class="line">        - ./config.yaml:/app/config/config.yaml <span class="comment"># 将配置文件映射进来</span></span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">&quot;8080:8080&quot;</span></span><br><span class="line">    depends_on:</span><br><span class="line">      mysql:</span><br><span class="line">        condition: service_healthy</span><br><span class="line">    networks:</span><br><span class="line">      - gin-rush-template-net</span><br><span class="line"></span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql:<span class="number">8.0</span></span><br><span class="line">    container_name: gin-rush-template-mysql</span><br><span class="line">    environment:</span><br><span class="line">      MYSQL_ROOT_PASSWORD: <span class="number">12345678</span></span><br><span class="line">      MYSQL_DATABASE: gin-rush-template</span><br><span class="line">      TZ: Asia/Shanghai</span><br><span class="line">    <span class="keyword">healthcheck</span><span class="language-bash">:</span></span><br><span class="line">      <span class="comment"># MySQL 就绪检测</span></span><br><span class="line">      test: [ <span class="string">&quot;CMD&quot;</span>, <span class="string">&quot;mysqladmin&quot;</span> ,<span class="string">&quot;ping&quot;</span>, <span class="string">&quot;-h&quot;</span>, <span class="string">&quot;localhost&quot;</span> ]</span><br><span class="line">      interval: <span class="number">5</span>s</span><br><span class="line">      retries: <span class="number">10</span></span><br><span class="line">    privileged: true</span><br><span class="line">    restart: always</span><br><span class="line">    networks:</span><br><span class="line">      - gin-rush-template-net</span><br></pre></td></tr></table></figure><p>之后运行即可，他会自动拉下来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker-compose up</span><br><span class="line">WARN[0000] /Users/nx/GolandProjects/gin-rush-template/deploy/docker-compose.yaml: `version` is obsolete</span><br><span class="line">[+] Running 2/0</span><br><span class="line"> ✔ Container gin-rush-template-mysql  Created                                                                                                     0.0s</span><br><span class="line"> ✔ Container gin-rush-template-app    Created                                                                                                     0.0s</span><br><span class="line">Attaching to gin-rush-template-app, gin-rush-template-mysql</span><br><span class="line">gin-rush-template-mysql  | 2024-03-22 21:21:20+08:00 [Note] [Entrypoint]: Entrypoint script <span class="keyword">for</span> MySQL Server 8.0.36-1.el8 started.</span><br><span class="line">gin-rush-template-mysql  | 2024-03-22 21:21:20+08:00 [Note] [Entrypoint]: Switching to dedicated user <span class="string">&#x27;mysql&#x27;</span></span><br><span class="line">gin-rush-template-mysql  | 2024-03-22 21:21:20+08:00 [Note] [Entrypoint]: Entrypoint script <span class="keyword">for</span> MySQL Server 8.0.36-1.el8 started.</span><br><span class="line">gin-rush-template-mysql  | <span class="string">&#x27;/var/lib/mysql/mysql.sock&#x27;</span> -&gt; <span class="string">&#x27;/var/run/mysqld/mysqld.sock&#x27;</span></span><br><span class="line">gin-rush-template-mysql  | 2024-03-22T13:21:21.278083Z 0 [Warning] [MY-011068] [Server] The syntax <span class="string">&#x27;--skip-host-cache&#x27;</span> is deprecated and will be removed <span class="keyword">in</span> a future release. Please use SET GLOBAL host_cache_size=0 instead.</span><br><span class="line">gin-rush-template-mysql  | 2024-03-22T13:21:21.279792Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.36) starting as process 1</span><br><span class="line">gin-rush-template-mysql  | 2024-03-22T13:21:21.284859Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.</span><br><span class="line">gin-rush-template-mysql  | 2024-03-22T13:21:21.367493Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.</span><br><span class="line">gin-rush-template-mysql  | 2024-03-22T13:21:21.494743Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.</span><br><span class="line">gin-rush-template-mysql  | 2024-03-22T13:21:21.494766Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported <span class="keyword">for</span> this channel.</span><br><span class="line">gin-rush-template-mysql  | 2024-03-22T13:21:21.495550Z 0 [Warning] [MY-011810] [Server] Insecure configuration <span class="keyword">for</span> --pid-file: Location <span class="string">&#x27;/var/run/mysqld&#x27;</span> <span class="keyword">in</span> the path is accessible to all OS <span class="built_in">users</span>. Consider choosing a different directory.</span><br><span class="line">gin-rush-template-mysql  | 2024-03-22T13:21:21.504335Z 0 [System] [MY-011323] [Server] X Plugin ready <span class="keyword">for</span> connections. Bind-address: <span class="string">&#x27;::&#x27;</span> port: 33060, socket: /var/run/mysqld/mysqlx.sock</span><br><span class="line">gin-rush-template-mysql  | 2024-03-22T13:21:21.504354Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready <span class="keyword">for</span> connections. Version: <span class="string">&#x27;8.0.36&#x27;</span>  socket: <span class="string">&#x27;/var/run/mysqld/mysqld.sock&#x27;</span>  port: 3306  MySQL Community Server - GPL.</span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 /go/src/app/internal/global/database/mysql.go:36</span><br><span class="line">gin-rush-template-app    | [0.078ms] [rows:-] SELECT DATABASE()</span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 /go/src/app/internal/global/database/mysql.go:36</span><br><span class="line">gin-rush-template-app    | [1.725ms] [rows:1] SELECT SCHEMA_NAME from Information_schema.SCHEMATA <span class="built_in">where</span> SCHEMA_NAME LIKE <span class="string">&#x27;gin-rush-template%&#x27;</span> ORDER BY SCHEMA_NAME=<span class="string">&#x27;gin-rush-template&#x27;</span> DESC,SCHEMA_NAME <span class="built_in">limit</span> 1</span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 /go/src/app/internal/global/database/mysql.go:36</span><br><span class="line">gin-rush-template-app    | [0.887ms] [rows:-] SELECT count(*) FROM information_schema.tables WHERE table_schema = <span class="string">&#x27;gin-rush-template&#x27;</span> AND table_name = <span class="string">&#x27;user&#x27;</span> AND table_type = <span class="string">&#x27;BASE TABLE&#x27;</span></span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 /go/src/app/internal/global/database/mysql.go:36</span><br><span class="line">gin-rush-template-app    | [0.053ms] [rows:-] SELECT DATABASE()</span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 /go/src/app/internal/global/database/mysql.go:36</span><br><span class="line">gin-rush-template-app    | [0.200ms] [rows:1] SELECT SCHEMA_NAME from Information_schema.SCHEMATA <span class="built_in">where</span> SCHEMA_NAME LIKE <span class="string">&#x27;gin-rush-template%&#x27;</span> ORDER BY SCHEMA_NAME=<span class="string">&#x27;gin-rush-template&#x27;</span> DESC,SCHEMA_NAME <span class="built_in">limit</span> 1</span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 /go/src/app/internal/global/database/mysql.go:36</span><br><span class="line">gin-rush-template-app    | [1.952ms] [rows:-] SELECT * FROM `user` LIMIT 1</span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 /go/src/app/internal/global/database/mysql.go:36</span><br><span class="line">gin-rush-template-app    | [0.816ms] [rows:-] SELECT column_name, column_default, is_nullable = <span class="string">&#x27;YES&#x27;</span>, data_type, character_maximum_length, column_type, column_key, extra, column_comment, numeric_precision, numeric_scale , datetime_precision FROM information_schema.columns WHERE table_schema = <span class="string">&#x27;gin-rush-template&#x27;</span> AND table_name = <span class="string">&#x27;user&#x27;</span> ORDER BY ORDINAL_POSITION</span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 /go/src/app/internal/global/database/mysql.go:36</span><br><span class="line">gin-rush-template-app    | [0.070ms] [rows:-] SELECT DATABASE()</span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 /go/src/app/internal/global/database/mysql.go:36</span><br><span class="line">gin-rush-template-app    | [0.190ms] [rows:1] SELECT SCHEMA_NAME from Information_schema.SCHEMATA <span class="built_in">where</span> SCHEMA_NAME LIKE <span class="string">&#x27;gin-rush-template%&#x27;</span> ORDER BY SCHEMA_NAME=<span class="string">&#x27;gin-rush-template&#x27;</span> DESC,SCHEMA_NAME <span class="built_in">limit</span> 1</span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 /go/src/app/internal/global/database/mysql.go:36</span><br><span class="line">gin-rush-template-app    | [0.534ms] [rows:-] SELECT count(*) FROM information_schema.statistics WHERE table_schema = <span class="string">&#x27;gin-rush-template&#x27;</span> AND table_name = <span class="string">&#x27;user&#x27;</span> AND index_name = <span class="string">&#x27;idx_user_deleted_at&#x27;</span></span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 /go/src/app/internal/global/database/mysql.go:36</span><br><span class="line">gin-rush-template-app    | [0.039ms] [rows:-] SELECT DATABASE()</span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 /go/src/app/internal/global/database/mysql.go:36</span><br><span class="line">gin-rush-template-app    | [0.149ms] [rows:1] SELECT SCHEMA_NAME from Information_schema.SCHEMATA <span class="built_in">where</span> SCHEMA_NAME LIKE <span class="string">&#x27;gin-rush-template%&#x27;</span> ORDER BY SCHEMA_NAME=<span class="string">&#x27;gin-rush-template&#x27;</span> DESC,SCHEMA_NAME <span class="built_in">limit</span> 1</span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 /go/src/app/internal/global/database/mysql.go:36</span><br><span class="line">gin-rush-template-app    | [0.309ms] [rows:-] SELECT count(*) FROM information_schema.statistics WHERE table_schema = <span class="string">&#x27;gin-rush-template&#x27;</span> AND table_name = <span class="string">&#x27;user&#x27;</span> AND index_name = <span class="string">&#x27;idx_user_email&#x27;</span></span><br><span class="line">gin-rush-template-app    | [GIN-debug] [WARNING] Running <span class="keyword">in</span> <span class="string">&quot;debug&quot;</span> mode. Switch to <span class="string">&quot;release&quot;</span> mode <span class="keyword">in</span> production.</span><br><span class="line">gin-rush-template-app    |  - using <span class="built_in">env</span>:    <span class="built_in">export</span> GIN_MODE=release</span><br><span class="line">gin-rush-template-app    |  - using code:    gin.SetMode(gin.ReleaseMode)</span><br><span class="line">gin-rush-template-app    |</span><br><span class="line">gin-rush-template-app    | [GIN-debug] POST   /login                    --&gt; gin-rush-template/internal/module/user.Login (3 handlers)</span><br><span class="line">gin-rush-template-app    | [GIN-debug] POST   /register                 --&gt; gin-rush-template/internal/module/user.Create (3 handlers)</span><br><span class="line">gin-rush-template-app    | [GIN-debug] GET    /ping                     --&gt; gin-rush-template/internal/module/ping.(*ModulePing).InitRouter.func1 (3 handlers)</span><br><span class="line">gin-rush-template-app    | [GIN-debug] [WARNING] You trusted all proxies, this is NOT safe. We recommend you to <span class="built_in">set</span> a value.</span><br><span class="line">gin-rush-template-app    | Please check https://pkg.go.dev/github.com/gin-gonic/gin<span class="comment">#readme-don-t-trust-all-proxies for details.</span></span><br><span class="line">gin-rush-template-app    | [GIN-debug] Listening and serving HTTP on 0.0.0.0:8080</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 Init Module: User</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 Init Module: Ping</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 InitRouter: User</span><br><span class="line">gin-rush-template-app    | 2024/03/22 13:21:26 InitRouter: Ping</span><br></pre></td></tr></table></figure><p>如果你的服务器位于国内，可能会遇到网络问题，但这不属于本文的内容</p><h2 id="测试运行">测试运行</h2><p>在服务器上测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl 127.0.0.1:8080/ping</span><br><span class="line">&#123;<span class="string">&quot;message&quot;</span>:<span class="string">&quot;pong&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>在外部测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl http://debian.orb.local:8080/ping</span><br><span class="line">&#123;<span class="string">&quot;message&quot;</span>:<span class="string">&quot;pong&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>可见服务已经正常运行</p><hr><h1 id="实现自动化部署">实现自动化部署</h1><p>为了实现自动化部署，我们需要有两个环节的自动化：</p><ol><li>每次提交自动构建新镜像并推送至 Docker Hub</li><li>在 Docker Hub 每次收到新的更新时自动拉取并替换为新的 Image</li></ol><p>我们可以先实现第二个自动化</p><h2 id="自动拉取并替换">自动拉取并替换</h2><p>我们可以先更改一下代码，突出与之前的不同</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> func (p *ModulePing) InitRouter(r *gin.RouterGroup) &#123;</span><br><span class="line">     r.GET(&quot;/ping&quot;, func(c *gin.Context) &#123;</span><br><span class="line">         c.JSON(200, gin.H&#123;</span><br><span class="line">             &quot;message&quot;: &quot;pong&quot;,</span><br><span class="line"><span class="addition">+            &quot;version&quot;: &quot;v2&quot;,</span></span><br><span class="line">         &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>为了监听更新，我们可以使用 <a href="https://github.com/containrrr/watchtower">Watchtower</a> ，他能自动监听镜像的更新并进行替换</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">watchtower:</span><br><span class="line">  image: containrrr/watchtower</span><br><span class="line">  container_name: gin-rush-template-watchtower</span><br><span class="line">  command: --interval <span class="number">5</span></span><br><span class="line">  volumes:</span><br><span class="line">    - /var/<span class="keyword">run</span><span class="language-bash">/docker.sock:/var/run/docker.sock <span class="comment"># 需要将 Docker 的 sock 映射进去以控制 Docker</span></span></span><br><span class="line">  restart: always</span><br><span class="line">  networks:</span><br><span class="line">    - gin-rush-template-net</span><br></pre></td></tr></table></figure><p>同时，为了始终拉取最新的版本，我们可以将 app 的预期版本设置为 latest</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="deletion">- image: nxofficial/gin-rush-template:v1</span></span><br><span class="line"><span class="addition">+ image: nxofficial/gin-rush-template:latest</span></span><br></pre></td></tr></table></figure><p>然后在本地编译 Docker Image</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 构建镜像并添加多个标签</span><br><span class="line">docker build -t nxofficial/gin-rush-template:v2 -t nxofficial/gin-rush-template:latest .</span><br><span class="line"># 将两个标签都推送过去</span><br><span class="line">docker push nxofficial/gin-rush-template:latest</span><br><span class="line">docker push nxofficial/gin-rush-template:v2</span><br></pre></td></tr></table></figure><p><img src="https://image.nickxu.me/202403222150740.png" alt="image-2024032295026637 PM"></p><p>但你可以看见 latest 和 v2 其实是一个版本，每次重复操作就可以保留每个版本的 Docker Image 并且将 latest 指向最新版本</p><p><img src="https://image.nickxu.me/202403222150722.png" alt="image-2024032295053683 PM"><img src="https://image.nickxu.me/202403222151300.png" alt="image-2024032295100261 PM"></p><p>现在，重新启动 docker-compose</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">nx@debian:/Users/nx/GolandProjects/gin-rush-template/deploy$ sudo docker-compose down</span><br><span class="line">WARN[0000] /Users/nx/GolandProjects/gin-rush-template/deploy/docker-compose.yaml: `version` is obsolete</span><br><span class="line">[+] Running 3/0</span><br><span class="line"> ✔ Container gin-rush-template-app       Removed                                                                                                  0.0s</span><br><span class="line"> ✔ Container gin-rush-template-mysql     Removed                                                                                                  0.0s</span><br><span class="line"> ✔ Network deploy_gin-rush-template-net  Removed                                                                                                  0.0s</span><br><span class="line">nx@debian:/Users/nx/GolandProjects/gin-rush-template/deploy$ sudo docker-compose up</span><br><span class="line">WARN[0000] /Users/nx/GolandProjects/gin-rush-template/deploy/docker-compose.yaml: `version` is obsolete</span><br><span class="line">[+] Running 7/7</span><br><span class="line"> ✔ app 2 layers [⣿⣿]      0B/0B      Pulled                                                                                                      32.2s</span><br><span class="line">   ✔ 11af50565267 Already exists                                                                                                                  0.0s</span><br><span class="line">   ✔ 7eb7e9370331 Pull complete                                                                                                                  25.0s</span><br><span class="line"> ✔ watchtower 3 layers [⣿⣿⣿]      0B/0B      Pulled                                                                                              31.4s</span><br><span class="line">   ✔ 57241801ebfd Pull complete                                                                                                                   9.7s</span><br><span class="line">   ✔ 3d4f475b92a2 Pull complete                                                                                                                   9.4s</span><br><span class="line">   ✔ b6a140e9726f Pull complete                                                                                                                  21.0s</span><br><span class="line">[+] Running 4/3</span><br><span class="line"> ✔ Network deploy_gin-rush-template-net    Created                                                                                                0.0s</span><br><span class="line"> ✔ Container gin-rush-template-watchtower  Created                                                                                                0.1s</span><br><span class="line"> ✔ Container gin-rush-template-mysql       Created                                                                                                0.1s</span><br><span class="line"> ✔ Container gin-rush-template-app         Created                                                                                                0.0s</span><br></pre></td></tr></table></figure><p>看看，现在已经是 v2 了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl 127.0.0.1:8080/ping</span><br><span class="line">&#123;<span class="string">&quot;message&quot;</span>:<span class="string">&quot;pong&quot;</span>,<span class="string">&quot;version&quot;</span>:<span class="string">&quot;v2&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>这时，再把版本改成 v3 并重新上传</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker build -t nxofficial/gin-rush-template:v3 -t nxofficial/gin-rush-template:latest .</span><br><span class="line">docker push nxofficial/gin-rush-template:v3</span><br><span class="line">docker push nxofficial/gin-rush-template:latest</span><br></pre></td></tr></table></figure><p>发现 Watchtower 有响应了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gin-rush-template-watchtower  | time=<span class="string">&quot;2024-03-22T13:57:01Z&quot;</span> level=info msg=<span class="string">&quot;Session done&quot;</span> Failed=0 Scanned=3 Updated=0 notify=no</span><br><span class="line">gin-rush-template-watchtower  | time=<span class="string">&quot;2024-03-22T13:57:21Z&quot;</span> level=info msg=<span class="string">&quot;Found new nxofficial/gin-rush-template:latest image (e3283961517d)&quot;</span></span><br><span class="line">gin-rush-template-watchtower  | time=<span class="string">&quot;2024-03-22T13:57:36Z&quot;</span> level=info msg=<span class="string">&quot;Stopping /gin-rush-template-app (cbfe32e3ed41) with SIGTERM&quot;</span></span><br><span class="line">gin-rush-template-app exited with code 2</span><br><span class="line">gin-rush-template-watchtower  | time=<span class="string">&quot;2024-03-22T13:57:37Z&quot;</span> level=info msg=<span class="string">&quot;Creating /gin-rush-template-app&quot;</span></span><br><span class="line">gin-rush-template-watchtower  | time=<span class="string">&quot;2024-03-22T13:57:38Z&quot;</span> level=info msg=<span class="string">&quot;Session done&quot;</span> Failed=0 Scanned=3 Updated=1 notify=no</span><br></pre></td></tr></table></figure><p>测试，貌似完美</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl 127.0.0.1:8080/ping</span><br><span class="line">&#123;&quot;message&quot;:&quot;pong&quot;,&quot;version&quot;:&quot;v3&quot;&#125;</span><br></pre></td></tr></table></figure><h2 id="自动打包并上传">自动打包并上传</h2><p>接下来就要实现每次自动打包并上传的功能了，这一般可以使用 GitHub Actions</p><p>在项目根目录下创建 <code>.github/workflows/docker-publish.yaml</code></p><p>我选择了使用 bulidx 实现交叉编译以支持多种架构</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Build</span> <span class="string">and</span> <span class="string">Push</span> <span class="string">Docker</span> <span class="string">Image</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span> <span class="comment"># 指定触发事件的分支，这里是 main 分支</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build-and-push:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Check</span> <span class="string">out</span> <span class="string">the</span> <span class="string">code</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">up</span> <span class="string">QEMU</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/setup-qemu-action@v3</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">up</span> <span class="string">Docker</span> <span class="string">Buildx</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/setup-buildx-action@v3</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># 记得在 GitHub 仓库的 Secrets 中添加 DOCKER_USERNAME DOCKER_PASSWORD DOCKER_REPOSITORY 三个环境变量</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Log</span> <span class="string">in</span> <span class="string">to</span> <span class="string">Docker</span> <span class="string">Hub</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/login-action@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">username:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DOCKER_USERNAME</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.DOCKER_PASSWORD</span> <span class="string">&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">short</span> <span class="string">SHA</span></span><br><span class="line">        <span class="attr">id:</span> <span class="string">shortsha</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">echo</span> <span class="string">&quot;SHORT_SHA=$(echo $<span class="template-variable">&#123;&#123; github.sha &#125;&#125;</span> | cut -c1-8)&quot;</span> <span class="string">&gt;&gt;</span> <span class="string">$GITHUB_ENV</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">and</span> <span class="string">push</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">docker/build-push-action@v5</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">context:</span> <span class="string">.</span></span><br><span class="line">          <span class="attr">file:</span> <span class="string">./Dockerfile</span></span><br><span class="line">          <span class="attr">push:</span> <span class="literal">true</span></span><br><span class="line">          <span class="comment"># 使用 commit hash 作为镜像 tag</span></span><br><span class="line">          <span class="attr">tags:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; secrets.DOCKER_USERNAME &#125;&#125;/$&#123;&#123; secrets.DOCKER_REPOSITORY &#125;&#125;:latest</span></span><br><span class="line"><span class="string">            $&#123;&#123; secrets.DOCKER_USERNAME &#125;&#125;/$&#123;&#123; secrets.DOCKER_REPOSITORY &#125;&#125;:$&#123;&#123; env.SHORT_SHA &#125;&#125;</span></span><br><span class="line"><span class="string"></span>          <span class="attr">platforms:</span> <span class="string">linux/amd64,linux/arm64</span> <span class="comment"># 为多个架构编译，如果你确定只需要其中一种，可以仅保留一种</span></span><br></pre></td></tr></table></figure><p>同时请前往 GitHub 上配置你的环境变量，这样运行时就可以读取</p><p><img src="https://image.nickxu.me/202403222221106.png" alt="image-20240322102120002 PM"></p><p>之后推送 commit，等待自动化编译完成</p><p><img src="https://image.nickxu.me/202403222247893.png" alt="image-20240322104728856 PM"></p><p><img src="https://image.nickxu.me/202403222247255.png" alt="image-20240322104704203 PM"></p><p>实际上很多时候会使用 commit hash 作为 tag，我在这里也是这么处理的</p><p>回到服务器，发现 Watchtower 的确拉取了最新的镜像</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">curl</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8080/ping</span></span><br><span class="line">&#123;<span class="string">&quot;message&quot;</span><span class="string">:&quot;pong&quot;</span>,<span class="string">&quot;version&quot;</span><span class="string">:&quot;v4&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>大功告成❤️</p>]]></content:encoded>
      
      
      
      
      <comments>https://nickxu.me/post/docker-cicd-setup-guide.html#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Kitex 负载均衡源码解读之加权负载均衡算法</title>
      <link>https://nickxu.me/post/kitex-loadbalance-weighted-balancer.html</link>
      <guid>https://nickxu.me/post/kitex-loadbalance-weighted-balancer.html</guid>
      <pubDate>Sat, 09 Mar 2024 16:16:14 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;不多废话，直入正题&lt;/p&gt;
&lt;p&gt;Kitex 的负载均衡相关源码位于 &lt;code&gt;pkg/loadbalance&lt;/code&gt; ，具体结构如下&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span c</description>
        
      
      
      
      <content:encoded><![CDATA[<p>不多废话，直入正题</p><p>Kitex 的负载均衡相关源码位于 <code>pkg/loadbalance</code> ，具体结构如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">nx@NXsMacBook-Pro kitex % tree pkg/loadbalance</span><br><span class="line">pkg/loadbalance</span><br><span class="line">├── consist.go</span><br><span class="line">├── consist_test.go</span><br><span class="line">├── dummy_picker.go</span><br><span class="line">├── interleaved_weighted_round_robin.go</span><br><span class="line">├── iterator.go</span><br><span class="line">├── lbcache</span><br><span class="line">│   ├── cache.go</span><br><span class="line">│   ├── cache_test.go</span><br><span class="line">│   ├── hookable.go</span><br><span class="line">│   ├── hookable_test.go</span><br><span class="line">│   └── shared_ticker.go</span><br><span class="line">├── loadbalancer.go</span><br><span class="line">├── weighted_balancer.go</span><br><span class="line">├── weighted_balancer_test.go</span><br><span class="line">├── weighted_random.go</span><br><span class="line">├── weighted_random_with_alias_method.go</span><br><span class="line">├── weighted_round_robin.go</span><br><span class="line">└── weighted_round_robin_test.go</span><br><span class="line"></span><br><span class="line">2 directories, 17 files</span><br></pre></td></tr></table></figure><p>我们先去 <code>loadbalancer.go</code> 看见接口定义，感觉还是很清晰的</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Picker picks an instance for next RPC call.</span></span><br><span class="line"><span class="keyword">type</span> Picker <span class="keyword">interface</span> &#123;</span><br><span class="line">    Next(ctx context.Context, request <span class="keyword">interface</span>&#123;&#125;) discovery.Instance</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Loadbalancer generates pickers for the given service discovery result.</span></span><br><span class="line"><span class="keyword">type</span> Loadbalancer <span class="keyword">interface</span> &#123;</span><br><span class="line">    GetPicker(discovery.Result) Picker</span><br><span class="line">    Name() <span class="type">string</span> <span class="comment">// unique key</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Rebalancer is a kind of Loadbalancer that performs rebalancing when the result of service discovery changes.</span></span><br><span class="line"><span class="keyword">type</span> Rebalancer <span class="keyword">interface</span> &#123;</span><br><span class="line">    Rebalance(discovery.Change)</span><br><span class="line">    Delete(discovery.Change)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先 <code>discovery.Instance</code> 就是要负载均衡的基本对象</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Instance contains information of an instance from the target service.</span></span><br><span class="line"><span class="keyword">type</span> Instance <span class="keyword">interface</span> &#123;</span><br><span class="line">    Address() net.Addr</span><br><span class="line">    Weight() <span class="type">int</span></span><br><span class="line">    Tag(key <span class="type">string</span>) (value <span class="type">string</span>, exist <span class="type">bool</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>而 <code>discovery.Result</code> 是一组对象的集合</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Result contains the result of service discovery process.</span></span><br><span class="line"><span class="comment">// Cacheable tells whether the instance list can/should be cached.</span></span><br><span class="line"><span class="comment">// When Cacheable is true, CacheKey can be used to map the instance list in cache.</span></span><br><span class="line"><span class="keyword">type</span> Result <span class="keyword">struct</span> &#123;</span><br><span class="line">    Cacheable <span class="type">bool</span></span><br><span class="line">    CacheKey  <span class="type">string</span></span><br><span class="line">    Instances []Instance</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你查看 <code>Loadbalancer</code> 的实现，你会找到下面两个实现：</p><ul><li><code>consistBalancer</code> ：基于一致性哈希</li><li><code>weightedBalancer</code> ：基于加权算法</li></ul><p><img src="https://image.nickxu.me/202403091324333.png" alt="image-2024030912401242 PM"></p><p>为什么要区分这两个呢？我认为这两者适用的场景不同：</p><ul><li>一致性哈希较为复杂，但是能保证会话粘性，也就是相同键的请求总是路由到相同的服务实例</li><li>加权算法比较简单，但不能保证会话粘性</li></ul><p>本文将分析加权负载均衡器所提供的几种算法</p><hr><p>在 <code>weighted_balancer.go</code> 中，我们能找到如下定义</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">    lbKindRoundRobin = <span class="literal">iota</span>      <span class="comment">// 轮询 (Round Robin)</span></span><br><span class="line">    lbKindInterleaved            <span class="comment">// 交错轮询 (Interleaved)</span></span><br><span class="line">    lbKindRandom                 <span class="comment">// 随机 (Random)</span></span><br><span class="line">    lbKindRandomWithAliasMethod  <span class="comment">// 别名方法 (Alias Method)</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>这里的轮询包含了一般轮询和加权轮询，随机也包含了一般随机和加权随机，所以一共是 6 种算法</p><h1 id="轮询-Round-Robin，RR">轮询 (Round Robin，RR)</h1><h2 id="预期效果">预期效果</h2><p>最简单的负载均衡方式，让流量依次访问各个实例，例如有 3 个实例 <code>abc</code></p><p>那么轮询的访问顺序就 <code>a-b-c-a-b-c-a-b-c...</code> 如此往复</p><h2 id="实现">实现</h2><p>首先来看一般轮询的结构定义</p><p>下面的源码来源于 <code>weighted_round_robin.go</code> 和 <code>iterator.go</code>  两个文件，我把它们拼到了一起</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// RoundRobinPicker .</span></span><br><span class="line"><span class="keyword">type</span> RoundRobinPicker <span class="keyword">struct</span> &#123;</span><br><span class="line">    size      <span class="type">uint64</span></span><br><span class="line">    instances []discovery.Instance</span><br><span class="line">    iterator  *round</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// round implement a strict Round Robin algorithm</span></span><br><span class="line"><span class="keyword">type</span> round <span class="keyword">struct</span> &#123;</span><br><span class="line">    state <span class="type">uint64</span>    <span class="comment">// 8 bytes</span></span><br><span class="line">    _     [<span class="number">7</span>]<span class="type">uint64</span> <span class="comment">// + 7 * 8 bytes</span></span><br><span class="line">    <span class="comment">// = 64 bytes</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你可以看见迭代器 <code>iterator</code> 实际上就是一个数字，但是为了凑成 64 byte 而封装成了结构体，这应该是为了缓存行对齐或者是内存对齐</p><p>它的运行过程是这样的</p><h3 id="初始化">初始化</h3><p>首先构造 <code>RoundRobinPicker</code> ，并且在迭代器中设置一个随机数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newRoundRobinPicker</span><span class="params">(instances []discovery.Instance)</span></span> Picker &#123;</span><br><span class="line">    size := <span class="type">uint64</span>(<span class="built_in">len</span>(instances))</span><br><span class="line">    <span class="keyword">return</span> &amp;RoundRobinPicker&#123;</span><br><span class="line">        size:      size,</span><br><span class="line">        instances: instances,</span><br><span class="line">        iterator:  newRandomRound(),</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newRandomRound</span><span class="params">()</span></span> *round &#123;</span><br><span class="line">    r := &amp;round&#123;</span><br><span class="line">        state: fastrand.Uint64(),</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://image.nickxu.me/202403091426582.png" alt="image-2024030922631510 PM"></p><h3 id="选择实例">选择实例</h3><p>然后每次调用 <code>Picker</code> 的 <code>Next</code> 时，都会先调用迭代器的 <code>Next</code> ，把随机数原子加一</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *round)</span></span> Next() <span class="type">uint64</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> atomic.AddUint64(&amp;r.state, <span class="number">1</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后，在把这个数对 <code>size</code> 取模，返回对应编号的实例</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rp *RoundRobinPicker)</span></span> Next(ctx context.Context, request <span class="keyword">interface</span>&#123;&#125;) (ins discovery.Instance) &#123;</span><br><span class="line">    <span class="keyword">if</span> rp.size == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    idx := rp.iterator.Next() % rp.size</span><br><span class="line">    ins = rp.instances[idx]</span><br><span class="line">    <span class="keyword">return</span> ins</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如此往复，便能得到预期的效果</p><hr><h1 id="加权轮询（Weighted-Round-Robin｜WRR）"><a href="https://github.com/cloudwego/kitex/issues/1014">加权轮询（Weighted Round Robin｜WRR）</a></h1><h2 id="预期效果-2">预期效果</h2><p>加权轮询就是每个实例都有权重，例如 <code>abc</code> 的权重分别是 <code>&#123; 5, 1, 1 &#125; </code></p><p>可以构造出序列 <code>&#123; c, b, a, a, a, a, a &#125;</code> 实现按比例分配流量，但是这会让 <code>a</code> 被短暂持续访问</p><p>于是就有了平滑加权轮询，将 <code>a</code> 分散分布，而不是堆在一起</p><p>如注释所说，Kitex 使用的是平滑加权轮询，准确来说，使用的是 <a href="https://www.infoq.cn/article/sebuh0k6ji*ytfqzcihb">毅松（GitHub@wangfakang）的VNSWRR</a></p><h2 id="实现-2">实现</h2><p>先看结构定义</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// WeightedRoundRobinPicker implement smooth weighted round-robin algorithm.</span></span><br><span class="line"><span class="comment">// Refer from https://github.com/phusion/nginx/commit/27e94984486058d73157038f7950a0a36ecc6e35</span></span><br><span class="line"><span class="keyword">type</span> WeightedRoundRobinPicker <span class="keyword">struct</span> &#123;</span><br><span class="line">    nodes []*wrrNode <span class="comment">// instance node with current weight</span></span><br><span class="line">    size  <span class="type">uint64</span>     <span class="comment">// size of wrrNodes</span></span><br><span class="line"></span><br><span class="line">    iterator  *round</span><br><span class="line">    vsize     <span class="type">uint64</span>               <span class="comment">// size of valid vnodes</span></span><br><span class="line">    vcapacity <span class="type">uint64</span>               <span class="comment">// capacity of all vnodes</span></span><br><span class="line">    vnodes    []discovery.Instance <span class="comment">// precalculated vnodes which order by swrr algorithm</span></span><br><span class="line">    vlock     sync.RWMutex         <span class="comment">// mutex for vnodes</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> wrrNode <span class="keyword">struct</span> &#123;</span><br><span class="line">    discovery.Instance</span><br><span class="line">    current <span class="type">int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong><code>wrrNode</code></strong>：代表一个服务实例及其当前权重状态。<code>current</code>字段用于在算法中暂存当前权重的动态值</li><li><strong><code>WeightedRoundRobinPicker</code></strong>：包含了所有服务实例节点（<code>nodes</code>）、有效虚拟节点数（<code>vsize</code>）、虚拟节点容量（<code>vcapacity</code>），以及预计算的虚拟节点数组（<code>vnodes</code>）</li></ul><h3 id="初始化-2">初始化</h3><p>首先将输入的 <code>instances</code> 以乱序存入 <code>nodes</code> ，同时求出最大公约数得到需要的虚拟节点个数</p><p>例如权重 <code>&#123; 10, 20, 30&#125;</code> ，最大公约数是 10，然后用总和 60/10 得到至少需要 6 个虚拟节点</p><p>最后再调用 <code>buildVirtualWrrNodes</code> 方法在 <code>vnodes</code> 中构建虚拟节点</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newWeightedRoundRobinPicker</span><span class="params">(instances []discovery.Instance)</span></span> Picker &#123;</span><br><span class="line">    wrrp := <span class="built_in">new</span>(WeightedRoundRobinPicker)</span><br><span class="line">    wrrp.iterator = newRound()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 乱序存入 nodes，同时计算 gcd</span></span><br><span class="line">    wrrp.size = <span class="type">uint64</span>(<span class="built_in">len</span>(instances))</span><br><span class="line">    wrrp.nodes = <span class="built_in">make</span>([]*wrrNode, wrrp.size)</span><br><span class="line">    offset := fastrand.Uint64n(wrrp.size)</span><br><span class="line">    totalWeight := <span class="number">0</span></span><br><span class="line">    gcd := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> idx := <span class="type">uint64</span>(<span class="number">0</span>); idx &lt; wrrp.size; idx++ &#123;</span><br><span class="line">        ins := instances[(idx+offset)%wrrp.size]</span><br><span class="line">        totalWeight += ins.Weight()</span><br><span class="line">        gcd = gcdInt(gcd, ins.Weight())</span><br><span class="line">        wrrp.nodes[idx] = &amp;wrrNode&#123;</span><br><span class="line">            Instance: ins,</span><br><span class="line">            current:  <span class="number">0</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    wrrp.vcapacity = <span class="type">uint64</span>(totalWeight / gcd) <span class="comment">// 计算需要的虚拟节点数量</span></span><br><span class="line">    wrrp.vnodes = <span class="built_in">make</span>([]discovery.Instance, wrrp.vcapacity)</span><br><span class="line">    wrrp.buildVirtualWrrNodes(wrrVNodesBatchSize)</span><br><span class="line">    <span class="keyword">return</span> wrrp</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> wrrVNodesBatchSize = <span class="number">500</span> <span class="comment">// it will calculate wrrVNodesBatchSize vnodes when insufficient</span></span><br></pre></td></tr></table></figure><p>那么具体来说 <code>buildVirtualWrrNodes</code> 是怎么处理的呢？</p><p>他并不会一次构建出全部的虚拟节点（将构建任务分散，轮询时逐步构建），而是先确定一个构建目标（每次向前构建 <code>wrrVNodesBatchSize</code> 个）</p><p>然后从当前已有的位置开始，逐个构建到目标位置</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wp *WeightedRoundRobinPicker)</span></span> buildVirtualWrrNodes(vtarget <span class="type">uint64</span>) &#123;</span><br><span class="line">    <span class="comment">// 确保目标虚拟节点数量不超过容量上限</span></span><br><span class="line">    <span class="keyword">if</span> vtarget &gt; wp.vcapacity &#123;</span><br><span class="line">        vtarget = wp.vcapacity</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 从当前有效的虚拟节点数量开始，构建至目标数量的虚拟节点</span></span><br><span class="line">    <span class="keyword">for</span> i := wp.vsize; i &lt; vtarget; i++ &#123;</span><br><span class="line">        <span class="comment">// 使用 nextWrrNode 选择下一个节点，并将其实例赋值给虚拟节点数组</span></span><br><span class="line">        wp.vnodes[i] = nextWrrNode(wp.nodes).Instance</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 更新当前有效的虚拟节点数量</span></span><br><span class="line">    wp.vsize = vtarget</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而构建每个虚拟节点时都会调用一次 <code>nextWrrNode</code> ，它的工作流程如下：</p><ol><li><p><strong>增加当前权重</strong>：对于节点列表（<code>nodes</code>）中的每个节点，函数首先将节点的静态权重（<code>node.Weight()</code>）加到它的当前权重（<code>node.current</code>）上</p><p>这个步骤是在每次选择过程中为所有节点平等地增加权重，确保长期内权重较高的节点能获得更多的选择机会</p></li><li><p><strong>选择最大当前权重的节点</strong>：在所有节点的当前权重被更新后，函数遍历节点列表，选择当前权重（<code>current</code>）最高的节点作为本次选择的节点</p><p>这确保了每次都倾向于选择当前权重相对较高的节点，从而反映了节点的权重比例</p></li><li><p><strong>减去总权重</strong>：在选择了当前权重最高的节点后，函数会从该节点的当前权重中减去所有节点的静态权重之和</p><p>这一步骤是关键，它使得被选中的节点在下一轮选择中的优势减少，防止它连续被过度选择，从而给其他节点以被选择的机会，实现平滑的效果</p></li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">nextWrrNode</span><span class="params">(nodes []*wrrNode)</span></span> (selected *wrrNode) &#123;</span><br><span class="line">    <span class="comment">// 初始化用于比较的当前最大权重</span></span><br><span class="line">    maxCurrent := <span class="number">0</span></span><br><span class="line">    <span class="comment">// 总权重，用于后续平滑权重调整</span></span><br><span class="line">    totalWeight := <span class="number">0</span></span><br><span class="line">    <span class="comment">// 遍历所有节点，增加它们的当前权重，并找到当前权重最大的节点</span></span><br><span class="line">    <span class="keyword">for</span> _, node := <span class="keyword">range</span> nodes &#123;</span><br><span class="line">        node.current += node.Weight()</span><br><span class="line">        totalWeight += node.Weight()</span><br><span class="line">        <span class="keyword">if</span> selected == <span class="literal">nil</span> || node.current &gt; maxCurrent &#123;</span><br><span class="line">            selected = node</span><br><span class="line">            maxCurrent = node.current</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果没有选中的节点（理论上不应该发生），则返回 nil</span></span><br><span class="line">    <span class="keyword">if</span> selected == <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 从选中节点的当前权重中减去总权重，为下一次选择做平滑调整</span></span><br><span class="line">    selected.current -= totalWeight</span><br><span class="line">    <span class="keyword">return</span> selected</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://image.nickxu.me/202403091842848.png" alt="image-2024030964256781 PM"></p><p>构建完成后的虚拟列表，3 个 30 权重的，2 个 20 权重的，1 个 10 权重的，同时很平滑</p><h3 id="选择实例-2">选择实例</h3><p>现在 Next 方法就比较好理解了，和轮询一样依次遍历虚拟节点，无非就是两种情况：</p><ol><li>需要节点已经构建，直接返回</li><li>需要的节点还没构建，这时需要调用构建函数往前推进一些</li></ol><p>但是由于并发的存在，需要有一些锁的处理</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Next implements the Picker interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wp *WeightedRoundRobinPicker)</span></span> Next(ctx context.Context, request <span class="keyword">interface</span>&#123;&#125;) (ins discovery.Instance) &#123;</span><br><span class="line">    <span class="comment">// 使用迭代器获取下一个索引值，用于选择虚拟节点。迭代器确保每次调用都前进一步。</span></span><br><span class="line">    idx := wp.iterator.Next() % wp.vcapacity</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 快速路径：尝试从预计算的虚拟节点数组中获取实例。</span></span><br><span class="line">    <span class="comment">// 这里使用读锁来支持并发访问，提高性能。</span></span><br><span class="line">    wp.vlock.RLock()</span><br><span class="line">    ins = wp.vnodes[idx]</span><br><span class="line">    wp.vlock.RUnlock()</span><br><span class="line">    <span class="comment">// 如果找到了实例，则直接返回，这表示该虚拟节点已经被预先计算并分配了实例。</span></span><br><span class="line">    <span class="keyword">if</span> ins != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ins</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 慢速路径：如果虚拟节点数组中的对应位置没有实例（可能是因为虚拟节点尚未被构建）。</span></span><br><span class="line">    wp.vlock.Lock() <span class="comment">// 上写锁以修改虚拟节点数组</span></span><br><span class="line">    <span class="keyword">defer</span> wp.vlock.Unlock() <span class="comment">// 确保锁会被释放</span></span><br><span class="line">    <span class="comment">// 再次检查，以防其他协程已经填充了该位置的虚拟节点</span></span><br><span class="line">    <span class="keyword">if</span> wp.vnodes[idx] != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> wp.vnodes[idx] <span class="comment">// 如果其他协程已经处理，直接返回实例</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算需要构建的虚拟节点目标数量，确保包含当前索引</span></span><br><span class="line">    vtarget := wp.vsize + wrrVNodesBatchSize</span><br><span class="line">    <span class="comment">// 如果目标索引超过了计划构建的虚拟节点数量，调整目标以包含当前索引</span></span><br><span class="line">    <span class="keyword">if</span> idx &gt;= vtarget &#123;</span><br><span class="line">        vtarget = idx + <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 构建足够数量的虚拟节点，以满足当前请求</span></span><br><span class="line">    wp.buildVirtualWrrNodes(vtarget)</span><br><span class="line">    <span class="comment">// 返回当前索引位置的实例</span></span><br><span class="line">    <span class="keyword">return</span> wp.vnodes[idx]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>为什么要检查一下需求位置是否超过了计划构建的位置呢？每次都已经计划往后构建 500 个了呀</p><p>我猜测是在高并发环境下，可能同时有超过 500 个获取请求，这时需求位置就超过了计划位置，需要构建超过 500 个</p><p>这也是前面要再次检查协程是否已经填充了需求位置的虚拟节点的原因</p><hr><h1 id="交错加权轮询（Interleaved-Weighted-Round-Robin｜IWRR）"><a href="https://github.com/cloudwego/kitex/pull/1019">交错加权轮询（Interleaved Weighted Round Robin｜IWRR）</a></h1><h2 id="预期效果-3">预期效果</h2><p>也是加权轮询，但是 WRR 的空间复杂度是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mo>∑</mo><mrow><mi>i</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>e</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi></mrow></mrow><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>i</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>e</mi><mi mathvariant="normal">.</mi><mi>w</mi><mi>e</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mo stretchy="false">)</mo></mrow></mfrac></mstyle><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(\dfrac{\sum {instance.weight}}{gcd(instance.weight)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">in</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">an</span><span class="mord mathnormal">ce</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">in</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">an</span><span class="mord mathnormal">ce</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">e</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span>，IWRR 的空间复杂度是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><mi>i</mi><mi>n</mi><mi>s</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>e</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(len(instance))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">in</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">an</span><span class="mord mathnormal">ce</span><span class="mclose">))</span></span></span></span>​</p><p>虽然时间复杂度加了点常数，但是在实例权重非常大的情况下很节省空间</p><p>不过这种情况感觉也不是很多，所以默认算法还是 WRR</p><h2 id="实现-3">实现</h2><p>你已经看见了，Kitex 使用的 IWRR 的只有两个队列：当前队列和下一次队列</p><p>这并不是标准的 IWRR，它放弃了平滑特性，理由是在大流量下平滑特性并有没什么作用，一个循环会在很短的时间内完成</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> iwrrNode <span class="keyword">struct</span> &#123;</span><br><span class="line">    discovery.Instance</span><br><span class="line">    remainder <span class="type">int</span></span><br><span class="line"></span><br><span class="line">    next *iwrrNode</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> iwrrQueue <span class="keyword">struct</span> &#123;</span><br><span class="line">    head *iwrrNode</span><br><span class="line">    tail *iwrrNode</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> InterleavedWeightedRoundRobinPicker <span class="keyword">struct</span> &#123;</span><br><span class="line">    current *iwrrQueue</span><br><span class="line">    next    *iwrrQueue</span><br><span class="line">    gcd     <span class="type">int</span></span><br><span class="line"></span><br><span class="line">    lock sync.Mutex</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newIwrrQueue</span><span class="params">()</span></span> *iwrrQueue &#123; <span class="keyword">return</span> &amp;iwrrQueue&#123;&#125;&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(q *iwrrQueue)</span></span> enqueue(node *iwrrNode) &#123; <span class="comment">/***/</span> &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(q *iwrrQueue)</span></span> dequeue() *iwrrNode &#123; <span class="comment">/***/</span> &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(q *iwrrQueue)</span></span> empty() <span class="type">bool</span> &#123; <span class="comment">/***/</span> &#125;</span><br></pre></td></tr></table></figure><ul><li><strong>iwrrNode</strong>: 表示单个服务实例及其剩余权重。每个节点包括实例信息、剩余权重（<code>remainder</code>），和指向下一个节点的指针（<code>next</code>）</li><li><strong>iwrrQueue</strong>: 管理<code>iwrrNode</code>节点的队列，支持入队（<code>enqueue</code>）和出队（<code>dequeue</code>）操作。队列维护了头节点（<code>head</code>）和尾节点（<code>tail</code>）的引用，以支持高效的操作</li><li><strong>InterleavedWeightedRoundRobinPicker</strong>: 实现了交错加权轮询算法的选择器。它维护两个队列（<code>current</code>和<code>next</code>），以及所有实例权重的最大公约数（<code>gcd</code>）</li></ul><h3 id="初始化-3">初始化</h3><p>将实例乱序放入当前队列中，并将 <code>remainder</code> 初始化为实例权重，同时计算 <code>gcd</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newInterleavedWeightedRoundRobinPicker</span><span class="params">(instances []discovery.Instance)</span></span> Picker &#123;</span><br><span class="line">    iwrrp := <span class="built_in">new</span>(InterleavedWeightedRoundRobinPicker)</span><br><span class="line">    iwrrp.current = newIwrrQueue()</span><br><span class="line">    iwrrp.next = newIwrrQueue()</span><br><span class="line"></span><br><span class="line">    size := <span class="type">uint64</span>(<span class="built_in">len</span>(instances))</span><br><span class="line">    offset := fastrand.Uint64n(size)</span><br><span class="line">    gcd := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> idx := <span class="type">uint64</span>(<span class="number">0</span>); idx &lt; size; idx++ &#123;</span><br><span class="line">        ins := instances[(idx+offset)%size]</span><br><span class="line">        gcd = gcdInt(gcd, ins.Weight())</span><br><span class="line"></span><br><span class="line">        iwrrp.current.enqueue(&amp;iwrrNode&#123;</span><br><span class="line">            Instance:  ins,</span><br><span class="line">            remainder: ins.Weight(),</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    iwrrp.gcd = gcd</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> iwrrp</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://image.nickxu.me/202403092044033.png" alt="image-2024030984408945 PM"></p><h3 id="选择实例-3">选择实例</h3><ol><li><p>每次被选中后都会减少 <code>remainder</code> （使用 <code>gcd</code> 来缩短周期）</p><p>当 <code>remainder</code>为 0 时表示当前周期内不可调度，将其放到下一次队列中</p></li><li><p>当当前队列为空时表示当前周期所有元素都被按权重选择过了，此时对换当前队列和下一次队列开始新一轮周期</p></li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(ip *InterleavedWeightedRoundRobinPicker)</span></span> Next(ctx context.Context, request <span class="keyword">interface</span>&#123;&#125;) discovery.Instance &#123;</span><br><span class="line">    ip.lock.Lock()</span><br><span class="line">    <span class="keyword">defer</span> ip.lock.Unlock()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ip.current.empty() &#123;</span><br><span class="line">       ip.current, ip.next = ip.next, ip.current</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    node := ip.current.dequeue()</span><br><span class="line">    node.remainder -= ip.gcd</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> node.remainder &gt; <span class="number">0</span> &#123;</span><br><span class="line">       ip.current.enqueue(node)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       node.remainder = node.Instance.Weight()</span><br><span class="line">       ip.next.enqueue(node)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> node.Instance</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于始终复用节点，所以初始化后无需申请新的空间</p><h1 id="随机（Random）">随机（Random）</h1><h2 id="预期效果-4">预期效果</h2><p>非常朴素的随机分配</p><h2 id="实现-4">实现</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> randomPicker <span class="keyword">struct</span> &#123;</span><br><span class="line">    instances []discovery.Instance</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="初始化-4">初始化</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newRandomPicker</span><span class="params">(instances []discovery.Instance)</span></span> Picker &#123;</span><br><span class="line">    <span class="keyword">return</span> &amp;randomPicker&#123;</span><br><span class="line">       instances: instances,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选择实例-4">选择实例</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Next implements the Picker interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(rp *randomPicker)</span></span> Next(ctx context.Context, request <span class="keyword">interface</span>&#123;&#125;) (ins discovery.Instance) &#123;</span><br><span class="line">    idx := fastrand.Intn(<span class="built_in">len</span>(rp.instances))</span><br><span class="line">    <span class="keyword">return</span> rp.instances[idx]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="加权随机（Weighted-Random）">加权随机（Weighted Random）</h1><h2 id="预期效果-5">预期效果</h2><p>基于随机实现的加权负载均衡，唯一的好处就是没有空间占用，缺点是时间复杂度很高</p><p>具体来说就是模拟了 <a href="https://zh.wikipedia.org/wiki/%E7%B4%AF%E7%A7%AF%E5%88%86%E5%B8%83%E5%87%BD%E6%95%B0">累积分布函数（CDF）</a>的行为</p><h2 id="实现-5">实现</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> weightedRandomPicker <span class="keyword">struct</span> &#123;</span><br><span class="line">    instances []discovery.Instance</span><br><span class="line">    weightSum <span class="type">int</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="初始化-5">初始化</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newWeightedRandomPickerWithSum</span><span class="params">(instances []discovery.Instance, weightSum <span class="type">int</span>)</span></span> Picker &#123;</span><br><span class="line">    <span class="keyword">return</span> &amp;weightedRandomPicker&#123;</span><br><span class="line">       instances: instances,</span><br><span class="line">       weightSum: weightSum,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选择实例-5">选择实例</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Next implements the Picker interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(wp *weightedRandomPicker)</span></span> Next(ctx context.Context, request <span class="keyword">interface</span>&#123;&#125;) (ins discovery.Instance) &#123;</span><br><span class="line">    weight := fastrand.Intn(wp.weightSum)</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(wp.instances); i++ &#123;</span><br><span class="line">       weight -= wp.instances[i].Weight()</span><br><span class="line">       <span class="keyword">if</span> weight &lt; <span class="number">0</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> wp.instances[i]</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="别名方法（Alias-Method）"><a href="https://github.com/cloudwego/kitex/pull/1199">别名方法（Alias Method）</a></h1><p><s>如你所见，这个算法是我贡献的哈哈哈😋</s></p><h2 id="预期效果-6">预期效果</h2><p>在选取阶段可以做到常数极低的 <code>O(1)</code> 的时间复杂度</p><h2 id="实现-6">实现</h2><p>这个算法的实现其实既简单又复杂，简单在只需依托输入构建一个别名表，每次查表就完了</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> AliasMethodPicker <span class="keyword">struct</span> &#123;</span><br><span class="line">    instances []discovery.Instance</span><br><span class="line">    weightSum <span class="type">int</span></span><br><span class="line">    alias     []<span class="type">int</span></span><br><span class="line">    prob      []<span class="type">float64</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="初始化-6">初始化</h3><p>别名表的构建过程有点复杂，具体可以看我博客 <a href="https://nickxu.me/post/darts-dice-coins-chinese-version">飞镖、骰子和硬币：从离散分布中抽样</a></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newAliasMethodPicker</span><span class="params">(instances []discovery.Instance, weightSum <span class="type">int</span>)</span></span> Picker &#123;</span><br><span class="line">    picker := &amp;AliasMethodPicker&#123;</span><br><span class="line">       instances: instances,</span><br><span class="line">       weightSum: weightSum,</span><br><span class="line">    &#125;</span><br><span class="line">    picker.init()</span><br><span class="line">    <span class="keyword">return</span> picker</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Alias Method need to init before use and after update instances</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *AliasMethodPicker)</span></span> init() &#123;</span><br><span class="line">    n := <span class="built_in">len</span>(a.instances)</span><br><span class="line">    a.alias = <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">    a.prob = <span class="built_in">make</span>([]<span class="type">float64</span>, n)</span><br><span class="line"></span><br><span class="line">    totalWeight := a.weightSum</span><br><span class="line"></span><br><span class="line">    scaledProb := <span class="built_in">make</span>([]<span class="type">float64</span>, n)</span><br><span class="line">    small := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>, n)</span><br><span class="line">    large := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>, n)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, instance := <span class="keyword">range</span> a.instances &#123;</span><br><span class="line">       scaledProb[i] = <span class="type">float64</span>(instance.Weight()) * <span class="type">float64</span>(n) / <span class="type">float64</span>(totalWeight)</span><br><span class="line">       <span class="keyword">if</span> scaledProb[i] &lt; <span class="number">1.0</span> &#123;</span><br><span class="line">          small = <span class="built_in">append</span>(small, i)</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          large = <span class="built_in">append</span>(large, i)</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">len</span>(small) &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">len</span>(large) &gt; <span class="number">0</span> &#123;</span><br><span class="line">       l := small[<span class="built_in">len</span>(small)<span class="number">-1</span>]</span><br><span class="line">       small = small[:<span class="built_in">len</span>(small)<span class="number">-1</span>]</span><br><span class="line">       g := large[<span class="built_in">len</span>(large)<span class="number">-1</span>]</span><br><span class="line">       large = large[:<span class="built_in">len</span>(large)<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">       a.prob[l] = scaledProb[l]</span><br><span class="line">       a.alias[l] = g</span><br><span class="line"></span><br><span class="line">       scaledProb[g] -= <span class="number">1.0</span> - scaledProb[l]</span><br><span class="line">       <span class="keyword">if</span> scaledProb[g] &lt; <span class="number">1.0</span> &#123;</span><br><span class="line">          small = <span class="built_in">append</span>(small, g)</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          large = <span class="built_in">append</span>(large, g)</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">len</span>(large) &gt; <span class="number">0</span> &#123;</span><br><span class="line">       g := large[<span class="built_in">len</span>(large)<span class="number">-1</span>]</span><br><span class="line">       large = large[:<span class="built_in">len</span>(large)<span class="number">-1</span>]</span><br><span class="line">       a.prob[g] = <span class="number">1.0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">len</span>(small) &gt; <span class="number">0</span> &#123;</span><br><span class="line">       l := small[<span class="built_in">len</span>(small)<span class="number">-1</span>]</span><br><span class="line">       small = small[:<span class="built_in">len</span>(small)<span class="number">-1</span>]</span><br><span class="line">       a.prob[l] = <span class="number">1.0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选择实例-6">选择实例</h3><p>这个就非常简单了，取随机数然后查表就行</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Next implements the Picker interface.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *AliasMethodPicker)</span></span> Next(ctx context.Context, request <span class="keyword">interface</span>&#123;&#125;) discovery.Instance &#123;</span><br><span class="line">    i := fastrand.Intn(<span class="built_in">len</span>(a.instances))</span><br><span class="line">    <span class="keyword">if</span> fastrand.Float64() &lt; a.prob[i] &#123;</span><br><span class="line">        <span class="keyword">return</span> a.instances[i]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a.instances[a.alias[i]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="总结">总结</h1><p><a href="https://github.com/cloudwego/kitex/blob/e3c43458225d9c8cb8a43b226cf36a0c4bd630ce/pkg/loadbalance/weighted_balancer_test.go#L263">初始化阶段的 Benchmark</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/Users/nx/Library/Caches/JetBrains/GoLand2023.3/tmp/GoLand/___github_com_cloudwego_kitex_pkg_loadbalance__BenchmarkGetPicker.test -test.v -test.paniconexit0 -test.bench ^\QBenchmarkGetPicker\E$ -test.run ^$</span><br><span class="line">goos: darwin</span><br><span class="line">goarch: arm64</span><br><span class="line">pkg: github.com/cloudwego/kitex/pkg/loadbalance</span><br><span class="line">BenchmarkGetPicker</span><br><span class="line">BenchmarkGetPicker/weight_round_robin</span><br><span class="line">BenchmarkGetPicker/weight_round_robin-8               222835          5348 ns/op       16496 B/op           3 allocs/op</span><br><span class="line">BenchmarkGetPicker/weight_random</span><br><span class="line">BenchmarkGetPicker/weight_random-8                    233304          5194 ns/op       16408 B/op           2 allocs/op</span><br><span class="line">BenchmarkGetPicker/weight_random_with_alias_method</span><br><span class="line">BenchmarkGetPicker/weight_random_with_alias_method-8               232458          5375 ns/op       16408 B/op           2 allocs/op</span><br><span class="line">BenchmarkGetPicker/interleaved_weighted_round_robin</span><br><span class="line">BenchmarkGetPicker/interleaved_weighted_round_robin-8              223707          5308 ns/op       16496 B/op           3 allocs/op</span><br><span class="line">PASS</span><br><span class="line"></span><br><span class="line">进程 已完成，退出代码为 0</span><br></pre></td></tr></table></figure><p><a href="https://github.com/cloudwego/kitex/blob/e3c43458225d9c8cb8a43b226cf36a0c4bd630ce/pkg/loadbalance/weighted_balancer_test.go#L279">选择实例阶段的 Benchmark</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">/Users/nx/Library/Caches/JetBrains/GoLand2023.3/tmp/GoLand/___github_com_cloudwego_kitex_pkg_loadbalance__BenchmarkWeightedPicker_Next.test -test.v -test.paniconexit0 -test.bench ^\QBenchmarkWeightedPicker_Next\E$ -test.run ^$</span><br><span class="line">goos: darwin</span><br><span class="line">goarch: arm64</span><br><span class="line">pkg: github.com/cloudwego/kitex/pkg/loadbalance</span><br><span class="line">BenchmarkWeightedPicker_Next</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_round_robin</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_round_robin/10ins</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_round_robin/10ins-8       81600734            14.25 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_round_robin/100ins</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_round_robin/100ins-8      85023469            14.17 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_round_robin/1000ins</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_round_robin/1000ins-8     85418442            14.10 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_round_robin/10000ins</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_round_robin/10000ins-8                35655         33368 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random/10ins</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random/10ins-8                     47241925            25.41 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random/100ins</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random/100ins-8                     9708295           123.2 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random/1000ins</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random/1000ins-8                    1000000          1055 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random/10000ins</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random/10000ins-8                    110542         10613 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random_with_alias_method</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random_with_alias_method/10ins</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random_with_alias_method/10ins-8             90827661            12.36 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random_with_alias_method/100ins</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random_with_alias_method/100ins-8            95986561            12.52 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random_with_alias_method/1000ins</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random_with_alias_method/1000ins-8           96050268            12.55 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random_with_alias_method/10000ins</span><br><span class="line">BenchmarkWeightedPicker_Next/weight_random_with_alias_method/10000ins-8          95397718            12.64 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/interleaved_weighted_round_robin</span><br><span class="line">BenchmarkWeightedPicker_Next/interleaved_weighted_round_robin/10ins</span><br><span class="line">BenchmarkWeightedPicker_Next/interleaved_weighted_round_robin/10ins-8            87128834            14.76 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/interleaved_weighted_round_robin/100ins</span><br><span class="line">BenchmarkWeightedPicker_Next/interleaved_weighted_round_robin/100ins-8           81406752            13.98 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/interleaved_weighted_round_robin/1000ins</span><br><span class="line">BenchmarkWeightedPicker_Next/interleaved_weighted_round_robin/1000ins-8          85486323            14.07 ns/op</span><br><span class="line">BenchmarkWeightedPicker_Next/interleaved_weighted_round_robin/10000ins</span><br><span class="line">BenchmarkWeightedPicker_Next/interleaved_weighted_round_robin/10000ins-8         86139339            14.06 ns/op</span><br><span class="line">PASS</span><br><span class="line"></span><br><span class="line">进程 已完成，退出代码为 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>看上去还是我写的 Alias Method 最好哈哈哈</p><p>当时导师让我把默认算法改成 Alias Method，我没改，现在有点后悔了 XD</p><blockquote><p>PS：Alias Method 在 Go1.22 版本下会有巨大的性能倒退（我控制变量了一晚上才发现是 Go 版本的问题），究其原因是它所依赖的 fastrand，而 fastrand 直接依赖于  <code>runtime.fastrand</code> ，具体原因请看我的 PR：<a href="https://github.com/bytedance/gopkg/pull/206">bytedance/gopkg#206</a></p></blockquote>]]></content:encoded>
      
      
      
      
      <comments>https://nickxu.me/post/kitex-loadbalance-weighted-balancer.html#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
